<Gratin type="pipeline">
 <int name="majorVersion" val="0"/>
 <int name="minorVersion" val="3"/>
 <IOData name="mainWindow">
  <IOData name="graphWidget">
   <IOData name="graph">
    <uint name="nbNodes" val="46"/>
    <string name="nodeStringId-0" val="imgLoaderId"/>
    <uint name="nodeVersion-0" val="1"/>
    <string name="nodeName-0" val="imageLoader"/>
    <string name="nodePath-0" val="Imaging/"/>
    <string name="nodeDesc-0" val="Image loader"/>
    <string name="nodeHelp-0" val="Load an image."/>
    <uint name="nodeId-0" val="0"/>
    <uint name="nodeGraphId-0" val="0"/>
    <vector2f name="nodePos-0">
     <float name="0" val="-14111.6"/>
     <float name="1" val="-854.665"/>
    </vector2f>
    <int name="nodeInputNameSize-0" val="0"/>
    <int name="nodeOutputNameSize-0" val="1"/>
    <string name="nodeOutputName-0-0" val="image"/>
    <string name="nodeStringId-1" val="imgGenericId"/>
    <uint name="nodeVersion-1" val="1"/>
    <string name="nodeName-1" val="Camera"/>
    <string name="nodePath-1" val="Generic/"/>
    <string name="nodeDesc-1" val="Generic node for image processing"/>
    <string name="nodeHelp-1" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-1" val="1"/>
    <uint name="nodeGraphId-1" val="0"/>
    <vector2f name="nodePos-1">
     <float name="0" val="-13101.4"/>
     <float name="1" val="-858.076"/>
    </vector2f>
    <int name="nodeInputNameSize-1" val="1"/>
    <int name="nodeOutputNameSize-1" val="1"/>
    <string name="nodeInputName-1-0" val="inBuffer0"/>
    <string name="nodeOutputName-1-0" val="cameraMatrix"/>
    <string name="nodeStringId-2" val="imgGenericId"/>
    <uint name="nodeVersion-2" val="1"/>
    <string name="nodeName-2" val="genericImage"/>
    <string name="nodePath-2" val="Generic/"/>
    <string name="nodeDesc-2" val="Generic node for image processing"/>
    <string name="nodeHelp-2" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-2" val="2"/>
    <uint name="nodeGraphId-2" val="0"/>
    <vector2f name="nodePos-2">
     <float name="0" val="-10116.3"/>
     <float name="1" val="-1469.28"/>
    </vector2f>
    <int name="nodeInputNameSize-2" val="1"/>
    <int name="nodeOutputNameSize-2" val="8"/>
    <string name="nodeInputName-2-0" val="inBuffer0"/>
    <string name="nodeOutputName-2-0" val="renderBuffer"/>
    <string name="nodeOutputName-2-1" val="normalVBuffer"/>
    <string name="nodeOutputName-2-2" val="normalWBuffer"/>
    <string name="nodeOutputName-2-3" val="positionBuffer"/>
    <string name="nodeOutputName-2-4" val="depthBuffer"/>
    <string name="nodeOutputName-2-5" val="maskBuffer"/>
    <string name="nodeOutputName-2-6" val="colorBuffer"/>
    <string name="nodeOutputName-2-7" val="velocityBuffer"/>
    <string name="nodeStringId-3" val="imgGenericId"/>
    <uint name="nodeVersion-3" val="1"/>
    <string name="nodeName-3" val="genericImage"/>
    <string name="nodePath-3" val="Generic/"/>
    <string name="nodeDesc-3" val="Generic node for image processing"/>
    <string name="nodeHelp-3" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-3" val="3"/>
    <uint name="nodeGraphId-3" val="0"/>
    <vector2f name="nodePos-3">
     <float name="0" val="-9062.36"/>
     <float name="1" val="2269.11"/>
    </vector2f>
    <int name="nodeInputNameSize-3" val="1"/>
    <int name="nodeOutputNameSize-3" val="1"/>
    <string name="nodeInputName-3-0" val="inBuffer0"/>
    <string name="nodeOutputName-3-0" val="outBuffer0"/>
    <string name="nodeStringId-4" val="phongShadingID"/>
    <uint name="nodeVersion-4" val="1"/>
    <string name="nodeName-4" val="phongShading"/>
    <string name="nodePath-4" val="Rendering/"/>
    <string name="nodeDesc-4" val="Phong shading"/>
    <string name="nodeHelp-4" val="Take a normal map as input and apply a simple Phong shading with a directionnal light. The view vector is approximated with pixel coords but could be obtained as an ouptut of a genericBuffers node.&#xa;&#xa;The light direction is controlled via the mouse in the interaction widget."/>
    <uint name="nodeId-4" val="4"/>
    <uint name="nodeGraphId-4" val="0"/>
    <vector2f name="nodePos-4">
     <float name="0" val="-3315.22"/>
     <float name="1" val="6805.85"/>
    </vector2f>
    <int name="nodeInputNameSize-4" val="1"/>
    <int name="nodeOutputNameSize-4" val="3"/>
    <string name="nodeInputName-4-0" val="normalMap"/>
    <string name="nodeOutputName-4-0" val="shadingMap"/>
    <string name="nodeOutputName-4-1" val="diffuseParamMap"/>
    <string name="nodeOutputName-4-2" val="specularParamMap"/>
    <string name="nodeStringId-5" val="globalMaxMinDepth"/>
    <uint name="nodeVersion-5" val="1"/>
    <string name="nodeName-5" val="globalMaxMinDepth"/>
    <string name="nodePath-5" val="Analysis/global"/>
    <string name="nodeDesc-5" val="Min/max depth"/>
    <string name="nodeHelp-5" val="Compute the maximum color of an image. The resulting color is stored in the last level of the output pyramid. It can be accessed via the following formula: vec2 s = vec2(textureSize(image,0)); float l = 1. + floor(log2(max(s.x,s.y))); vec4 color = textureLod(image,vec2(.5),l); "/>
    <uint name="nodeId-5" val="5"/>
    <uint name="nodeGraphId-5" val="0"/>
    <vector2f name="nodePos-5">
     <float name="0" val="-9062.47"/>
     <float name="1" val="368.687"/>
    </vector2f>
    <int name="nodeInputNameSize-5" val="1"/>
    <int name="nodeOutputNameSize-5" val="1"/>
    <string name="nodeInputName-5-0" val="image"/>
    <string name="nodeOutputName-5-0" val="maxMinDepth"/>
    <string name="nodeStringId-6" val="normalizeDepth"/>
    <uint name="nodeVersion-6" val="1"/>
    <string name="nodeName-6" val="normalizeDepth"/>
    <string name="nodePath-6" val="SilhouetteExtension/"/>
    <string name="nodeDesc-6" val="Normalize depth buffer"/>
    <string name="nodeHelp-6" val="This node was designed to create custom shaders The settings widget allows to modify input, output parameters as well as the output image sizes. WARNING1: you will be able to modify the number of inputs/outputs only if the node is entirely disconnected. WARNING2: input/output names will not be modified if a custom node is created from this node because these names should be edited directly in the setting widget WARNING3: modifying the settings of a node will remove all previously defined keyframes * Special data allows to modify the output image (using a multiple of the input size, plus an offset vector Check use mouse/keyboard if you want to interact with the mouse * Input data allows to add/remove/displace input data (only if disconnected) * Output data allows to add/remove/displace output data (only if disconnected) * Param data allows to add/remove parameters that will automatically be included in your shader. For each of them you may choose a proper name, type, and min/max/default values. Check keyframes if you want your parameter to be accessible through the animation widget In the node interface itself: Source tab contains the head and body of your GLSL source (only the body is editable) Params tab contains the defined widgets according to your setting choices Log tab contains compilation errors Once your settings and source completed, click on apply to see the result "/>
    <uint name="nodeId-6" val="6"/>
    <uint name="nodeGraphId-6" val="0"/>
    <vector2f name="nodePos-6">
     <float name="0" val="-6722.25"/>
     <float name="1" val="363.995"/>
    </vector2f>
    <int name="nodeInputNameSize-6" val="1"/>
    <int name="nodeOutputNameSize-6" val="1"/>
    <string name="nodeInputName-6-0" val="inBuffer0"/>
    <string name="nodeOutputName-6-0" val="outBuffer0"/>
    <string name="nodeStringId-7" val="bilateralFilterID"/>
    <uint name="nodeVersion-7" val="1"/>
    <string name="nodeName-7" val="planeFittingGradient"/>
    <string name="nodePath-7" val="Imaging/"/>
    <string name="nodeDesc-7" val="Bilateral filter [Tomasi and Manduchi ICCV 1998]"/>
    <string name="nodeHelp-7" val="Implementation of the bilateral filter from the paper &quot;Bilateral Filtering for Gray and Color Images&quot; [Tomasi and Manduchi ICCV 1998].&#xa;&#xa;sigmaS controls the spatial averaging. &#xa;sigmaL controls controls edges (how much intensity variations to stop the blur)."/>
    <uint name="nodeId-7" val="7"/>
    <uint name="nodeGraphId-7" val="0"/>
    <vector2f name="nodePos-7">
     <float name="0" val="747.763"/>
     <float name="1" val="2545.39"/>
    </vector2f>
    <int name="nodeInputNameSize-7" val="2"/>
    <int name="nodeOutputNameSize-7" val="1"/>
    <string name="nodeInputName-7-0" val="slopeMap"/>
    <string name="nodeInputName-7-1" val="depthMap"/>
    <string name="nodeOutputName-7-0" val="gradient"/>
    <string name="nodeStringId-8" val="imgLoaderId"/>
    <uint name="nodeVersion-8" val="1"/>
    <string name="nodeName-8" val="imageLoader"/>
    <string name="nodePath-8" val="Imaging/"/>
    <string name="nodeDesc-8" val="Image loader"/>
    <string name="nodeHelp-8" val="Load an image."/>
    <uint name="nodeId-8" val="8"/>
    <uint name="nodeGraphId-8" val="0"/>
    <vector2f name="nodePos-8">
     <float name="0" val="4709.18"/>
     <float name="1" val="-1434.83"/>
    </vector2f>
    <int name="nodeInputNameSize-8" val="0"/>
    <int name="nodeOutputNameSize-8" val="1"/>
    <string name="nodeOutputName-8-0" val="image"/>
    <string name="nodeStringId-9" val="imgGenericId"/>
    <uint name="nodeVersion-9" val="1"/>
    <string name="nodeName-9" val="genericImage"/>
    <string name="nodePath-9" val="Generic/"/>
    <string name="nodeDesc-9" val="Generic node for image processing"/>
    <string name="nodeHelp-9" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-9" val="9"/>
    <uint name="nodeGraphId-9" val="0"/>
    <vector2f name="nodePos-9">
     <float name="0" val="5916.36"/>
     <float name="1" val="-1347.22"/>
    </vector2f>
    <int name="nodeInputNameSize-9" val="1"/>
    <int name="nodeOutputNameSize-9" val="1"/>
    <string name="nodeInputName-9-0" val="inBuffer0"/>
    <string name="nodeOutputName-9-0" val="outBuffer0"/>
    <string name="nodeStringId-10" val="pyramidGenericId"/>
    <uint name="nodeVersion-10" val="1"/>
    <string name="nodeName-10" val="genericPyramid"/>
    <string name="nodePath-10" val="Generic/"/>
    <string name="nodeDesc-10" val="Generic node for pyramidal image processing"/>
    <string name="nodeHelp-10" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-10" val="10"/>
    <uint name="nodeGraphId-10" val="0"/>
    <vector2f name="nodePos-10">
     <float name="0" val="6849.64"/>
     <float name="1" val="-382.499"/>
    </vector2f>
    <int name="nodeInputNameSize-10" val="1"/>
    <int name="nodeOutputNameSize-10" val="1"/>
    <string name="nodeInputName-10-0" val="inBuffer0"/>
    <string name="nodeOutputName-10-0" val="outBuffer0"/>
    <string name="nodeStringId-11" val="imgGaussianBlurId"/>
    <uint name="nodeVersion-11" val="1"/>
    <string name="nodeName-11" val="gaussianBlur"/>
    <string name="nodePath-11" val="Imaging/"/>
    <string name="nodeDesc-11" val="Gaussian blur"/>
    <string name="nodeHelp-11" val="The amount of blur is controled by the kernel size.&#xa;Increase this size to increase the blur"/>
    <uint name="nodeId-11" val="11"/>
    <uint name="nodeGraphId-11" val="0"/>
    <vector2f name="nodePos-11">
     <float name="0" val="6856.29"/>
     <float name="1" val="-785.068"/>
    </vector2f>
    <int name="nodeInputNameSize-11" val="1"/>
    <int name="nodeOutputNameSize-11" val="1"/>
    <string name="nodeInputName-11-0" val="image"/>
    <string name="nodeOutputName-11-0" val="filtering"/>
    <string name="nodeStringId-12" val="imageGradientID"/>
    <uint name="nodeVersion-12" val="1"/>
    <string name="nodeName-12" val="imageGradient"/>
    <string name="nodePath-12" val="Analysis/"/>
    <string name="nodeDesc-12" val="Gradient of an image"/>
    <string name="nodeHelp-12" val="Compute the (centered) gradient of an image. &#xa;By default, the color average is used for estimating luminance. &#xa;This might be changed in the &quot;value&quot; function. &#xa;&#xa;Return the gradient in the 2 first output channels. "/>
    <uint name="nodeId-12" val="12"/>
    <uint name="nodeGraphId-12" val="0"/>
    <vector2f name="nodePos-12">
     <float name="0" val="7448.17"/>
     <float name="1" val="-1270.31"/>
    </vector2f>
    <int name="nodeInputNameSize-12" val="2"/>
    <int name="nodeOutputNameSize-12" val="1"/>
    <string name="nodeInputName-12-0" val="image"/>
    <string name="nodeInputName-12-1" val="inBuffer1"/>
    <string name="nodeOutputName-12-0" val="gradient"/>
    <string name="nodeStringId-13" val="pyramidGenericId"/>
    <uint name="nodeVersion-13" val="1"/>
    <string name="nodeName-13" val="genericPyramid"/>
    <string name="nodePath-13" val="Generic/"/>
    <string name="nodeDesc-13" val="Generic node for pyramidal image processing"/>
    <string name="nodeHelp-13" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-13" val="13"/>
    <uint name="nodeGraphId-13" val="0"/>
    <vector2f name="nodePos-13">
     <float name="0" val="7887.25"/>
     <float name="1" val="-1265.5"/>
    </vector2f>
    <int name="nodeInputNameSize-13" val="1"/>
    <int name="nodeOutputNameSize-13" val="1"/>
    <string name="nodeInputName-13-0" val="inBuffer0"/>
    <string name="nodeOutputName-13-0" val="outBuffer0"/>
    <string name="nodeStringId-14" val="imgGenericId"/>
    <uint name="nodeVersion-14" val="1"/>
    <string name="nodeName-14" val="genericImage"/>
    <string name="nodePath-14" val="Generic/"/>
    <string name="nodeDesc-14" val="Generic node for image processing"/>
    <string name="nodeHelp-14" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-14" val="14"/>
    <uint name="nodeGraphId-14" val="0"/>
    <vector2f name="nodePos-14">
     <float name="0" val="-9084.88"/>
     <float name="1" val="3634.71"/>
    </vector2f>
    <int name="nodeInputNameSize-14" val="1"/>
    <int name="nodeOutputNameSize-14" val="1"/>
    <string name="nodeInputName-14-0" val="inBuffer0"/>
    <string name="nodeOutputName-14-0" val="outBuffer0"/>
    <string name="nodeStringId-15" val="imgGenericId"/>
    <uint name="nodeVersion-15" val="1"/>
    <string name="nodeName-15" val="genericImage"/>
    <string name="nodePath-15" val="Generic/"/>
    <string name="nodeDesc-15" val="Generic node for image processing"/>
    <string name="nodeHelp-15" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-15" val="15"/>
    <uint name="nodeGraphId-15" val="0"/>
    <vector2f name="nodePos-15">
     <float name="0" val="7536.45"/>
     <float name="1" val="3516.65"/>
    </vector2f>
    <int name="nodeInputNameSize-15" val="1"/>
    <int name="nodeOutputNameSize-15" val="1"/>
    <string name="nodeInputName-15-0" val="inBuffer0"/>
    <string name="nodeOutputName-15-0" val="outBuffer0"/>
    <string name="nodeStringId-16" val="imgGenericId"/>
    <uint name="nodeVersion-16" val="1"/>
    <string name="nodeName-16" val="genericImage"/>
    <string name="nodePath-16" val="Generic/"/>
    <string name="nodeDesc-16" val="Generic node for image processing"/>
    <string name="nodeHelp-16" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-16" val="16"/>
    <uint name="nodeGraphId-16" val="0"/>
    <vector2f name="nodePos-16">
     <float name="0" val="-9063.02"/>
     <float name="1" val="996.626"/>
    </vector2f>
    <int name="nodeInputNameSize-16" val="1"/>
    <int name="nodeOutputNameSize-16" val="1"/>
    <string name="nodeInputName-16-0" val="inBuffer0"/>
    <string name="nodeOutputName-16-0" val="outBuffer0"/>
    <string name="nodeStringId-17" val="imgGenericId"/>
    <uint name="nodeVersion-17" val="1"/>
    <string name="nodeName-17" val="genericImage"/>
    <string name="nodePath-17" val="Generic/"/>
    <string name="nodeDesc-17" val="Generic node for image processing"/>
    <string name="nodeHelp-17" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-17" val="17"/>
    <uint name="nodeGraphId-17" val="0"/>
    <vector2f name="nodePos-17">
     <float name="0" val="7547.53"/>
     <float name="1" val="2870.47"/>
    </vector2f>
    <int name="nodeInputNameSize-17" val="1"/>
    <int name="nodeOutputNameSize-17" val="1"/>
    <string name="nodeInputName-17-0" val="inBuffer0"/>
    <string name="nodeOutputName-17-0" val="outBuffer0"/>
    <string name="nodeStringId-18" val="imgGenericId"/>
    <uint name="nodeVersion-18" val="1"/>
    <string name="nodeName-18" val="genericImage"/>
    <string name="nodePath-18" val="Generic/"/>
    <string name="nodeDesc-18" val="Generic node for image processing"/>
    <string name="nodeHelp-18" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-18" val="18"/>
    <uint name="nodeGraphId-18" val="0"/>
    <vector2f name="nodePos-18">
     <float name="0" val="-9065.56"/>
     <float name="1" val="1637.86"/>
    </vector2f>
    <int name="nodeInputNameSize-18" val="1"/>
    <int name="nodeOutputNameSize-18" val="1"/>
    <string name="nodeInputName-18-0" val="inBuffer0"/>
    <string name="nodeOutputName-18-0" val="outBuffer0"/>
    <string name="nodeStringId-19" val="imgGenericId"/>
    <uint name="nodeVersion-19" val="1"/>
    <string name="nodeName-19" val="genericImage"/>
    <string name="nodePath-19" val="Generic/"/>
    <string name="nodeDesc-19" val="Generic node for image processing"/>
    <string name="nodeHelp-19" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-19" val="19"/>
    <uint name="nodeGraphId-19" val="0"/>
    <vector2f name="nodePos-19">
     <float name="0" val="7568.61"/>
     <float name="1" val="2286.02"/>
    </vector2f>
    <int name="nodeInputNameSize-19" val="1"/>
    <int name="nodeOutputNameSize-19" val="1"/>
    <string name="nodeInputName-19-0" val="inBuffer0"/>
    <string name="nodeOutputName-19-0" val="outBuffer0"/>
    <string name="nodeStringId-20" val="imgGenericId"/>
    <uint name="nodeVersion-20" val="1"/>
    <string name="nodeName-20" val="genericImage"/>
    <string name="nodePath-20" val="Generic/"/>
    <string name="nodeDesc-20" val="Generic node for image processing"/>
    <string name="nodeHelp-20" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-20" val="20"/>
    <uint name="nodeGraphId-20" val="0"/>
    <vector2f name="nodePos-20">
     <float name="0" val="-9060.77"/>
     <float name="1" val="2853.56"/>
    </vector2f>
    <int name="nodeInputNameSize-20" val="1"/>
    <int name="nodeOutputNameSize-20" val="1"/>
    <string name="nodeInputName-20-0" val="inBuffer0"/>
    <string name="nodeOutputName-20-0" val="outBuffer0"/>
    <string name="nodeStringId-21" val="imgGenericId"/>
    <uint name="nodeVersion-21" val="1"/>
    <string name="nodeName-21" val="genericImage"/>
    <string name="nodePath-21" val="Generic/"/>
    <string name="nodeDesc-21" val="Generic node for image processing"/>
    <string name="nodeHelp-21" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-21" val="21"/>
    <uint name="nodeGraphId-21" val="0"/>
    <vector2f name="nodePos-21">
     <float name="0" val="-419.204"/>
     <float name="1" val="6629.94"/>
    </vector2f>
    <int name="nodeInputNameSize-21" val="2"/>
    <int name="nodeOutputNameSize-21" val="1"/>
    <string name="nodeInputName-21-0" val="color"/>
    <string name="nodeInputName-21-1" val="shade"/>
    <string name="nodeOutputName-21-0" val="outBuffer0"/>
    <string name="nodeStringId-22" val="imgGenericId"/>
    <uint name="nodeVersion-22" val="1"/>
    <string name="nodeName-22" val="shading"/>
    <string name="nodePath-22" val="Generic/"/>
    <string name="nodeDesc-22" val="Generic node for image processing"/>
    <string name="nodeHelp-22" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-22" val="22"/>
    <uint name="nodeGraphId-22" val="0"/>
    <vector2f name="nodePos-22">
     <float name="0" val="976.997"/>
     <float name="1" val="6593.79"/>
    </vector2f>
    <int name="nodeInputNameSize-22" val="1"/>
    <int name="nodeOutputNameSize-22" val="1"/>
    <string name="nodeInputName-22-0" val="inBuffer0"/>
    <string name="nodeOutputName-22-0" val="shadingMap"/>
    <string name="nodeStringId-23" val="imgGenericId"/>
    <uint name="nodeVersion-23" val="1"/>
    <string name="nodeName-23" val="genericImage"/>
    <string name="nodePath-23" val="Generic/"/>
    <string name="nodeDesc-23" val="Generic node for image processing"/>
    <string name="nodeHelp-23" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-23" val="23"/>
    <uint name="nodeGraphId-23" val="0"/>
    <vector2f name="nodePos-23">
     <float name="0" val="7556.34"/>
     <float name="1" val="1645.7"/>
    </vector2f>
    <int name="nodeInputNameSize-23" val="1"/>
    <int name="nodeOutputNameSize-23" val="1"/>
    <string name="nodeInputName-23-0" val="inBuffer0"/>
    <string name="nodeOutputName-23-0" val="outBuffer0"/>
    <string name="nodeStringId-24" val="bilateralFilterID"/>
    <uint name="nodeVersion-24" val="1"/>
    <string name="nodeName-24" val="planeFittingGradient"/>
    <string name="nodePath-24" val="Imaging/"/>
    <string name="nodeDesc-24" val="Bilateral filter [Tomasi and Manduchi ICCV 1998]"/>
    <string name="nodeHelp-24" val="Implementation of the bilateral filter from the paper &quot;Bilateral Filtering for Gray and Color Images&quot; [Tomasi and Manduchi ICCV 1998].&#xa;&#xa;sigmaS controls the spatial averaging. &#xa;sigmaL controls controls edges (how much intensity variations to stop the blur)."/>
    <uint name="nodeId-24" val="24"/>
    <uint name="nodeGraphId-24" val="0"/>
    <vector2f name="nodePos-24">
     <float name="0" val="-325.39"/>
     <float name="1" val="-110.476"/>
    </vector2f>
    <int name="nodeInputNameSize-24" val="2"/>
    <int name="nodeOutputNameSize-24" val="1"/>
    <string name="nodeInputName-24-0" val="slopeMap"/>
    <string name="nodeInputName-24-1" val="depthMap"/>
    <string name="nodeOutputName-24-0" val="gradient"/>
    <string name="nodeStringId-25" val="imgGenericId"/>
    <uint name="nodeVersion-25" val="1"/>
    <string name="nodeName-25" val="flowField"/>
    <string name="nodePath-25" val="Generic/"/>
    <string name="nodeDesc-25" val="Generic node for image processing"/>
    <string name="nodeHelp-25" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-25" val="25"/>
    <uint name="nodeGraphId-25" val="0"/>
    <vector2f name="nodePos-25">
     <float name="0" val="1184.1"/>
     <float name="1" val="1421.1"/>
    </vector2f>
    <int name="nodeInputNameSize-25" val="2"/>
    <int name="nodeOutputNameSize-25" val="1"/>
    <string name="nodeInputName-25-0" val="inBuffer0"/>
    <string name="nodeInputName-25-1" val="inBuffer1"/>
    <string name="nodeOutputName-25-0" val="flowMap"/>
    <string name="nodeStringId-26" val="imgGenericId"/>
    <uint name="nodeVersion-26" val="1"/>
    <string name="nodeName-26" val="depthFlow"/>
    <string name="nodePath-26" val="Generic/"/>
    <string name="nodeDesc-26" val="Generic node for image processing"/>
    <string name="nodeHelp-26" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-26" val="26"/>
    <uint name="nodeGraphId-26" val="0"/>
    <vector2f name="nodePos-26">
     <float name="0" val="2276.61"/>
     <float name="1" val="2828.53"/>
    </vector2f>
    <int name="nodeInputNameSize-26" val="2"/>
    <int name="nodeOutputNameSize-26" val="1"/>
    <string name="nodeInputName-26-0" val="inBuffer0"/>
    <string name="nodeInputName-26-1" val="inBuffer1"/>
    <string name="nodeOutputName-26-0" val="outBuffer0"/>
    <string name="nodeStringId-27" val="imgGenericId"/>
    <uint name="nodeVersion-27" val="1"/>
    <string name="nodeName-27" val="genericImage"/>
    <string name="nodePath-27" val="Generic/"/>
    <string name="nodeDesc-27" val="Generic node for image processing"/>
    <string name="nodeHelp-27" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-27" val="27"/>
    <uint name="nodeGraphId-27" val="0"/>
    <vector2f name="nodePos-27">
     <float name="0" val="7554.35"/>
     <float name="1" val="995.404"/>
    </vector2f>
    <int name="nodeInputNameSize-27" val="1"/>
    <int name="nodeOutputNameSize-27" val="1"/>
    <string name="nodeInputName-27-0" val="inBuffer0"/>
    <string name="nodeOutputName-27-0" val="outBuffer0"/>
    <string name="nodeStringId-28" val="3DGradientNoiseID"/>
    <uint name="nodeVersion-28" val="1"/>
    <string name="nodeName-28" val="3DWorleyNoise"/>
    <string name="nodePath-28" val="Texture/"/>
    <string name="nodeDesc-28" val="Fractal 3D procedural gradient noise"/>
    <string name="nodeHelp-28" val="Noise based on the interpolation of pseudo random gradients on a 3D grid. &#xa;The octaves allows gradient noises with different frequencies &#xa;and amplitudes to be added and create a fractal noise. &#xa;The persistence defines how the amplitude of the signal is scaled on each octave.&#xa;The ZCoord parameter allows to navigate along the third dimension. "/>
    <uint name="nodeId-28" val="28"/>
    <uint name="nodeGraphId-28" val="0"/>
    <vector2f name="nodePos-28">
     <float name="0" val="-4170.11"/>
     <float name="1" val="3841.27"/>
    </vector2f>
    <int name="nodeInputNameSize-28" val="2"/>
    <int name="nodeOutputNameSize-28" val="1"/>
    <string name="nodeInputName-28-0" val="matrices"/>
    <string name="nodeInputName-28-1" val="positionMap"/>
    <string name="nodeOutputName-28-0" val="proceduralTex"/>
    <string name="nodeStringId-29" val="3DGradientNoiseID"/>
    <uint name="nodeVersion-29" val="1"/>
    <string name="nodeName-29" val="3DWorleyNoise"/>
    <string name="nodePath-29" val="Texture/"/>
    <string name="nodeDesc-29" val="Fractal 3D procedural gradient noise"/>
    <string name="nodeHelp-29" val="Noise based on the interpolation of pseudo random gradients on a 3D grid. &#xa;The octaves allows gradient noises with different frequencies &#xa;and amplitudes to be added and create a fractal noise. &#xa;The persistence defines how the amplitude of the signal is scaled on each octave.&#xa;The ZCoord parameter allows to navigate along the third dimension. "/>
    <uint name="nodeId-29" val="29"/>
    <uint name="nodeGraphId-29" val="0"/>
    <vector2f name="nodePos-29">
     <float name="0" val="-4296.16"/>
     <float name="1" val="4907.38"/>
    </vector2f>
    <int name="nodeInputNameSize-29" val="2"/>
    <int name="nodeOutputNameSize-29" val="1"/>
    <string name="nodeInputName-29-0" val="matrices"/>
    <string name="nodeInputName-29-1" val="positionMap"/>
    <string name="nodeOutputName-29-0" val="proceduralTex"/>
    <string name="nodeStringId-30" val="imgGenericId"/>
    <uint name="nodeVersion-30" val="1"/>
    <string name="nodeName-30" val="genericImage"/>
    <string name="nodePath-30" val="Generic/"/>
    <string name="nodeDesc-30" val="Generic node for image processing"/>
    <string name="nodeHelp-30" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-30" val="30"/>
    <uint name="nodeGraphId-30" val="0"/>
    <vector2f name="nodePos-30">
     <float name="0" val="-3231.99"/>
     <float name="1" val="4994.25"/>
    </vector2f>
    <int name="nodeInputNameSize-30" val="2"/>
    <int name="nodeOutputNameSize-30" val="1"/>
    <string name="nodeInputName-30-0" val="inBuffer0"/>
    <string name="nodeInputName-30-1" val="inBuffer1"/>
    <string name="nodeOutputName-30-0" val="outBuffer0"/>
    <string name="nodeStringId-31" val="imgGenericId"/>
    <uint name="nodeVersion-31" val="1"/>
    <string name="nodeName-31" val="genericImage"/>
    <string name="nodePath-31" val="Generic/"/>
    <string name="nodeDesc-31" val="Generic node for image processing"/>
    <string name="nodeHelp-31" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-31" val="31"/>
    <uint name="nodeGraphId-31" val="0"/>
    <vector2f name="nodePos-31">
     <float name="0" val="-2007.06"/>
     <float name="1" val="4509.5"/>
    </vector2f>
    <int name="nodeInputNameSize-31" val="2"/>
    <int name="nodeOutputNameSize-31" val="1"/>
    <string name="nodeInputName-31-0" val="inBuffer0"/>
    <string name="nodeInputName-31-1" val="inBuffer1"/>
    <string name="nodeOutputName-31-0" val="outBuffer0"/>
    <string name="nodeStringId-32" val="imgGenericId"/>
    <uint name="nodeVersion-32" val="1"/>
    <string name="nodeName-32" val="genericImage"/>
    <string name="nodePath-32" val="Generic/"/>
    <string name="nodeDesc-32" val="Generic node for image processing"/>
    <string name="nodeHelp-32" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-32" val="32"/>
    <uint name="nodeGraphId-32" val="0"/>
    <vector2f name="nodePos-32">
     <float name="0" val="-722.99"/>
     <float name="1" val="4556.05"/>
    </vector2f>
    <int name="nodeInputNameSize-32" val="2"/>
    <int name="nodeOutputNameSize-32" val="1"/>
    <string name="nodeInputName-32-0" val="inBuffer0"/>
    <string name="nodeInputName-32-1" val="inBuffer1"/>
    <string name="nodeOutputName-32-0" val="outBuffer0"/>
    <string name="nodeStringId-33" val="normalizeDepth"/>
    <uint name="nodeVersion-33" val="1"/>
    <string name="nodeName-33" val="normalizeDepth"/>
    <string name="nodePath-33" val="SilhouetteExtension/"/>
    <string name="nodeDesc-33" val="Normalize depth buffer"/>
    <string name="nodeHelp-33" val="This node was designed to create custom shaders The settings widget allows to modify input, output parameters as well as the output image sizes. WARNING1: you will be able to modify the number of inputs/outputs only if the node is entirely disconnected. WARNING2: input/output names will not be modified if a custom node is created from this node because these names should be edited directly in the setting widget WARNING3: modifying the settings of a node will remove all previously defined keyframes * Special data allows to modify the output image (using a multiple of the input size, plus an offset vector Check use mouse/keyboard if you want to interact with the mouse * Input data allows to add/remove/displace input data (only if disconnected) * Output data allows to add/remove/displace output data (only if disconnected) * Param data allows to add/remove parameters that will automatically be included in your shader. For each of them you may choose a proper name, type, and min/max/default values. Check keyframes if you want your parameter to be accessible through the animation widget In the node interface itself: Source tab contains the head and body of your GLSL source (only the body is editable) Params tab contains the defined widgets according to your setting choices Log tab contains compilation errors Once your settings and source completed, click on apply to see the result "/>
    <uint name="nodeId-33" val="33"/>
    <uint name="nodeGraphId-33" val="0"/>
    <vector2f name="nodePos-33">
     <float name="0" val="-1452.52"/>
     <float name="1" val="3365.33"/>
    </vector2f>
    <int name="nodeInputNameSize-33" val="1"/>
    <int name="nodeOutputNameSize-33" val="1"/>
    <string name="nodeInputName-33-0" val="inBuffer0"/>
    <string name="nodeOutputName-33-0" val="outBuffer0"/>
    <string name="nodeStringId-34" val="imgGenericId"/>
    <uint name="nodeVersion-34" val="1"/>
    <string name="nodeName-34" val="impulsesPlusSplatSize"/>
    <string name="nodePath-34" val="Generic/"/>
    <string name="nodeDesc-34" val="Generic node for image processing"/>
    <string name="nodeHelp-34" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-34" val="34"/>
    <uint name="nodeGraphId-34" val="0"/>
    <vector2f name="nodePos-34">
     <float name="0" val="908.489"/>
     <float name="1" val="4429.83"/>
    </vector2f>
    <int name="nodeInputNameSize-34" val="2"/>
    <int name="nodeOutputNameSize-34" val="1"/>
    <string name="nodeInputName-34-0" val="inBuffer0"/>
    <string name="nodeInputName-34-1" val="inBuffer1"/>
    <string name="nodeOutputName-34-0" val="outBuffer0"/>
    <string name="nodeStringId-35" val="imgGenericId"/>
    <uint name="nodeVersion-35" val="1"/>
    <string name="nodeName-35" val="genericImage"/>
    <string name="nodePath-35" val="Generic/"/>
    <string name="nodeDesc-35" val="Generic node for image processing"/>
    <string name="nodeHelp-35" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-35" val="35"/>
    <uint name="nodeGraphId-35" val="0"/>
    <vector2f name="nodePos-35">
     <float name="0" val="3493.24"/>
     <float name="1" val="3037.82"/>
    </vector2f>
    <int name="nodeInputNameSize-35" val="2"/>
    <int name="nodeOutputNameSize-35" val="1"/>
    <string name="nodeInputName-35-0" val="inBuffer0"/>
    <string name="nodeInputName-35-1" val="inBuffer1"/>
    <string name="nodeOutputName-35-0" val="outBuffer0"/>
    <string name="nodeStringId-36" val="globalMaxMinDepth"/>
    <uint name="nodeVersion-36" val="1"/>
    <string name="nodeName-36" val="globalMaxMinDepth"/>
    <string name="nodePath-36" val="Analysis/global"/>
    <string name="nodeDesc-36" val="Min/max depth"/>
    <string name="nodeHelp-36" val="Compute the maximum color of an image. The resulting color is stored in the last level of the output pyramid. It can be accessed via the following formula: vec2 s = vec2(textureSize(image,0)); float l = 1. + floor(log2(max(s.x,s.y))); vec4 color = textureLod(image,vec2(.5),l); "/>
    <uint name="nodeId-36" val="36"/>
    <uint name="nodeGraphId-36" val="0"/>
    <vector2f name="nodePos-36">
     <float name="0" val="7569.06"/>
     <float name="1" val="383.104"/>
    </vector2f>
    <int name="nodeInputNameSize-36" val="1"/>
    <int name="nodeOutputNameSize-36" val="1"/>
    <string name="nodeInputName-36-0" val="image"/>
    <string name="nodeOutputName-36-0" val="maxMinDepth"/>
    <string name="nodeStringId-37" val="stylization_v3Id"/>
    <uint name="nodeVersion-37" val="1"/>
    <string name="nodeName-37" val="stylization_v3"/>
    <string name="nodePath-37" val="stylization/"/>
    <string name="nodeDesc-37" val="procedural stylisation with image as splat"/>
    <string name="nodeHelp-37" val="procedural style.&#xa;TODO"/>
    <uint name="nodeId-37" val="37"/>
    <uint name="nodeGraphId-37" val="0"/>
    <vector2f name="nodePos-37">
     <float name="0" val="9268.77"/>
     <float name="1" val="255.936"/>
    </vector2f>
    <int name="nodeInputNameSize-37" val="8"/>
    <int name="nodeOutputNameSize-37" val="1"/>
    <string name="nodeInputName-37-0" val="matrices"/>
    <string name="nodeInputName-37-1" val="positionWMap"/>
    <string name="nodeInputName-37-2" val="normalWMap"/>
    <string name="nodeInputName-37-3" val="colorMap"/>
    <string name="nodeInputName-37-4" val="depthMap"/>
    <string name="nodeInputName-37-5" val="noiseMap"/>
    <string name="nodeInputName-37-6" val="splatMap"/>
    <string name="nodeInputName-37-7" val="splatNormalMap"/>
    <string name="nodeOutputName-37-0" val="rendering"/>
    <string name="nodeStringId-38" val="imageGradientID"/>
    <uint name="nodeVersion-38" val="1"/>
    <string name="nodeName-38" val="imageGradient"/>
    <string name="nodePath-38" val="Analysis/"/>
    <string name="nodeDesc-38" val="Gradient of an image"/>
    <string name="nodeHelp-38" val="Compute the (centered) gradient of an image. &#xa;By default, the color average is used for estimating luminance. &#xa;This might be changed in the &quot;value&quot; function. &#xa;&#xa;Return the gradient in the 2 first output channels. "/>
    <uint name="nodeId-38" val="38"/>
    <uint name="nodeGraphId-38" val="0"/>
    <vector2f name="nodePos-38">
     <float name="0" val="1194.84"/>
     <float name="1" val="507.895"/>
    </vector2f>
    <int name="nodeInputNameSize-38" val="1"/>
    <int name="nodeOutputNameSize-38" val="1"/>
    <string name="nodeInputName-38-0" val="image"/>
    <string name="nodeOutputName-38-0" val="gradient"/>
    <string name="nodeStringId-39" val="3DGradientNoiseID"/>
    <uint name="nodeVersion-39" val="1"/>
    <string name="nodeName-39" val="3DWorleyNoise"/>
    <string name="nodePath-39" val="Texture/"/>
    <string name="nodeDesc-39" val="Fractal 3D procedural gradient noise"/>
    <string name="nodeHelp-39" val="Noise based on the interpolation of pseudo random gradients on a 3D grid. &#xa;The octaves allows gradient noises with different frequencies &#xa;and amplitudes to be added and create a fractal noise. &#xa;The persistence defines how the amplitude of the signal is scaled on each octave.&#xa;The ZCoord parameter allows to navigate along the third dimension. "/>
    <uint name="nodeId-39" val="39"/>
    <uint name="nodeGraphId-39" val="0"/>
    <vector2f name="nodePos-39">
     <float name="0" val="-7148.86"/>
     <float name="1" val="-956.807"/>
    </vector2f>
    <int name="nodeInputNameSize-39" val="2"/>
    <int name="nodeOutputNameSize-39" val="1"/>
    <string name="nodeInputName-39-0" val="matrices"/>
    <string name="nodeInputName-39-1" val="positionMap"/>
    <string name="nodeOutputName-39-0" val="proceduralTex"/>
    <string name="nodeStringId-40" val="phongShadingID"/>
    <uint name="nodeVersion-40" val="1"/>
    <string name="nodeName-40" val="phongShading"/>
    <string name="nodePath-40" val="Rendering/"/>
    <string name="nodeDesc-40" val="Phong shading"/>
    <string name="nodeHelp-40" val="Take a normal map as input and apply a simple Phong shading with a directionnal light. The view vector is approximated with pixel coords but could be obtained as an ouptut of a genericBuffers node.&#xa;&#xa;The light direction is controlled via the mouse in the interaction widget."/>
    <uint name="nodeId-40" val="40"/>
    <uint name="nodeGraphId-40" val="0"/>
    <vector2f name="nodePos-40">
     <float name="0" val="-5033.97"/>
     <float name="1" val="2852.05"/>
    </vector2f>
    <int name="nodeInputNameSize-40" val="1"/>
    <int name="nodeOutputNameSize-40" val="1"/>
    <string name="nodeInputName-40-0" val="normalMap"/>
    <string name="nodeOutputName-40-0" val="shading"/>
    <string name="nodeStringId-41" val="gbuffersGenericId"/>
    <uint name="nodeVersion-41" val="1"/>
    <string name="nodeName-41" val="genericObjLoader"/>
    <string name="nodePath-41" val="Generic/"/>
    <string name="nodeDesc-41" val="Generic node for 3D object processing"/>
    <string name="nodeHelp-41" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-41" val="41"/>
    <uint name="nodeGraphId-41" val="0"/>
    <vector2f name="nodePos-41">
     <float name="0" val="-11726.2"/>
     <float name="1" val="-4297.86"/>
    </vector2f>
    <int name="nodeInputNameSize-41" val="1"/>
    <int name="nodeOutputNameSize-41" val="1"/>
    <string name="nodeInputName-41-0" val="inBuffer0"/>
    <string name="nodeOutputName-41-0" val="outBuffer0"/>
    <string name="nodeStringId-42" val="advancedGbuffers"/>
    <uint name="nodeVersion-42" val="1"/>
    <string name="nodeName-42" val="AdvancedGBuffers"/>
    <string name="nodePath-42" val="Custom/"/>
    <string name="nodeDesc-42" val="Generic node for 3D object processing"/>
    <string name="nodeHelp-42" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-42" val="42"/>
    <uint name="nodeGraphId-42" val="1"/>
    <vector2f name="nodePos-42">
     <float name="0" val="-9054.79"/>
     <float name="1" val="-5723.58"/>
    </vector2f>
    <int name="nodeInputNameSize-42" val="1"/>
    <int name="nodeOutputNameSize-42" val="8"/>
    <string name="nodeInputName-42-0" val="inBuffer0"/>
    <string name="nodeOutputName-42-0" val="cameraParameters"/>
    <string name="nodeOutputName-42-1" val="normalVBuffer"/>
    <string name="nodeOutputName-42-2" val="normalWBuffer"/>
    <string name="nodeOutputName-42-3" val="tangentVBuffer"/>
    <string name="nodeOutputName-42-4" val="coordBuffer"/>
    <string name="nodeOutputName-42-5" val="positionsBuffer"/>
    <string name="nodeOutputName-42-6" val="depthBuffer"/>
    <string name="nodeOutputName-42-7" val="mask"/>
    <string name="nodeStringId-43" val="3DGradientNoiseID"/>
    <uint name="nodeVersion-43" val="1"/>
    <string name="nodeName-43" val="3DWorleyNoise"/>
    <string name="nodePath-43" val="Texture/"/>
    <string name="nodeDesc-43" val="Fractal 3D procedural gradient noise"/>
    <string name="nodeHelp-43" val="Noise based on the interpolation of pseudo random gradients on a 3D grid. &#xa;The octaves allows gradient noises with different frequencies &#xa;and amplitudes to be added and create a fractal noise. &#xa;The persistence defines how the amplitude of the signal is scaled on each octave.&#xa;The ZCoord parameter allows to navigate along the third dimension. "/>
    <uint name="nodeId-43" val="43"/>
    <uint name="nodeGraphId-43" val="1"/>
    <vector2f name="nodePos-43">
     <float name="0" val="-7146.69"/>
     <float name="1" val="-1722.27"/>
    </vector2f>
    <int name="nodeInputNameSize-43" val="2"/>
    <int name="nodeOutputNameSize-43" val="1"/>
    <string name="nodeInputName-43-0" val="matrices"/>
    <string name="nodeInputName-43-1" val="positionMap"/>
    <string name="nodeOutputName-43-0" val="proceduralTex"/>
    <string name="nodeStringId-44" val="globalMaxMinDepth"/>
    <uint name="nodeVersion-44" val="1"/>
    <string name="nodeName-44" val="globalMaxMinDepth"/>
    <string name="nodePath-44" val="Analysis/global"/>
    <string name="nodeDesc-44" val="Min/max depth"/>
    <string name="nodeHelp-44" val="Compute the maximum color of an image. The resulting color is stored in the last level of the output pyramid. It can be accessed via the following formula: vec2 s = vec2(textureSize(image,0)); float l = 1. + floor(log2(max(s.x,s.y))); vec4 color = textureLod(image,vec2(.5),l); "/>
    <uint name="nodeId-44" val="44"/>
    <uint name="nodeGraphId-44" val="2"/>
    <vector2f name="nodePos-44">
     <float name="0" val="-9067.43"/>
     <float name="1" val="-478.004"/>
    </vector2f>
    <int name="nodeInputNameSize-44" val="1"/>
    <int name="nodeOutputNameSize-44" val="1"/>
    <string name="nodeInputName-44-0" val="image"/>
    <string name="nodeOutputName-44-0" val="maxMinDepth"/>
    <string name="nodeStringId-45" val="gbuffersGenericId"/>
    <uint name="nodeVersion-45" val="1"/>
    <string name="nodeName-45" val="genericObjLoader"/>
    <string name="nodePath-45" val="Generic/"/>
    <string name="nodeDesc-45" val="Generic node for 3D object processing"/>
    <string name="nodeHelp-45" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-45" val="45"/>
    <uint name="nodeGraphId-45" val="3"/>
    <vector2f name="nodePos-45">
     <float name="0" val="-11724.7"/>
     <float name="1" val="-5101.48"/>
    </vector2f>
    <int name="nodeInputNameSize-45" val="0"/>
    <int name="nodeOutputNameSize-45" val="1"/>
    <string name="nodeOutputName-45-0" val="outBuffer0"/>
    <uint name="nbConnections-0-1" val="1"/>
    <vector2u name="connection-0-1-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-0-2" val="0"/>
    <uint name="nbConnections-0-3" val="0"/>
    <uint name="nbConnections-0-4" val="0"/>
    <uint name="nbConnections-0-5" val="0"/>
    <uint name="nbConnections-0-6" val="0"/>
    <uint name="nbConnections-0-7" val="0"/>
    <uint name="nbConnections-0-8" val="0"/>
    <uint name="nbConnections-0-9" val="0"/>
    <uint name="nbConnections-0-10" val="0"/>
    <uint name="nbConnections-0-11" val="0"/>
    <uint name="nbConnections-0-12" val="0"/>
    <uint name="nbConnections-0-13" val="0"/>
    <uint name="nbConnections-0-14" val="0"/>
    <uint name="nbConnections-0-15" val="0"/>
    <uint name="nbConnections-0-16" val="0"/>
    <uint name="nbConnections-0-17" val="0"/>
    <uint name="nbConnections-0-18" val="0"/>
    <uint name="nbConnections-0-19" val="0"/>
    <uint name="nbConnections-0-20" val="0"/>
    <uint name="nbConnections-0-21" val="0"/>
    <uint name="nbConnections-0-22" val="0"/>
    <uint name="nbConnections-0-23" val="0"/>
    <uint name="nbConnections-0-24" val="0"/>
    <uint name="nbConnections-0-25" val="0"/>
    <uint name="nbConnections-0-26" val="0"/>
    <uint name="nbConnections-0-27" val="0"/>
    <uint name="nbConnections-0-28" val="0"/>
    <uint name="nbConnections-0-29" val="0"/>
    <uint name="nbConnections-0-30" val="0"/>
    <uint name="nbConnections-0-31" val="0"/>
    <uint name="nbConnections-0-32" val="0"/>
    <uint name="nbConnections-0-33" val="0"/>
    <uint name="nbConnections-0-34" val="0"/>
    <uint name="nbConnections-0-35" val="0"/>
    <uint name="nbConnections-0-36" val="0"/>
    <uint name="nbConnections-0-37" val="0"/>
    <uint name="nbConnections-0-38" val="0"/>
    <uint name="nbConnections-0-39" val="0"/>
    <uint name="nbConnections-0-40" val="0"/>
    <uint name="nbConnections-0-41" val="0"/>
    <uint name="nbConnections-0-42" val="0"/>
    <uint name="nbConnections-0-43" val="0"/>
    <uint name="nbConnections-0-44" val="0"/>
    <uint name="nbConnections-0-45" val="0"/>
    <uint name="nbConnections-1-2" val="1"/>
    <vector2u name="connection-1-2-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-1-3" val="0"/>
    <uint name="nbConnections-1-4" val="0"/>
    <uint name="nbConnections-1-5" val="0"/>
    <uint name="nbConnections-1-6" val="0"/>
    <uint name="nbConnections-1-7" val="0"/>
    <uint name="nbConnections-1-8" val="0"/>
    <uint name="nbConnections-1-9" val="0"/>
    <uint name="nbConnections-1-10" val="0"/>
    <uint name="nbConnections-1-11" val="0"/>
    <uint name="nbConnections-1-12" val="0"/>
    <uint name="nbConnections-1-13" val="0"/>
    <uint name="nbConnections-1-14" val="1"/>
    <vector2u name="connection-1-14-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-1-15" val="0"/>
    <uint name="nbConnections-1-16" val="0"/>
    <uint name="nbConnections-1-17" val="0"/>
    <uint name="nbConnections-1-18" val="0"/>
    <uint name="nbConnections-1-19" val="0"/>
    <uint name="nbConnections-1-20" val="0"/>
    <uint name="nbConnections-1-21" val="0"/>
    <uint name="nbConnections-1-22" val="0"/>
    <uint name="nbConnections-1-23" val="0"/>
    <uint name="nbConnections-1-24" val="0"/>
    <uint name="nbConnections-1-25" val="0"/>
    <uint name="nbConnections-1-26" val="0"/>
    <uint name="nbConnections-1-27" val="0"/>
    <uint name="nbConnections-1-28" val="0"/>
    <uint name="nbConnections-1-29" val="0"/>
    <uint name="nbConnections-1-30" val="0"/>
    <uint name="nbConnections-1-31" val="0"/>
    <uint name="nbConnections-1-32" val="0"/>
    <uint name="nbConnections-1-33" val="0"/>
    <uint name="nbConnections-1-34" val="0"/>
    <uint name="nbConnections-1-35" val="0"/>
    <uint name="nbConnections-1-36" val="0"/>
    <uint name="nbConnections-1-37" val="0"/>
    <uint name="nbConnections-1-38" val="0"/>
    <uint name="nbConnections-1-39" val="0"/>
    <uint name="nbConnections-1-40" val="0"/>
    <uint name="nbConnections-1-41" val="1"/>
    <vector2u name="connection-1-41-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-1-42" val="0"/>
    <uint name="nbConnections-1-43" val="0"/>
    <uint name="nbConnections-1-44" val="0"/>
    <uint name="nbConnections-1-45" val="0"/>
    <uint name="nbConnections-2-3" val="1"/>
    <vector2u name="connection-2-3-0">
     <uint name="0" val="1"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-2-4" val="0"/>
    <uint name="nbConnections-2-5" val="1"/>
    <vector2u name="connection-2-5-0">
     <uint name="0" val="4"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-2-6" val="0"/>
    <uint name="nbConnections-2-7" val="0"/>
    <uint name="nbConnections-2-8" val="0"/>
    <uint name="nbConnections-2-9" val="0"/>
    <uint name="nbConnections-2-10" val="0"/>
    <uint name="nbConnections-2-11" val="0"/>
    <uint name="nbConnections-2-12" val="0"/>
    <uint name="nbConnections-2-13" val="0"/>
    <uint name="nbConnections-2-14" val="0"/>
    <uint name="nbConnections-2-15" val="0"/>
    <uint name="nbConnections-2-16" val="1"/>
    <vector2u name="connection-2-16-0">
     <uint name="0" val="3"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-2-17" val="0"/>
    <uint name="nbConnections-2-18" val="1"/>
    <vector2u name="connection-2-18-0">
     <uint name="0" val="2"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-2-19" val="0"/>
    <uint name="nbConnections-2-20" val="1"/>
    <vector2u name="connection-2-20-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-2-21" val="0"/>
    <uint name="nbConnections-2-22" val="0"/>
    <uint name="nbConnections-2-23" val="0"/>
    <uint name="nbConnections-2-24" val="0"/>
    <uint name="nbConnections-2-25" val="0"/>
    <uint name="nbConnections-2-26" val="0"/>
    <uint name="nbConnections-2-27" val="0"/>
    <uint name="nbConnections-2-28" val="0"/>
    <uint name="nbConnections-2-29" val="0"/>
    <uint name="nbConnections-2-30" val="0"/>
    <uint name="nbConnections-2-31" val="0"/>
    <uint name="nbConnections-2-32" val="0"/>
    <uint name="nbConnections-2-33" val="0"/>
    <uint name="nbConnections-2-34" val="0"/>
    <uint name="nbConnections-2-35" val="0"/>
    <uint name="nbConnections-2-36" val="0"/>
    <uint name="nbConnections-2-37" val="0"/>
    <uint name="nbConnections-2-38" val="0"/>
    <uint name="nbConnections-2-39" val="0"/>
    <uint name="nbConnections-2-40" val="0"/>
    <uint name="nbConnections-2-41" val="0"/>
    <uint name="nbConnections-2-42" val="0"/>
    <uint name="nbConnections-2-43" val="0"/>
    <uint name="nbConnections-2-44" val="0"/>
    <uint name="nbConnections-2-45" val="0"/>
    <uint name="nbConnections-3-4" val="1"/>
    <vector2u name="connection-3-4-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-3-5" val="0"/>
    <uint name="nbConnections-3-6" val="0"/>
    <uint name="nbConnections-3-7" val="0"/>
    <uint name="nbConnections-3-8" val="0"/>
    <uint name="nbConnections-3-9" val="0"/>
    <uint name="nbConnections-3-10" val="0"/>
    <uint name="nbConnections-3-11" val="0"/>
    <uint name="nbConnections-3-12" val="0"/>
    <uint name="nbConnections-3-13" val="0"/>
    <uint name="nbConnections-3-14" val="0"/>
    <uint name="nbConnections-3-15" val="0"/>
    <uint name="nbConnections-3-16" val="0"/>
    <uint name="nbConnections-3-17" val="0"/>
    <uint name="nbConnections-3-18" val="0"/>
    <uint name="nbConnections-3-19" val="0"/>
    <uint name="nbConnections-3-20" val="0"/>
    <uint name="nbConnections-3-21" val="0"/>
    <uint name="nbConnections-3-22" val="0"/>
    <uint name="nbConnections-3-23" val="0"/>
    <uint name="nbConnections-3-24" val="0"/>
    <uint name="nbConnections-3-25" val="1"/>
    <vector2u name="connection-3-25-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-3-26" val="0"/>
    <uint name="nbConnections-3-27" val="0"/>
    <uint name="nbConnections-3-28" val="0"/>
    <uint name="nbConnections-3-29" val="0"/>
    <uint name="nbConnections-3-30" val="1"/>
    <vector2u name="connection-3-30-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-3-31" val="0"/>
    <uint name="nbConnections-3-32" val="1"/>
    <vector2u name="connection-3-32-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-3-33" val="0"/>
    <uint name="nbConnections-3-34" val="0"/>
    <uint name="nbConnections-3-35" val="0"/>
    <uint name="nbConnections-3-36" val="0"/>
    <uint name="nbConnections-3-37" val="0"/>
    <uint name="nbConnections-3-38" val="0"/>
    <uint name="nbConnections-3-39" val="0"/>
    <uint name="nbConnections-3-40" val="1"/>
    <vector2u name="connection-3-40-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-3-41" val="0"/>
    <uint name="nbConnections-3-42" val="0"/>
    <uint name="nbConnections-3-43" val="0"/>
    <uint name="nbConnections-3-44" val="0"/>
    <uint name="nbConnections-3-45" val="0"/>
    <uint name="nbConnections-4-5" val="0"/>
    <uint name="nbConnections-4-6" val="0"/>
    <uint name="nbConnections-4-7" val="1"/>
    <vector2u name="connection-4-7-0">
     <uint name="0" val="2"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-4-8" val="0"/>
    <uint name="nbConnections-4-9" val="0"/>
    <uint name="nbConnections-4-10" val="0"/>
    <uint name="nbConnections-4-11" val="0"/>
    <uint name="nbConnections-4-12" val="0"/>
    <uint name="nbConnections-4-13" val="0"/>
    <uint name="nbConnections-4-14" val="0"/>
    <uint name="nbConnections-4-15" val="0"/>
    <uint name="nbConnections-4-16" val="0"/>
    <uint name="nbConnections-4-17" val="0"/>
    <uint name="nbConnections-4-18" val="0"/>
    <uint name="nbConnections-4-19" val="0"/>
    <uint name="nbConnections-4-20" val="0"/>
    <uint name="nbConnections-4-21" val="1"/>
    <vector2u name="connection-4-21-0">
     <uint name="0" val="2"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-4-22" val="0"/>
    <uint name="nbConnections-4-23" val="0"/>
    <uint name="nbConnections-4-24" val="0"/>
    <uint name="nbConnections-4-25" val="0"/>
    <uint name="nbConnections-4-26" val="0"/>
    <uint name="nbConnections-4-27" val="0"/>
    <uint name="nbConnections-4-28" val="0"/>
    <uint name="nbConnections-4-29" val="0"/>
    <uint name="nbConnections-4-30" val="0"/>
    <uint name="nbConnections-4-31" val="0"/>
    <uint name="nbConnections-4-32" val="0"/>
    <uint name="nbConnections-4-33" val="0"/>
    <uint name="nbConnections-4-34" val="0"/>
    <uint name="nbConnections-4-35" val="0"/>
    <uint name="nbConnections-4-36" val="0"/>
    <uint name="nbConnections-4-37" val="0"/>
    <uint name="nbConnections-4-38" val="1"/>
    <vector2u name="connection-4-38-0">
     <uint name="0" val="1"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-4-39" val="0"/>
    <uint name="nbConnections-4-40" val="0"/>
    <uint name="nbConnections-4-41" val="0"/>
    <uint name="nbConnections-4-42" val="0"/>
    <uint name="nbConnections-4-43" val="0"/>
    <uint name="nbConnections-4-44" val="0"/>
    <uint name="nbConnections-4-45" val="0"/>
    <uint name="nbConnections-5-6" val="1"/>
    <vector2u name="connection-5-6-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-5-7" val="0"/>
    <uint name="nbConnections-5-8" val="0"/>
    <uint name="nbConnections-5-9" val="0"/>
    <uint name="nbConnections-5-10" val="0"/>
    <uint name="nbConnections-5-11" val="0"/>
    <uint name="nbConnections-5-12" val="0"/>
    <uint name="nbConnections-5-13" val="0"/>
    <uint name="nbConnections-5-14" val="0"/>
    <uint name="nbConnections-5-15" val="0"/>
    <uint name="nbConnections-5-16" val="0"/>
    <uint name="nbConnections-5-17" val="0"/>
    <uint name="nbConnections-5-18" val="0"/>
    <uint name="nbConnections-5-19" val="0"/>
    <uint name="nbConnections-5-20" val="0"/>
    <uint name="nbConnections-5-21" val="0"/>
    <uint name="nbConnections-5-22" val="0"/>
    <uint name="nbConnections-5-23" val="0"/>
    <uint name="nbConnections-5-24" val="0"/>
    <uint name="nbConnections-5-25" val="0"/>
    <uint name="nbConnections-5-26" val="0"/>
    <uint name="nbConnections-5-27" val="0"/>
    <uint name="nbConnections-5-28" val="0"/>
    <uint name="nbConnections-5-29" val="0"/>
    <uint name="nbConnections-5-30" val="0"/>
    <uint name="nbConnections-5-31" val="0"/>
    <uint name="nbConnections-5-32" val="0"/>
    <uint name="nbConnections-5-33" val="1"/>
    <vector2u name="connection-5-33-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-5-34" val="0"/>
    <uint name="nbConnections-5-35" val="0"/>
    <uint name="nbConnections-5-36" val="0"/>
    <uint name="nbConnections-5-37" val="0"/>
    <uint name="nbConnections-5-38" val="0"/>
    <uint name="nbConnections-5-39" val="0"/>
    <uint name="nbConnections-5-40" val="0"/>
    <uint name="nbConnections-5-41" val="0"/>
    <uint name="nbConnections-5-42" val="0"/>
    <uint name="nbConnections-5-43" val="0"/>
    <uint name="nbConnections-5-44" val="0"/>
    <uint name="nbConnections-5-45" val="0"/>
    <uint name="nbConnections-6-7" val="1"/>
    <vector2u name="connection-6-7-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-6-8" val="0"/>
    <uint name="nbConnections-6-9" val="0"/>
    <uint name="nbConnections-6-10" val="0"/>
    <uint name="nbConnections-6-11" val="0"/>
    <uint name="nbConnections-6-12" val="0"/>
    <uint name="nbConnections-6-13" val="0"/>
    <uint name="nbConnections-6-14" val="0"/>
    <uint name="nbConnections-6-15" val="0"/>
    <uint name="nbConnections-6-16" val="0"/>
    <uint name="nbConnections-6-17" val="0"/>
    <uint name="nbConnections-6-18" val="0"/>
    <uint name="nbConnections-6-19" val="0"/>
    <uint name="nbConnections-6-20" val="0"/>
    <uint name="nbConnections-6-21" val="0"/>
    <uint name="nbConnections-6-22" val="0"/>
    <uint name="nbConnections-6-23" val="0"/>
    <uint name="nbConnections-6-24" val="2"/>
    <vector2u name="connection-6-24-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <vector2u name="connection-6-24-1">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-6-25" val="0"/>
    <uint name="nbConnections-6-26" val="1"/>
    <vector2u name="connection-6-26-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-6-27" val="0"/>
    <uint name="nbConnections-6-28" val="0"/>
    <uint name="nbConnections-6-29" val="0"/>
    <uint name="nbConnections-6-30" val="0"/>
    <uint name="nbConnections-6-31" val="0"/>
    <uint name="nbConnections-6-32" val="0"/>
    <uint name="nbConnections-6-33" val="0"/>
    <uint name="nbConnections-6-34" val="0"/>
    <uint name="nbConnections-6-35" val="0"/>
    <uint name="nbConnections-6-36" val="0"/>
    <uint name="nbConnections-6-37" val="0"/>
    <uint name="nbConnections-6-38" val="0"/>
    <uint name="nbConnections-6-39" val="0"/>
    <uint name="nbConnections-6-40" val="0"/>
    <uint name="nbConnections-6-41" val="0"/>
    <uint name="nbConnections-6-42" val="0"/>
    <uint name="nbConnections-6-43" val="0"/>
    <uint name="nbConnections-6-44" val="0"/>
    <uint name="nbConnections-6-45" val="0"/>
    <uint name="nbConnections-7-8" val="0"/>
    <uint name="nbConnections-7-9" val="0"/>
    <uint name="nbConnections-7-10" val="0"/>
    <uint name="nbConnections-7-11" val="0"/>
    <uint name="nbConnections-7-12" val="0"/>
    <uint name="nbConnections-7-13" val="0"/>
    <uint name="nbConnections-7-14" val="0"/>
    <uint name="nbConnections-7-15" val="0"/>
    <uint name="nbConnections-7-16" val="0"/>
    <uint name="nbConnections-7-17" val="0"/>
    <uint name="nbConnections-7-18" val="0"/>
    <uint name="nbConnections-7-19" val="0"/>
    <uint name="nbConnections-7-20" val="0"/>
    <uint name="nbConnections-7-21" val="0"/>
    <uint name="nbConnections-7-22" val="0"/>
    <uint name="nbConnections-7-23" val="0"/>
    <uint name="nbConnections-7-24" val="0"/>
    <uint name="nbConnections-7-25" val="0"/>
    <uint name="nbConnections-7-26" val="0"/>
    <uint name="nbConnections-7-27" val="0"/>
    <uint name="nbConnections-7-28" val="0"/>
    <uint name="nbConnections-7-29" val="0"/>
    <uint name="nbConnections-7-30" val="0"/>
    <uint name="nbConnections-7-31" val="0"/>
    <uint name="nbConnections-7-32" val="0"/>
    <uint name="nbConnections-7-33" val="0"/>
    <uint name="nbConnections-7-34" val="0"/>
    <uint name="nbConnections-7-35" val="0"/>
    <uint name="nbConnections-7-36" val="0"/>
    <uint name="nbConnections-7-37" val="0"/>
    <uint name="nbConnections-7-38" val="0"/>
    <uint name="nbConnections-7-39" val="0"/>
    <uint name="nbConnections-7-40" val="0"/>
    <uint name="nbConnections-7-41" val="0"/>
    <uint name="nbConnections-7-42" val="0"/>
    <uint name="nbConnections-7-43" val="0"/>
    <uint name="nbConnections-7-44" val="0"/>
    <uint name="nbConnections-7-45" val="0"/>
    <uint name="nbConnections-8-9" val="1"/>
    <vector2u name="connection-8-9-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-8-10" val="0"/>
    <uint name="nbConnections-8-11" val="0"/>
    <uint name="nbConnections-8-12" val="0"/>
    <uint name="nbConnections-8-13" val="0"/>
    <uint name="nbConnections-8-14" val="0"/>
    <uint name="nbConnections-8-15" val="0"/>
    <uint name="nbConnections-8-16" val="0"/>
    <uint name="nbConnections-8-17" val="0"/>
    <uint name="nbConnections-8-18" val="0"/>
    <uint name="nbConnections-8-19" val="0"/>
    <uint name="nbConnections-8-20" val="0"/>
    <uint name="nbConnections-8-21" val="0"/>
    <uint name="nbConnections-8-22" val="0"/>
    <uint name="nbConnections-8-23" val="0"/>
    <uint name="nbConnections-8-24" val="0"/>
    <uint name="nbConnections-8-25" val="0"/>
    <uint name="nbConnections-8-26" val="0"/>
    <uint name="nbConnections-8-27" val="0"/>
    <uint name="nbConnections-8-28" val="0"/>
    <uint name="nbConnections-8-29" val="0"/>
    <uint name="nbConnections-8-30" val="0"/>
    <uint name="nbConnections-8-31" val="0"/>
    <uint name="nbConnections-8-32" val="0"/>
    <uint name="nbConnections-8-33" val="0"/>
    <uint name="nbConnections-8-34" val="0"/>
    <uint name="nbConnections-8-35" val="0"/>
    <uint name="nbConnections-8-36" val="0"/>
    <uint name="nbConnections-8-37" val="0"/>
    <uint name="nbConnections-8-38" val="0"/>
    <uint name="nbConnections-8-39" val="0"/>
    <uint name="nbConnections-8-40" val="0"/>
    <uint name="nbConnections-8-41" val="0"/>
    <uint name="nbConnections-8-42" val="0"/>
    <uint name="nbConnections-8-43" val="0"/>
    <uint name="nbConnections-8-44" val="0"/>
    <uint name="nbConnections-8-45" val="0"/>
    <uint name="nbConnections-9-10" val="1"/>
    <vector2u name="connection-9-10-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-9-11" val="1"/>
    <vector2u name="connection-9-11-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-9-12" val="1"/>
    <vector2u name="connection-9-12-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-9-13" val="0"/>
    <uint name="nbConnections-9-14" val="0"/>
    <uint name="nbConnections-9-15" val="0"/>
    <uint name="nbConnections-9-16" val="0"/>
    <uint name="nbConnections-9-17" val="0"/>
    <uint name="nbConnections-9-18" val="0"/>
    <uint name="nbConnections-9-19" val="0"/>
    <uint name="nbConnections-9-20" val="0"/>
    <uint name="nbConnections-9-21" val="0"/>
    <uint name="nbConnections-9-22" val="0"/>
    <uint name="nbConnections-9-23" val="0"/>
    <uint name="nbConnections-9-24" val="0"/>
    <uint name="nbConnections-9-25" val="0"/>
    <uint name="nbConnections-9-26" val="0"/>
    <uint name="nbConnections-9-27" val="0"/>
    <uint name="nbConnections-9-28" val="0"/>
    <uint name="nbConnections-9-29" val="0"/>
    <uint name="nbConnections-9-30" val="0"/>
    <uint name="nbConnections-9-31" val="0"/>
    <uint name="nbConnections-9-32" val="0"/>
    <uint name="nbConnections-9-33" val="0"/>
    <uint name="nbConnections-9-34" val="0"/>
    <uint name="nbConnections-9-35" val="0"/>
    <uint name="nbConnections-9-36" val="0"/>
    <uint name="nbConnections-9-37" val="0"/>
    <uint name="nbConnections-9-38" val="0"/>
    <uint name="nbConnections-9-39" val="0"/>
    <uint name="nbConnections-9-40" val="0"/>
    <uint name="nbConnections-9-41" val="0"/>
    <uint name="nbConnections-9-42" val="0"/>
    <uint name="nbConnections-9-43" val="0"/>
    <uint name="nbConnections-9-44" val="0"/>
    <uint name="nbConnections-9-45" val="0"/>
    <uint name="nbConnections-10-11" val="0"/>
    <uint name="nbConnections-10-12" val="0"/>
    <uint name="nbConnections-10-13" val="0"/>
    <uint name="nbConnections-10-14" val="0"/>
    <uint name="nbConnections-10-15" val="0"/>
    <uint name="nbConnections-10-16" val="0"/>
    <uint name="nbConnections-10-17" val="0"/>
    <uint name="nbConnections-10-18" val="0"/>
    <uint name="nbConnections-10-19" val="0"/>
    <uint name="nbConnections-10-20" val="0"/>
    <uint name="nbConnections-10-21" val="0"/>
    <uint name="nbConnections-10-22" val="0"/>
    <uint name="nbConnections-10-23" val="0"/>
    <uint name="nbConnections-10-24" val="0"/>
    <uint name="nbConnections-10-25" val="0"/>
    <uint name="nbConnections-10-26" val="0"/>
    <uint name="nbConnections-10-27" val="0"/>
    <uint name="nbConnections-10-28" val="0"/>
    <uint name="nbConnections-10-29" val="0"/>
    <uint name="nbConnections-10-30" val="0"/>
    <uint name="nbConnections-10-31" val="0"/>
    <uint name="nbConnections-10-32" val="0"/>
    <uint name="nbConnections-10-33" val="0"/>
    <uint name="nbConnections-10-34" val="0"/>
    <uint name="nbConnections-10-35" val="0"/>
    <uint name="nbConnections-10-36" val="0"/>
    <uint name="nbConnections-10-37" val="1"/>
    <vector2u name="connection-10-37-0">
     <uint name="0" val="0"/>
     <uint name="1" val="6"/>
    </vector2u>
    <uint name="nbConnections-10-38" val="0"/>
    <uint name="nbConnections-10-39" val="0"/>
    <uint name="nbConnections-10-40" val="0"/>
    <uint name="nbConnections-10-41" val="0"/>
    <uint name="nbConnections-10-42" val="0"/>
    <uint name="nbConnections-10-43" val="0"/>
    <uint name="nbConnections-10-44" val="0"/>
    <uint name="nbConnections-10-45" val="0"/>
    <uint name="nbConnections-11-12" val="1"/>
    <vector2u name="connection-11-12-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-11-13" val="0"/>
    <uint name="nbConnections-11-14" val="0"/>
    <uint name="nbConnections-11-15" val="0"/>
    <uint name="nbConnections-11-16" val="0"/>
    <uint name="nbConnections-11-17" val="0"/>
    <uint name="nbConnections-11-18" val="0"/>
    <uint name="nbConnections-11-19" val="0"/>
    <uint name="nbConnections-11-20" val="0"/>
    <uint name="nbConnections-11-21" val="0"/>
    <uint name="nbConnections-11-22" val="0"/>
    <uint name="nbConnections-11-23" val="0"/>
    <uint name="nbConnections-11-24" val="0"/>
    <uint name="nbConnections-11-25" val="0"/>
    <uint name="nbConnections-11-26" val="0"/>
    <uint name="nbConnections-11-27" val="0"/>
    <uint name="nbConnections-11-28" val="0"/>
    <uint name="nbConnections-11-29" val="0"/>
    <uint name="nbConnections-11-30" val="0"/>
    <uint name="nbConnections-11-31" val="0"/>
    <uint name="nbConnections-11-32" val="0"/>
    <uint name="nbConnections-11-33" val="0"/>
    <uint name="nbConnections-11-34" val="0"/>
    <uint name="nbConnections-11-35" val="0"/>
    <uint name="nbConnections-11-36" val="0"/>
    <uint name="nbConnections-11-37" val="0"/>
    <uint name="nbConnections-11-38" val="0"/>
    <uint name="nbConnections-11-39" val="0"/>
    <uint name="nbConnections-11-40" val="0"/>
    <uint name="nbConnections-11-41" val="0"/>
    <uint name="nbConnections-11-42" val="0"/>
    <uint name="nbConnections-11-43" val="0"/>
    <uint name="nbConnections-11-44" val="0"/>
    <uint name="nbConnections-11-45" val="0"/>
    <uint name="nbConnections-12-13" val="1"/>
    <vector2u name="connection-12-13-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-12-14" val="0"/>
    <uint name="nbConnections-12-15" val="0"/>
    <uint name="nbConnections-12-16" val="0"/>
    <uint name="nbConnections-12-17" val="0"/>
    <uint name="nbConnections-12-18" val="0"/>
    <uint name="nbConnections-12-19" val="0"/>
    <uint name="nbConnections-12-20" val="0"/>
    <uint name="nbConnections-12-21" val="0"/>
    <uint name="nbConnections-12-22" val="0"/>
    <uint name="nbConnections-12-23" val="0"/>
    <uint name="nbConnections-12-24" val="0"/>
    <uint name="nbConnections-12-25" val="0"/>
    <uint name="nbConnections-12-26" val="0"/>
    <uint name="nbConnections-12-27" val="0"/>
    <uint name="nbConnections-12-28" val="0"/>
    <uint name="nbConnections-12-29" val="0"/>
    <uint name="nbConnections-12-30" val="0"/>
    <uint name="nbConnections-12-31" val="0"/>
    <uint name="nbConnections-12-32" val="0"/>
    <uint name="nbConnections-12-33" val="0"/>
    <uint name="nbConnections-12-34" val="0"/>
    <uint name="nbConnections-12-35" val="0"/>
    <uint name="nbConnections-12-36" val="0"/>
    <uint name="nbConnections-12-37" val="0"/>
    <uint name="nbConnections-12-38" val="0"/>
    <uint name="nbConnections-12-39" val="0"/>
    <uint name="nbConnections-12-40" val="0"/>
    <uint name="nbConnections-12-41" val="0"/>
    <uint name="nbConnections-12-42" val="0"/>
    <uint name="nbConnections-12-43" val="0"/>
    <uint name="nbConnections-12-44" val="0"/>
    <uint name="nbConnections-12-45" val="0"/>
    <uint name="nbConnections-13-14" val="0"/>
    <uint name="nbConnections-13-15" val="0"/>
    <uint name="nbConnections-13-16" val="0"/>
    <uint name="nbConnections-13-17" val="0"/>
    <uint name="nbConnections-13-18" val="0"/>
    <uint name="nbConnections-13-19" val="0"/>
    <uint name="nbConnections-13-20" val="0"/>
    <uint name="nbConnections-13-21" val="0"/>
    <uint name="nbConnections-13-22" val="0"/>
    <uint name="nbConnections-13-23" val="0"/>
    <uint name="nbConnections-13-24" val="0"/>
    <uint name="nbConnections-13-25" val="0"/>
    <uint name="nbConnections-13-26" val="0"/>
    <uint name="nbConnections-13-27" val="0"/>
    <uint name="nbConnections-13-28" val="0"/>
    <uint name="nbConnections-13-29" val="0"/>
    <uint name="nbConnections-13-30" val="0"/>
    <uint name="nbConnections-13-31" val="0"/>
    <uint name="nbConnections-13-32" val="0"/>
    <uint name="nbConnections-13-33" val="0"/>
    <uint name="nbConnections-13-34" val="0"/>
    <uint name="nbConnections-13-35" val="0"/>
    <uint name="nbConnections-13-36" val="0"/>
    <uint name="nbConnections-13-37" val="1"/>
    <vector2u name="connection-13-37-0">
     <uint name="0" val="0"/>
     <uint name="1" val="7"/>
    </vector2u>
    <uint name="nbConnections-13-38" val="0"/>
    <uint name="nbConnections-13-39" val="0"/>
    <uint name="nbConnections-13-40" val="0"/>
    <uint name="nbConnections-13-41" val="0"/>
    <uint name="nbConnections-13-42" val="0"/>
    <uint name="nbConnections-13-43" val="0"/>
    <uint name="nbConnections-13-44" val="0"/>
    <uint name="nbConnections-13-45" val="0"/>
    <uint name="nbConnections-14-15" val="1"/>
    <vector2u name="connection-14-15-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-14-16" val="0"/>
    <uint name="nbConnections-14-17" val="0"/>
    <uint name="nbConnections-14-18" val="0"/>
    <uint name="nbConnections-14-19" val="0"/>
    <uint name="nbConnections-14-20" val="0"/>
    <uint name="nbConnections-14-21" val="0"/>
    <uint name="nbConnections-14-22" val="0"/>
    <uint name="nbConnections-14-23" val="0"/>
    <uint name="nbConnections-14-24" val="0"/>
    <uint name="nbConnections-14-25" val="0"/>
    <uint name="nbConnections-14-26" val="0"/>
    <uint name="nbConnections-14-27" val="0"/>
    <uint name="nbConnections-14-28" val="1"/>
    <vector2u name="connection-14-28-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-14-29" val="1"/>
    <vector2u name="connection-14-29-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-14-30" val="0"/>
    <uint name="nbConnections-14-31" val="0"/>
    <uint name="nbConnections-14-32" val="0"/>
    <uint name="nbConnections-14-33" val="0"/>
    <uint name="nbConnections-14-34" val="0"/>
    <uint name="nbConnections-14-35" val="0"/>
    <uint name="nbConnections-14-36" val="0"/>
    <uint name="nbConnections-14-37" val="0"/>
    <uint name="nbConnections-14-38" val="0"/>
    <uint name="nbConnections-14-39" val="1"/>
    <vector2u name="connection-14-39-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-14-40" val="0"/>
    <uint name="nbConnections-14-41" val="0"/>
    <uint name="nbConnections-14-42" val="0"/>
    <uint name="nbConnections-14-43" val="0"/>
    <uint name="nbConnections-14-44" val="0"/>
    <uint name="nbConnections-14-45" val="0"/>
    <uint name="nbConnections-15-16" val="0"/>
    <uint name="nbConnections-15-17" val="0"/>
    <uint name="nbConnections-15-18" val="0"/>
    <uint name="nbConnections-15-19" val="0"/>
    <uint name="nbConnections-15-20" val="0"/>
    <uint name="nbConnections-15-21" val="0"/>
    <uint name="nbConnections-15-22" val="0"/>
    <uint name="nbConnections-15-23" val="0"/>
    <uint name="nbConnections-15-24" val="0"/>
    <uint name="nbConnections-15-25" val="0"/>
    <uint name="nbConnections-15-26" val="0"/>
    <uint name="nbConnections-15-27" val="0"/>
    <uint name="nbConnections-15-28" val="0"/>
    <uint name="nbConnections-15-29" val="0"/>
    <uint name="nbConnections-15-30" val="0"/>
    <uint name="nbConnections-15-31" val="0"/>
    <uint name="nbConnections-15-32" val="0"/>
    <uint name="nbConnections-15-33" val="0"/>
    <uint name="nbConnections-15-34" val="0"/>
    <uint name="nbConnections-15-35" val="0"/>
    <uint name="nbConnections-15-36" val="0"/>
    <uint name="nbConnections-15-37" val="1"/>
    <vector2u name="connection-15-37-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-15-38" val="0"/>
    <uint name="nbConnections-15-39" val="0"/>
    <uint name="nbConnections-15-40" val="0"/>
    <uint name="nbConnections-15-41" val="0"/>
    <uint name="nbConnections-15-42" val="0"/>
    <uint name="nbConnections-15-43" val="0"/>
    <uint name="nbConnections-15-44" val="0"/>
    <uint name="nbConnections-15-45" val="0"/>
    <uint name="nbConnections-16-17" val="1"/>
    <vector2u name="connection-16-17-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-16-18" val="0"/>
    <uint name="nbConnections-16-19" val="0"/>
    <uint name="nbConnections-16-20" val="0"/>
    <uint name="nbConnections-16-21" val="0"/>
    <uint name="nbConnections-16-22" val="0"/>
    <uint name="nbConnections-16-23" val="0"/>
    <uint name="nbConnections-16-24" val="0"/>
    <uint name="nbConnections-16-25" val="0"/>
    <uint name="nbConnections-16-26" val="0"/>
    <uint name="nbConnections-16-27" val="0"/>
    <uint name="nbConnections-16-28" val="1"/>
    <vector2u name="connection-16-28-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-16-29" val="1"/>
    <vector2u name="connection-16-29-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-16-30" val="0"/>
    <uint name="nbConnections-16-31" val="0"/>
    <uint name="nbConnections-16-32" val="0"/>
    <uint name="nbConnections-16-33" val="0"/>
    <uint name="nbConnections-16-34" val="0"/>
    <uint name="nbConnections-16-35" val="0"/>
    <uint name="nbConnections-16-36" val="0"/>
    <uint name="nbConnections-16-37" val="0"/>
    <uint name="nbConnections-16-38" val="0"/>
    <uint name="nbConnections-16-39" val="1"/>
    <vector2u name="connection-16-39-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-16-40" val="0"/>
    <uint name="nbConnections-16-41" val="0"/>
    <uint name="nbConnections-16-42" val="0"/>
    <uint name="nbConnections-16-43" val="0"/>
    <uint name="nbConnections-16-44" val="0"/>
    <uint name="nbConnections-16-45" val="0"/>
    <uint name="nbConnections-17-18" val="0"/>
    <uint name="nbConnections-17-19" val="0"/>
    <uint name="nbConnections-17-20" val="0"/>
    <uint name="nbConnections-17-21" val="0"/>
    <uint name="nbConnections-17-22" val="0"/>
    <uint name="nbConnections-17-23" val="0"/>
    <uint name="nbConnections-17-24" val="0"/>
    <uint name="nbConnections-17-25" val="0"/>
    <uint name="nbConnections-17-26" val="0"/>
    <uint name="nbConnections-17-27" val="0"/>
    <uint name="nbConnections-17-28" val="0"/>
    <uint name="nbConnections-17-29" val="0"/>
    <uint name="nbConnections-17-30" val="0"/>
    <uint name="nbConnections-17-31" val="0"/>
    <uint name="nbConnections-17-32" val="0"/>
    <uint name="nbConnections-17-33" val="0"/>
    <uint name="nbConnections-17-34" val="0"/>
    <uint name="nbConnections-17-35" val="0"/>
    <uint name="nbConnections-17-36" val="0"/>
    <uint name="nbConnections-17-37" val="1"/>
    <vector2u name="connection-17-37-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-17-38" val="0"/>
    <uint name="nbConnections-17-39" val="0"/>
    <uint name="nbConnections-17-40" val="0"/>
    <uint name="nbConnections-17-41" val="0"/>
    <uint name="nbConnections-17-42" val="0"/>
    <uint name="nbConnections-17-43" val="0"/>
    <uint name="nbConnections-17-44" val="0"/>
    <uint name="nbConnections-17-45" val="0"/>
    <uint name="nbConnections-18-19" val="1"/>
    <vector2u name="connection-18-19-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-18-20" val="0"/>
    <uint name="nbConnections-18-21" val="0"/>
    <uint name="nbConnections-18-22" val="0"/>
    <uint name="nbConnections-18-23" val="0"/>
    <uint name="nbConnections-18-24" val="0"/>
    <uint name="nbConnections-18-25" val="0"/>
    <uint name="nbConnections-18-26" val="0"/>
    <uint name="nbConnections-18-27" val="0"/>
    <uint name="nbConnections-18-28" val="0"/>
    <uint name="nbConnections-18-29" val="0"/>
    <uint name="nbConnections-18-30" val="0"/>
    <uint name="nbConnections-18-31" val="0"/>
    <uint name="nbConnections-18-32" val="0"/>
    <uint name="nbConnections-18-33" val="0"/>
    <uint name="nbConnections-18-34" val="0"/>
    <uint name="nbConnections-18-35" val="0"/>
    <uint name="nbConnections-18-36" val="0"/>
    <uint name="nbConnections-18-37" val="0"/>
    <uint name="nbConnections-18-38" val="0"/>
    <uint name="nbConnections-18-39" val="0"/>
    <uint name="nbConnections-18-40" val="0"/>
    <uint name="nbConnections-18-41" val="0"/>
    <uint name="nbConnections-18-42" val="0"/>
    <uint name="nbConnections-18-43" val="0"/>
    <uint name="nbConnections-18-44" val="0"/>
    <uint name="nbConnections-18-45" val="0"/>
    <uint name="nbConnections-19-20" val="0"/>
    <uint name="nbConnections-19-21" val="0"/>
    <uint name="nbConnections-19-22" val="0"/>
    <uint name="nbConnections-19-23" val="0"/>
    <uint name="nbConnections-19-24" val="0"/>
    <uint name="nbConnections-19-25" val="0"/>
    <uint name="nbConnections-19-26" val="0"/>
    <uint name="nbConnections-19-27" val="0"/>
    <uint name="nbConnections-19-28" val="0"/>
    <uint name="nbConnections-19-29" val="0"/>
    <uint name="nbConnections-19-30" val="0"/>
    <uint name="nbConnections-19-31" val="0"/>
    <uint name="nbConnections-19-32" val="0"/>
    <uint name="nbConnections-19-33" val="0"/>
    <uint name="nbConnections-19-34" val="0"/>
    <uint name="nbConnections-19-35" val="0"/>
    <uint name="nbConnections-19-36" val="0"/>
    <uint name="nbConnections-19-37" val="1"/>
    <vector2u name="connection-19-37-0">
     <uint name="0" val="0"/>
     <uint name="1" val="2"/>
    </vector2u>
    <uint name="nbConnections-19-38" val="0"/>
    <uint name="nbConnections-19-39" val="0"/>
    <uint name="nbConnections-19-40" val="0"/>
    <uint name="nbConnections-19-41" val="0"/>
    <uint name="nbConnections-19-42" val="0"/>
    <uint name="nbConnections-19-43" val="0"/>
    <uint name="nbConnections-19-44" val="0"/>
    <uint name="nbConnections-19-45" val="0"/>
    <uint name="nbConnections-20-21" val="1"/>
    <vector2u name="connection-20-21-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-20-22" val="0"/>
    <uint name="nbConnections-20-23" val="0"/>
    <uint name="nbConnections-20-24" val="0"/>
    <uint name="nbConnections-20-25" val="0"/>
    <uint name="nbConnections-20-26" val="0"/>
    <uint name="nbConnections-20-27" val="0"/>
    <uint name="nbConnections-20-28" val="0"/>
    <uint name="nbConnections-20-29" val="0"/>
    <uint name="nbConnections-20-30" val="0"/>
    <uint name="nbConnections-20-31" val="0"/>
    <uint name="nbConnections-20-32" val="0"/>
    <uint name="nbConnections-20-33" val="0"/>
    <uint name="nbConnections-20-34" val="0"/>
    <uint name="nbConnections-20-35" val="0"/>
    <uint name="nbConnections-20-36" val="0"/>
    <uint name="nbConnections-20-37" val="0"/>
    <uint name="nbConnections-20-38" val="0"/>
    <uint name="nbConnections-20-39" val="0"/>
    <uint name="nbConnections-20-40" val="0"/>
    <uint name="nbConnections-20-41" val="0"/>
    <uint name="nbConnections-20-42" val="0"/>
    <uint name="nbConnections-20-43" val="0"/>
    <uint name="nbConnections-20-44" val="0"/>
    <uint name="nbConnections-20-45" val="0"/>
    <uint name="nbConnections-21-22" val="1"/>
    <vector2u name="connection-21-22-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-21-23" val="0"/>
    <uint name="nbConnections-21-24" val="0"/>
    <uint name="nbConnections-21-25" val="0"/>
    <uint name="nbConnections-21-26" val="0"/>
    <uint name="nbConnections-21-27" val="0"/>
    <uint name="nbConnections-21-28" val="0"/>
    <uint name="nbConnections-21-29" val="0"/>
    <uint name="nbConnections-21-30" val="0"/>
    <uint name="nbConnections-21-31" val="0"/>
    <uint name="nbConnections-21-32" val="0"/>
    <uint name="nbConnections-21-33" val="0"/>
    <uint name="nbConnections-21-34" val="0"/>
    <uint name="nbConnections-21-35" val="0"/>
    <uint name="nbConnections-21-36" val="0"/>
    <uint name="nbConnections-21-37" val="0"/>
    <uint name="nbConnections-21-38" val="0"/>
    <uint name="nbConnections-21-39" val="0"/>
    <uint name="nbConnections-21-40" val="0"/>
    <uint name="nbConnections-21-41" val="0"/>
    <uint name="nbConnections-21-42" val="0"/>
    <uint name="nbConnections-21-43" val="0"/>
    <uint name="nbConnections-21-44" val="0"/>
    <uint name="nbConnections-21-45" val="0"/>
    <uint name="nbConnections-22-23" val="1"/>
    <vector2u name="connection-22-23-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-22-24" val="0"/>
    <uint name="nbConnections-22-25" val="0"/>
    <uint name="nbConnections-22-26" val="0"/>
    <uint name="nbConnections-22-27" val="0"/>
    <uint name="nbConnections-22-28" val="0"/>
    <uint name="nbConnections-22-29" val="0"/>
    <uint name="nbConnections-22-30" val="0"/>
    <uint name="nbConnections-22-31" val="0"/>
    <uint name="nbConnections-22-32" val="0"/>
    <uint name="nbConnections-22-33" val="0"/>
    <uint name="nbConnections-22-34" val="0"/>
    <uint name="nbConnections-22-35" val="0"/>
    <uint name="nbConnections-22-36" val="0"/>
    <uint name="nbConnections-22-37" val="0"/>
    <uint name="nbConnections-22-38" val="0"/>
    <uint name="nbConnections-22-39" val="0"/>
    <uint name="nbConnections-22-40" val="0"/>
    <uint name="nbConnections-22-41" val="0"/>
    <uint name="nbConnections-22-42" val="0"/>
    <uint name="nbConnections-22-43" val="0"/>
    <uint name="nbConnections-22-44" val="0"/>
    <uint name="nbConnections-22-45" val="0"/>
    <uint name="nbConnections-23-24" val="0"/>
    <uint name="nbConnections-23-25" val="0"/>
    <uint name="nbConnections-23-26" val="0"/>
    <uint name="nbConnections-23-27" val="0"/>
    <uint name="nbConnections-23-28" val="0"/>
    <uint name="nbConnections-23-29" val="0"/>
    <uint name="nbConnections-23-30" val="0"/>
    <uint name="nbConnections-23-31" val="0"/>
    <uint name="nbConnections-23-32" val="0"/>
    <uint name="nbConnections-23-33" val="0"/>
    <uint name="nbConnections-23-34" val="0"/>
    <uint name="nbConnections-23-35" val="0"/>
    <uint name="nbConnections-23-36" val="0"/>
    <uint name="nbConnections-23-37" val="1"/>
    <vector2u name="connection-23-37-0">
     <uint name="0" val="0"/>
     <uint name="1" val="3"/>
    </vector2u>
    <uint name="nbConnections-23-38" val="0"/>
    <uint name="nbConnections-23-39" val="0"/>
    <uint name="nbConnections-23-40" val="0"/>
    <uint name="nbConnections-23-41" val="0"/>
    <uint name="nbConnections-23-42" val="0"/>
    <uint name="nbConnections-23-43" val="0"/>
    <uint name="nbConnections-23-44" val="0"/>
    <uint name="nbConnections-23-45" val="0"/>
    <uint name="nbConnections-24-25" val="1"/>
    <vector2u name="connection-24-25-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-24-26" val="0"/>
    <uint name="nbConnections-24-27" val="0"/>
    <uint name="nbConnections-24-28" val="0"/>
    <uint name="nbConnections-24-29" val="0"/>
    <uint name="nbConnections-24-30" val="0"/>
    <uint name="nbConnections-24-31" val="0"/>
    <uint name="nbConnections-24-32" val="0"/>
    <uint name="nbConnections-24-33" val="0"/>
    <uint name="nbConnections-24-34" val="0"/>
    <uint name="nbConnections-24-35" val="0"/>
    <uint name="nbConnections-24-36" val="0"/>
    <uint name="nbConnections-24-37" val="0"/>
    <uint name="nbConnections-24-38" val="0"/>
    <uint name="nbConnections-24-39" val="0"/>
    <uint name="nbConnections-24-40" val="0"/>
    <uint name="nbConnections-24-41" val="0"/>
    <uint name="nbConnections-24-42" val="0"/>
    <uint name="nbConnections-24-43" val="0"/>
    <uint name="nbConnections-24-44" val="0"/>
    <uint name="nbConnections-24-45" val="0"/>
    <uint name="nbConnections-25-26" val="1"/>
    <vector2u name="connection-25-26-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-25-27" val="0"/>
    <uint name="nbConnections-25-28" val="0"/>
    <uint name="nbConnections-25-29" val="0"/>
    <uint name="nbConnections-25-30" val="0"/>
    <uint name="nbConnections-25-31" val="0"/>
    <uint name="nbConnections-25-32" val="0"/>
    <uint name="nbConnections-25-33" val="0"/>
    <uint name="nbConnections-25-34" val="0"/>
    <uint name="nbConnections-25-35" val="0"/>
    <uint name="nbConnections-25-36" val="0"/>
    <uint name="nbConnections-25-37" val="0"/>
    <uint name="nbConnections-25-38" val="0"/>
    <uint name="nbConnections-25-39" val="0"/>
    <uint name="nbConnections-25-40" val="0"/>
    <uint name="nbConnections-25-41" val="0"/>
    <uint name="nbConnections-25-42" val="0"/>
    <uint name="nbConnections-25-43" val="0"/>
    <uint name="nbConnections-25-44" val="0"/>
    <uint name="nbConnections-25-45" val="0"/>
    <uint name="nbConnections-26-27" val="1"/>
    <vector2u name="connection-26-27-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-26-28" val="0"/>
    <uint name="nbConnections-26-29" val="0"/>
    <uint name="nbConnections-26-30" val="0"/>
    <uint name="nbConnections-26-31" val="0"/>
    <uint name="nbConnections-26-32" val="0"/>
    <uint name="nbConnections-26-33" val="0"/>
    <uint name="nbConnections-26-34" val="0"/>
    <uint name="nbConnections-26-35" val="1"/>
    <vector2u name="connection-26-35-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-26-36" val="0"/>
    <uint name="nbConnections-26-37" val="0"/>
    <uint name="nbConnections-26-38" val="0"/>
    <uint name="nbConnections-26-39" val="0"/>
    <uint name="nbConnections-26-40" val="0"/>
    <uint name="nbConnections-26-41" val="0"/>
    <uint name="nbConnections-26-42" val="0"/>
    <uint name="nbConnections-26-43" val="0"/>
    <uint name="nbConnections-26-44" val="0"/>
    <uint name="nbConnections-26-45" val="0"/>
    <uint name="nbConnections-27-28" val="0"/>
    <uint name="nbConnections-27-29" val="0"/>
    <uint name="nbConnections-27-30" val="0"/>
    <uint name="nbConnections-27-31" val="0"/>
    <uint name="nbConnections-27-32" val="0"/>
    <uint name="nbConnections-27-33" val="0"/>
    <uint name="nbConnections-27-34" val="0"/>
    <uint name="nbConnections-27-35" val="0"/>
    <uint name="nbConnections-27-36" val="0"/>
    <uint name="nbConnections-27-37" val="1"/>
    <vector2u name="connection-27-37-0">
     <uint name="0" val="0"/>
     <uint name="1" val="4"/>
    </vector2u>
    <uint name="nbConnections-27-38" val="0"/>
    <uint name="nbConnections-27-39" val="0"/>
    <uint name="nbConnections-27-40" val="0"/>
    <uint name="nbConnections-27-41" val="0"/>
    <uint name="nbConnections-27-42" val="0"/>
    <uint name="nbConnections-27-43" val="0"/>
    <uint name="nbConnections-27-44" val="0"/>
    <uint name="nbConnections-27-45" val="0"/>
    <uint name="nbConnections-28-29" val="0"/>
    <uint name="nbConnections-28-30" val="0"/>
    <uint name="nbConnections-28-31" val="1"/>
    <vector2u name="connection-28-31-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-28-32" val="0"/>
    <uint name="nbConnections-28-33" val="0"/>
    <uint name="nbConnections-28-34" val="0"/>
    <uint name="nbConnections-28-35" val="0"/>
    <uint name="nbConnections-28-36" val="0"/>
    <uint name="nbConnections-28-37" val="0"/>
    <uint name="nbConnections-28-38" val="0"/>
    <uint name="nbConnections-28-39" val="0"/>
    <uint name="nbConnections-28-40" val="0"/>
    <uint name="nbConnections-28-41" val="0"/>
    <uint name="nbConnections-28-42" val="0"/>
    <uint name="nbConnections-28-43" val="0"/>
    <uint name="nbConnections-28-44" val="0"/>
    <uint name="nbConnections-28-45" val="0"/>
    <uint name="nbConnections-29-30" val="1"/>
    <vector2u name="connection-29-30-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-29-31" val="0"/>
    <uint name="nbConnections-29-32" val="0"/>
    <uint name="nbConnections-29-33" val="0"/>
    <uint name="nbConnections-29-34" val="0"/>
    <uint name="nbConnections-29-35" val="0"/>
    <uint name="nbConnections-29-36" val="0"/>
    <uint name="nbConnections-29-37" val="0"/>
    <uint name="nbConnections-29-38" val="0"/>
    <uint name="nbConnections-29-39" val="0"/>
    <uint name="nbConnections-29-40" val="0"/>
    <uint name="nbConnections-29-41" val="0"/>
    <uint name="nbConnections-29-42" val="0"/>
    <uint name="nbConnections-29-43" val="0"/>
    <uint name="nbConnections-29-44" val="0"/>
    <uint name="nbConnections-29-45" val="0"/>
    <uint name="nbConnections-30-31" val="1"/>
    <vector2u name="connection-30-31-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-30-32" val="0"/>
    <uint name="nbConnections-30-33" val="0"/>
    <uint name="nbConnections-30-34" val="0"/>
    <uint name="nbConnections-30-35" val="0"/>
    <uint name="nbConnections-30-36" val="0"/>
    <uint name="nbConnections-30-37" val="0"/>
    <uint name="nbConnections-30-38" val="0"/>
    <uint name="nbConnections-30-39" val="0"/>
    <uint name="nbConnections-30-40" val="0"/>
    <uint name="nbConnections-30-41" val="0"/>
    <uint name="nbConnections-30-42" val="0"/>
    <uint name="nbConnections-30-43" val="0"/>
    <uint name="nbConnections-30-44" val="0"/>
    <uint name="nbConnections-30-45" val="0"/>
    <uint name="nbConnections-31-32" val="1"/>
    <vector2u name="connection-31-32-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-31-33" val="0"/>
    <uint name="nbConnections-31-34" val="0"/>
    <uint name="nbConnections-31-35" val="0"/>
    <uint name="nbConnections-31-36" val="0"/>
    <uint name="nbConnections-31-37" val="0"/>
    <uint name="nbConnections-31-38" val="0"/>
    <uint name="nbConnections-31-39" val="0"/>
    <uint name="nbConnections-31-40" val="0"/>
    <uint name="nbConnections-31-41" val="0"/>
    <uint name="nbConnections-31-42" val="0"/>
    <uint name="nbConnections-31-43" val="0"/>
    <uint name="nbConnections-31-44" val="0"/>
    <uint name="nbConnections-31-45" val="0"/>
    <uint name="nbConnections-32-33" val="0"/>
    <uint name="nbConnections-32-34" val="1"/>
    <vector2u name="connection-32-34-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-32-35" val="0"/>
    <uint name="nbConnections-32-36" val="0"/>
    <uint name="nbConnections-32-37" val="0"/>
    <uint name="nbConnections-32-38" val="0"/>
    <uint name="nbConnections-32-39" val="0"/>
    <uint name="nbConnections-32-40" val="0"/>
    <uint name="nbConnections-32-41" val="0"/>
    <uint name="nbConnections-32-42" val="0"/>
    <uint name="nbConnections-32-43" val="0"/>
    <uint name="nbConnections-32-44" val="0"/>
    <uint name="nbConnections-32-45" val="0"/>
    <uint name="nbConnections-33-34" val="1"/>
    <vector2u name="connection-33-34-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-33-35" val="0"/>
    <uint name="nbConnections-33-36" val="0"/>
    <uint name="nbConnections-33-37" val="0"/>
    <uint name="nbConnections-33-38" val="0"/>
    <uint name="nbConnections-33-39" val="0"/>
    <uint name="nbConnections-33-40" val="0"/>
    <uint name="nbConnections-33-41" val="0"/>
    <uint name="nbConnections-33-42" val="0"/>
    <uint name="nbConnections-33-43" val="0"/>
    <uint name="nbConnections-33-44" val="0"/>
    <uint name="nbConnections-33-45" val="0"/>
    <uint name="nbConnections-34-35" val="1"/>
    <vector2u name="connection-34-35-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-34-36" val="0"/>
    <uint name="nbConnections-34-37" val="0"/>
    <uint name="nbConnections-34-38" val="0"/>
    <uint name="nbConnections-34-39" val="0"/>
    <uint name="nbConnections-34-40" val="0"/>
    <uint name="nbConnections-34-41" val="0"/>
    <uint name="nbConnections-34-42" val="0"/>
    <uint name="nbConnections-34-43" val="0"/>
    <uint name="nbConnections-34-44" val="0"/>
    <uint name="nbConnections-34-45" val="0"/>
    <uint name="nbConnections-35-36" val="1"/>
    <vector2u name="connection-35-36-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-35-37" val="0"/>
    <uint name="nbConnections-35-38" val="0"/>
    <uint name="nbConnections-35-39" val="0"/>
    <uint name="nbConnections-35-40" val="0"/>
    <uint name="nbConnections-35-41" val="0"/>
    <uint name="nbConnections-35-42" val="0"/>
    <uint name="nbConnections-35-43" val="0"/>
    <uint name="nbConnections-35-44" val="0"/>
    <uint name="nbConnections-35-45" val="0"/>
    <uint name="nbConnections-36-37" val="1"/>
    <vector2u name="connection-36-37-0">
     <uint name="0" val="0"/>
     <uint name="1" val="5"/>
    </vector2u>
    <uint name="nbConnections-36-38" val="0"/>
    <uint name="nbConnections-36-39" val="0"/>
    <uint name="nbConnections-36-40" val="0"/>
    <uint name="nbConnections-36-41" val="0"/>
    <uint name="nbConnections-36-42" val="0"/>
    <uint name="nbConnections-36-43" val="0"/>
    <uint name="nbConnections-36-44" val="0"/>
    <uint name="nbConnections-36-45" val="0"/>
    <uint name="nbConnections-37-38" val="0"/>
    <uint name="nbConnections-37-39" val="0"/>
    <uint name="nbConnections-37-40" val="0"/>
    <uint name="nbConnections-37-41" val="0"/>
    <uint name="nbConnections-37-42" val="0"/>
    <uint name="nbConnections-37-43" val="0"/>
    <uint name="nbConnections-37-44" val="0"/>
    <uint name="nbConnections-37-45" val="0"/>
    <uint name="nbConnections-38-39" val="0"/>
    <uint name="nbConnections-38-40" val="0"/>
    <uint name="nbConnections-38-41" val="0"/>
    <uint name="nbConnections-38-42" val="0"/>
    <uint name="nbConnections-38-43" val="0"/>
    <uint name="nbConnections-38-44" val="0"/>
    <uint name="nbConnections-38-45" val="0"/>
    <uint name="nbConnections-39-40" val="0"/>
    <uint name="nbConnections-39-41" val="0"/>
    <uint name="nbConnections-39-42" val="0"/>
    <uint name="nbConnections-39-43" val="0"/>
    <uint name="nbConnections-39-44" val="0"/>
    <uint name="nbConnections-39-45" val="0"/>
    <uint name="nbConnections-40-41" val="0"/>
    <uint name="nbConnections-40-42" val="0"/>
    <uint name="nbConnections-40-43" val="0"/>
    <uint name="nbConnections-40-44" val="0"/>
    <uint name="nbConnections-40-45" val="0"/>
    <uint name="nbConnections-41-42" val="0"/>
    <uint name="nbConnections-41-43" val="0"/>
    <uint name="nbConnections-41-44" val="0"/>
    <uint name="nbConnections-41-45" val="0"/>
    <uint name="nbConnections-42-43" val="1"/>
    <vector2u name="connection-42-43-0">
     <uint name="0" val="5"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-42-44" val="0"/>
    <uint name="nbConnections-42-45" val="0"/>
    <uint name="nbConnections-43-44" val="0"/>
    <uint name="nbConnections-43-45" val="0"/>
    <uint name="nbConnections-44-45" val="0"/>
    <bool name="nodeHasWidget-0" val="1"/>
    <IOData name="node-0">
     <string name="filename" val="gratin/build/data/imgs/default-tex.jpg"/>
     <vector2i name="size">
      <int name="0" val="512"/>
      <int name="1" val="512"/>
     </vector2i>
    </IOData>
    <IOData name="nodeWidget-0">
     <bool name="keepAspectRatio" val="0"/>
     <bool name="keepSize" val="0"/>
    </IOData>
    <vector2f name="nodeOutputPos-0-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-1" val="1"/>
    <IOData name="node-1">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="Camera"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float fovy;&#xa;uniform float near;&#xa;uniform float far;&#xa;uniform vec3 position;&#xa;uniform vec3 rotation;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 cameraMatrix;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float fovy;&#xa;uniform float near;&#xa;uniform float far;&#xa;uniform vec3 position;&#xa;uniform vec3 rotation;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;#define PI 3.14159265359&#xa;&#xa;vec4 rotate(vec4 v, float a){&#xa;&#x9;mat4 rotM = mat4(1);&#xa;&#x9;rotM[0] = vec4(cos(a),0,-sin(a),0);&#xa;&#x9;rotM[2] = vec4(sin(a),0,cos(a),0);&#xa;&#x9;return v*rotM;&#xa;}&#xa;bool equals(vec4 coord, int x, int y){&#xa;&#x9;return(int(coord.x) == x &amp;&amp; int(coord.y) ==y);&#xa;}&#xa;&#xa;vec4 setCameraMatrix(mat4 m, mat4 v, mat4 p){&#xa;&#x9;if(equals(gl_FragCoord,0,0))return m[0];&#xa;&#x9;if(equals(gl_FragCoord,1,0))return m[1];&#xa;&#x9;if(equals(gl_FragCoord,2,0))return m[2];&#xa;&#x9;if(equals(gl_FragCoord,3,0))return m[3];&#xa;&#xa;&#x9;if(equals(gl_FragCoord,0,1))return v[0];&#xa;&#x9;if(equals(gl_FragCoord,1,1))return v[1];&#xa;&#x9;if(equals(gl_FragCoord,2,1))return v[2];&#xa;&#x9;if(equals(gl_FragCoord,3,1))return v[3];&#xa;&#xa;&#x9;if(equals(gl_FragCoord,0,2))return p[0];&#xa;&#x9;if(equals(gl_FragCoord,1,2))return p[1];&#xa;&#x9;if(equals(gl_FragCoord,2,2))return p[2];&#xa;&#x9;if(equals(gl_FragCoord,3,2))return p[3];&#xa;&#xa;&#x9;return vec4(0,0,0,0);&#xa;}&#xa;&#xa;mat4 computeModel(){&#xa;&#x9;mat4 m = mat4(1);&#xa;&#x9;m[3] = vec4(position,1);&#xa;&#x9;return m; &#xa;}&#xa;&#xa;mat4 computeView(){&#xa;&#x9;mat4 v = mat4(1);&#xa;&#x9;vec3 rot = normalize(position);&#xa;&#x9;//vec3 rot = rotation;&#xa;&#x9;vec3 pos = position;&#xa;&#xa;&#x9;//v[3] = vec4(-pos,1);&#xa;&#x9;//v[2] = vec4(-normalize(rot),0);&#xa;&#x9;//v[1] = vec4(-normalize(cross(rot,vec3(0,1,0))),0);&#xa;&#x9;//v[0] = vec4(normalize(cross(v[2].xyz,v[1].xyz)),0);&#xa;&#xa;&#x9;vec3 d = normalize(rot);&#xa;&#x9;vec3 r = normalize(cross(rot,vec3(0,-1,0)));&#xa;&#x9;vec3 u = normalize(cross(d,r));&#xa;&#xa;&#x9;v[2] = vec4(-d,0);&#xa;&#x9;v[1] = vec4(u,0);&#xa;&#x9;v[0] = vec4(r,0);&#xa;&#x9;return v;&#xa;}&#xa;&#xa;mat4 computeProjection(){&#xa;&#x9;mat4 p = mat4(1);&#xa;&#x9;float f = 1/tan(fovy/2);&#xa;&#x9;//float f = 1.8;&#xa;&#x9;float a = 1/1;&#xa;&#x9;&#xa;&#x9;p[0] = vec4(f/a,0,0,0);&#xa;&#x9;p[1] = vec4(0,f,0,0);&#xa;&#x9;//p[2] = vec4(0,0,(far+near)/(near-far),-1);&#xa;&#x9;p[2] = vec4(0,0,-1,-1);&#xa;&#x9;//p[3] = vec4(0,0,(2*far*near)/(near-far),0);&#xa;&#x9;p[3] = vec4(0,0,-0.02,0);&#xa;&#xa;&#x9;return p;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;mat4 m = computeModel();&#xa;&#x9;mat4 v = computeView();&#xa;&#x9;mat4 p = computeProjection();&#xa;&#xa;&#x9;v[3] += vec4(0,0,0,0);&#xa;&#xa;&#x9;cameraMatrix = setCameraMatrix(m,v,p);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float fovy;&#xa;uniform float near;&#xa;uniform float far;&#xa;uniform vec3 position;&#xa;uniform vec3 rotation;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float fovy;&#xa;uniform float near;&#xa;uniform float far;&#xa;uniform vec3 position;&#xa;uniform vec3 rotation;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float fovy;&#xa;uniform float near;&#xa;uniform float far;&#xa;uniform vec3 position;&#xa;uniform vec3 rotation;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="5"/>
     <int name="genericWidgetType-0" val="4"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="position"/>
     <bool name="genericWidgetKeyframed-0" val="0"/>
     <int name="genericWidgetType-1" val="4"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="rotation"/>
     <bool name="genericWidgetKeyframed-1" val="0"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="fovy"/>
     <bool name="genericWidgetKeyframed-2" val="0"/>
     <int name="genericWidgetType-3" val="0"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="near"/>
     <bool name="genericWidgetKeyframed-3" val="0"/>
     <int name="genericWidgetType-4" val="0"/>
     <int name="genericWidgetView-4" val="1"/>
     <string name="genericWidgetName-4" val="far"/>
     <bool name="genericWidgetKeyframed-4" val="0"/>
    </IOData>
    <IOData name="nodeWidget-1">
     <uint name="nbChildren" val="5"/>
     <IOData name="childWidget-0">
      <bool name="vector3fAttribKeyframed" val="0"/>
      <vector3f name="vector3fAttribMinVal">
       <float name="0" val="-10"/>
       <float name="1" val="-10"/>
       <float name="2" val="-10"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float name="0" val="10"/>
       <float name="1" val="10"/>
       <float name="2" val="10"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float name="0" val="-5"/>
        <float name="1" val="-5"/>
        <float name="2" val="-7.4"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="-5"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="-5"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="-7.4"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="vector3fAttribKeyframed" val="0"/>
      <vector3f name="vector3fAttribMinVal">
       <float name="0" val="-4"/>
       <float name="1" val="-4"/>
       <float name="2" val="-4"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float name="0" val="4"/>
       <float name="1" val="4"/>
       <float name="2" val="4"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float name="0" val="1"/>
        <float name="1" val="0"/>
        <float name="2" val="1"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0.1"/>
      <float name="floatAttribMaxVal" val="2"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.5427"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.5427"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="-10"/>
      <float name="floatAttribMaxVal" val="10"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="-10"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="-10"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="-10"/>
      <float name="floatAttribMaxVal" val="10"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="10"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="10"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-1-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-1-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-2" val="1"/>
    <IOData name="node-2">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float fovy;&#xa;uniform int frame;&#xa;uniform vec3 light;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 renderBuffer;&#xa;layout(location = 1) out vec4 normalVBuffer;&#xa;layout(location = 2) out vec4 normalWBuffer;&#xa;layout(location = 3) out vec4 positionBuffer;&#xa;layout(location = 4) out vec4 depthBuffer;&#xa;layout(location = 5) out vec4 maskBuffer;&#xa;layout(location = 6) out vec4 colorBuffer;&#xa;layout(location = 7) out vec4 velocityBuffer;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float fovy;&#xa;uniform int frame;&#xa;uniform vec3 light;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;precision highp float;&#xa;&#xa;#define DIST_MIN 0.5 // minimum distance to objects&#xa;#define DIST_MAX 50.0 // maximum distance to objects &#xa;#define RAY_MARCH_STEPS 100&#xa;#define RAY_MARCH_PRECI 0.01&#xa;&#xa;#define CUBE 0&#xa;#define SPHERE 1&#xa;#define OCTAHEDRON 2&#xa;&#xa;// LOAD MATRICES&#xa;vec4 m0 = texelFetch(inBuffer0, ivec2(0, 0), 0);&#xa;vec4 m1 = texelFetch(inBuffer0, ivec2(1, 0), 0);&#xa;vec4 m2 = texelFetch(inBuffer0, ivec2(2, 0), 0);&#xa;vec4 m3 = texelFetch(inBuffer0, ivec2(3, 0), 0);&#xa;&#xa;vec4 v0 = texelFetch(inBuffer0, ivec2(0, 1), 0);&#xa;vec4 v1 = texelFetch(inBuffer0, ivec2(1, 1), 0);&#xa;vec4 v2 = texelFetch(inBuffer0, ivec2(2, 1), 0);&#xa;vec4 v3 = texelFetch(inBuffer0, ivec2(3, 1), 0);&#xa;&#xa;vec4 p0 = texelFetch(inBuffer0, ivec2(0, 2), 0);&#xa;vec4 p1 = texelFetch(inBuffer0, ivec2(1, 2), 0);&#xa;vec4 p2 = texelFetch(inBuffer0, ivec2(2, 2), 0);&#xa;vec4 p3 = texelFetch(inBuffer0, ivec2(3, 2), 0);&#xa;&#xa;mat4 m = mat4(m0,m1,m2,m3);&#xa;mat4 v = mat4(v0,v1,v2,v3);&#xa;mat4 p = mat4(p0,p1,p2,p3);&#xa;&#xa;&#xa;// ray structure&#xa;struct Ray {&#xa;&#x9;vec3 ro; // origin&#xa;&#x9;vec3 rd; // direction&#xa;};&#xa;&#xa;// camera structure&#xa;struct Camera {&#xa;&#x9;vec3 co; // origin&#xa;&#x9;vec3 v; // v axis (view)&#xa;&#x9;vec3 u; // u axis (up)&#xa;&#x9;vec3 r; // r axis (right)&#xa;};&#xa;&#xa;struct GenericObject {&#xa;&#x9;int type;&#xa;&#x9;vec3 pos;&#xa;&#x9;vec3 rot;&#xa;&#x9;vec3 size;&#xa;&#x9;vec4 color;&#xa;};&#xa;&#xa;// struct for remembering intersected object&#xa;struct ISObj {&#xa;&#x9;float d; // distance to the object&#xa;&#x9;vec3 p;&#xa;&#x9;int t; // type (-1=nothing,0=plane, 1=sphere)&#xa;&#x9;int i; // object ID&#xa;};&#xa;&#xa;const float DP = 10.0;&#xa;&#xa;GenericObject objectList[] = GenericObject[6](&#xa;&#x9;&#x9;GenericObject(CUBE,vec3(0,0,0),vec3(0,0,0),vec3(0.5,1,1),vec4(0.5,0.8,0,1)),&#xa;&#x9;&#x9;GenericObject(SPHERE,vec3(1,0,0),vec3(0,0,0),vec3(0.5,1,1),vec4(0.5,0.8,0,1)),&#xa;&#x9;&#x9;GenericObject(OCTAHEDRON,vec3(0,1,0),vec3(0,0,0),vec3(0.5,1,1),vec4(0.5,0.8,0,1)),&#xa;&#x9;&#x9;GenericObject(CUBE,vec3(0,0,1),vec3(0,0,0),vec3(0.2,1,1),vec4(0.5,0.8,0,1)),&#xa;&#x9;&#x9;GenericObject(SPHERE,vec3(0,0.2,1),vec3(0,0,0),vec3(0.18,1,1),vec4(0.5,0.8,0,1)),&#xa;&#x9;&#x9;GenericObject(SPHERE,vec3(0,0.5,1),vec3(0,0,0),vec3(0.1,1,1),vec4(0.5,0.8,0,1))&#xa;);&#xa;&#xa;//GenericObject objectList[] = GenericObject[1](&#xa;//&#x9;&#x9;GenericObject(CUBE,vec3(0,0,0),vec3(0,0,0),vec3(0.5,1,1),vec4(0.5,0.8,0,1))&#xa;//);&#xa;&#xa;ISObj distSphere(in GenericObject obj,in vec3 pos, int id) {&#xa;&#x9;vec3 p = pos-obj.pos;&#xa;&#x9;float radius = obj.size.x;&#xa;&#x9;return ISObj(length(p)-radius,obj.pos,1,0);&#xa;}&#xa;&#xa;ISObj distCube(in GenericObject obj,in vec3 pos, int id) {&#xa;&#x9;vec3 p = pos-obj.pos;&#xa;&#x9;float edge = obj.size.x;&#xa;&#x9;float radius = 0;&#xa;&#x9;return ISObj(length(max(abs(p)-edge,0.0))-radius,obj.pos,1,0);&#xa;}&#xa;&#xa;ISObj distOctahedron(in GenericObject obj,in vec3 pos, int id) {&#xa;&#x9;vec3 p = pos-obj.pos;&#xa;&#x9;p = abs(p);&#xa;&#x9;float q = length(p.xy);&#xa;&#x9;vec2 c = vec2(1,1);&#xa;&#x9;return ISObj(&#xa;&#x9;&#x9;(p.x+p.y+p.z-obj.size.x)*0.57735027&#xa;&#x9;,obj.pos,1,0);&#xa;}&#xa;&#xa;ISObj dist(in GenericObject obj, in vec3 pos, int id){&#xa;&#x9;if(obj.type == SPHERE){&#xa;&#x9;&#x9;return distSphere(obj,pos,id);&#xa;&#x9;}else if(obj.type == CUBE){&#xa;&#x9;&#x9;return distCube(obj,pos,id);&#xa;&#x9;}else if(obj.type == OCTAHEDRON){&#xa;&#x9;&#x9;return distOctahedron(obj,pos,id);&#xa;&#x9;}else{&#xa;&#x9;&#x9;return distCube(obj,pos,id);&#xa;&#x9;}&#xa;}&#xa;&#xa;ISObj distScene(in vec3 pos) {&#xa;&#x9;int idmin = 0;&#xa;&#x9;ISObj r = dist(objectList[0],pos,0);&#xa;&#x9;ISObj newr;&#xa;&#x9;for(int i = 1; i &lt; objectList.length; i++){&#xa;&#x9;&#x9;newr = dist(objectList[i],pos,i);&#xa;&#x9;&#x9;if(newr.d &lt; r.d){&#xa;&#x9;&#x9;&#x9;r = newr;&#xa;&#x9;&#x9;&#x9;idmin = i;&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#x9;return r;&#xa;}&#xa;&#xa;ISObj rayMarch(in Ray r) {&#xa;&#x9;float t = DIST_MIN;&#xa;&#xa;&#x9;ISObj res = ISObj(DIST_MAX,vec3(0),-1,-1);&#xa;&#x9;for(int i=0;i&lt;RAY_MARCH_STEPS;++i) {&#xa;&#x9;&#x9;ISObj tmp = distScene(r.ro+t*r.rd); //on récupère l'objet le plus proche de la caméra&#xa;&#xa;&#x9;&#x9;if(tmp.d&lt;RAY_MARCH_PRECI) {&#xa;&#x9;&#x9;&#x9;return ISObj(t,tmp.p,tmp.t,tmp.i);&#xa;&#x9;&#x9;}&#xa;&#xa;&#x9;&#x9;t = t+tmp.d;&#xa;&#x9;&#x9;&#xa;&#x9;&#x9;if(t>DIST_MAX) {&#xa;&#x9;&#x9;&#x9;return ISObj(DIST_MAX,vec3(0),-1,-1);&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;return ISObj(DIST_MAX,vec3(0),-1,-1);&#xa;}&#xa;&#xa;vec3 computeNormal(in ISObj is,in Ray r) {&#xa;&#x9;const float e = 0.001;&#xa;&#x9;vec3 p = r.ro+is.d*r.rd;&#xa;&#x9;float nx = distScene(vec3(p.x+e,p.y,p.z)).d-distScene(vec3(p.x-e,p.y,p.z)).d;&#xa;&#x9;float ny = distScene(vec3(p.x,p.y+e,p.z)).d-distScene(vec3(p.x,p.y-e,p.z)).d;&#xa;&#x9;float nz = distScene(vec3(p.x,p.y,p.z+e)).d-distScene(vec3(p.x,p.y,p.z-e)).d;&#xa;&#xa;&#x9;return normalize(vec3(nx,ny,nz));&#xa;}&#xa;&#xa;vec3 backgroundColor(in vec3 p) {&#xa;&#x9;float d = distance(p,light);&#xa;&#x9;return mix(vec3(0.9,0.85,0.5),vec3(0.2),smoothstep(0.2,0.3,d/50.));&#xa;}&#xa;&#xa;Camera computeCamera(in vec2 p){&#xa;&#x9;// placement de la caméra&#xa;&#x9;vec3 co = -m[3].xyz;&#xa;&#x9;vec3 cv = -v[2].xyz;&#xa;&#x9;vec3 cr = v[1].xyz;&#xa;&#x9;vec3 cu = v[0].xyz;&#xa;&#xa;&#x9;return Camera(co,cv,cr,cu);&#xa;}&#xa;&#xa;mat3 reverseCamera(Camera camera){&#xa;&#x9;return inverse(transpose(mat3(camera.r, camera.u, -camera.v)));&#xa;}&#xa;&#xa;vec4 computeRender(in ISObj o,in Ray r) {&#xa;&#x9;vec3 p = r.ro+r.rd*o.d;&#xa;&#xa;&#x9;if(o.t==-1) return vec4(backgroundColor(p),1);&#xa;&#xa;&#x9;vec3 l = normalize(light-p);&#xa;&#x9;Ray sr = Ray(p,l);&#xa;&#xa;&#x9;ISObj shadowTest = rayMarch(sr);&#xa;&#xa;&#x9;float i = shadowTest.t>=0 ? 0.5 : 1.0;&#xa;&#x9;vec3 c = o.t==0 ? vec3(0.8,0.5,0.7) : vec3(0.6,0.7,0.9);&#xa;&#x9;vec3 n = computeNormal(o,r);&#xa;&#x9;&#xa;&#x9;return vec4(c*i*max(dot(n,l),0.),1);&#xa;}&#xa;&#xa;vec4 computeVNormal(in ISObj o,in Ray r,in Camera c) {&#xa;&#x9;if(o.t==-1) return vec4(0,0,0,0);&#xa;&#x9;vec3 n = computeNormal(o,r)*reverseCamera(c);&#xa;&#x9;return vec4(n,1);&#xa;}&#xa;&#xa;vec4 computeWNormal(in ISObj o,in Ray r) {&#xa;&#x9;if(o.t==-1) return vec4(0,0,0,0);&#xa;&#x9;vec3 n = computeNormal(o,r);&#xa;&#x9;return vec4(n,1);&#xa;}&#xa;&#xa;vec4 computePosition(in ISObj o, in Ray r, in Camera c){&#xa;&#x9;vec3 p = r.ro + r.rd*o.d;&#xa;&#x9;return vec4(p,1);&#xa;}&#xa;&#xa;vec4 computeDepth(in ISObj o,in Ray r){&#xa;&#x9;return vec4(vec3(o.d),1);&#xa;}&#xa;&#xa;Ray generatePerspectiveRay(Camera camera) {&#xa;&#x9;float D = p0.x; &#xa;&#x9;vec3 ro = camera.co;&#xa;&#x9;vec3 rd = normalize(&#xa;&#x9;&#x9;&#x9;vec3(&#xa;&#x9;&#x9;&#x9;&#x9;(texcoord.x-0.5)*camera.r+&#xa;&#x9;&#x9;&#x9;&#x9;(texcoord.y-0.5)*camera.u+&#xa;&#x9;&#x9;&#x9;&#x9;D*camera.v&#xa;&#x9;&#x9;&#x9;)&#xa;&#x9;&#x9;);&#xa;&#x9;return Ray(ro,rd);&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;Camera c = computeCamera(texcoord*2.0-1.0);&#xa;&#x9;Ray r = generatePerspectiveRay(c);&#xa;&#x9;ISObj is = rayMarch(r);&#xa;&#x9;&#xa;&#x9;//cameraParameters = computeCameraParams(c);&#xa;&#x9;&#xa;&#x9;depthBuffer = computeDepth(is,r);&#xa;&#x9;if(is.t&lt;0) depthBuffer = vec4(0,0,0,0);&#xa;&#xa;&#x9;positionBuffer = computePosition(is,r,c);&#xa;&#x9;if(is.t&lt;0) positionBuffer = vec4(0,0,0,0);&#xa;&#xa;&#x9;normalVBuffer = computeVNormal(is,r,c);&#xa;&#x9;if(is.t&lt;0) normalVBuffer = vec4(0,0,0,0);&#xa;&#xa;&#x9;normalWBuffer = computeWNormal(is,r);&#xa;&#x9;if(is.t&lt;0) normalWBuffer = vec4(0,0,0,0);&#xa;&#xa;&#x9;renderBuffer= computeRender(is,r);&#xa;&#x9;if(is.t&lt;0) renderBuffer = vec4(0,0,0,0);&#xa;}"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float fovy;&#xa;uniform int frame;&#xa;uniform vec3 light;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float fovy;&#xa;uniform int frame;&#xa;uniform vec3 light;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float fovy;&#xa;uniform int frame;&#xa;uniform vec3 light;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="3"/>
     <int name="genericWidgetType-0" val="4"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="light"/>
     <bool name="genericWidgetKeyframed-0" val="0"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="fovy"/>
     <bool name="genericWidgetKeyframed-1" val="0"/>
     <int name="genericWidgetType-2" val="1"/>
     <int name="genericWidgetView-2" val="2"/>
     <string name="genericWidgetName-2" val="frame"/>
     <bool name="genericWidgetKeyframed-2" val="1"/>
    </IOData>
    <IOData name="nodeWidget-2">
     <uint name="nbChildren" val="3"/>
     <IOData name="childWidget-0">
      <bool name="vector3fAttribKeyframed" val="0"/>
      <vector3f name="vector3fAttribMinVal">
       <float name="0" val="-100"/>
       <float name="1" val="-100"/>
       <float name="2" val="-100"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float name="0" val="100"/>
       <float name="1" val="100"/>
       <float name="2" val="100"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float name="0" val="-10"/>
        <float name="1" val="30"/>
        <float name="2" val="20"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="-10"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="30"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="20"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0.1"/>
      <float name="floatAttribMaxVal" val="2"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="1.0804"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1.0804"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="100"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-2-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-2-0">
     <float name="0" val="56.32"/>
     <float name="1" val="4364.8"/>
    </vector2f>
    <vector2f name="nodeOutputPos-2-1">
     <float name="0" val="56.32"/>
     <float name="1" val="3745.28"/>
    </vector2f>
    <vector2f name="nodeOutputPos-2-2">
     <float name="0" val="56.32"/>
     <float name="1" val="3125.76"/>
    </vector2f>
    <vector2f name="nodeOutputPos-2-3">
     <float name="0" val="56.32"/>
     <float name="1" val="2506.24"/>
    </vector2f>
    <vector2f name="nodeOutputPos-2-4">
     <float name="0" val="56.32"/>
     <float name="1" val="1886.72"/>
    </vector2f>
    <vector2f name="nodeOutputPos-2-5">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeOutputPos-2-6">
     <float name="0" val="56.32"/>
     <float name="1" val="647.68"/>
    </vector2f>
    <vector2f name="nodeOutputPos-2-7">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-3" val="1"/>
    <IOData name="node-3">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-3">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-3-0">
     <float name="0" val="56.32"/>
     <float name="1" val="3745.28"/>
    </vector2f>
    <vector2f name="nodeOutputPos-3-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-4" val="1"/>
    <IOData name="node-4">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="phongShading"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 shadingMap;&#xa;layout(location = 1) out vec4 diffuseParamMap;&#xa;layout(location = 2) out vec4 specularParamMap;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;vec2 m = mouse/vec2(textureSize(normalMap,0))-vec2(.5);&#xa;&#x9;vec3 l = normalize(vec3(m,.5));&#xa;&#x9;vec3 n = texture(normalMap,texcoord).xyz;&#xa;&#xa;&#x9;// hack for computing the view direction&#xa;&#x9;// the true view could be obtained in &#xa;&#x9;// another buffer of a genericBuffer node&#xa;&#x9;vec3 v = normalize(vec3(texcoord*2.-1.,-30.));&#xa;&#xa;&#x9;float ndl = pow(dot(n,l),2);&#xa;&#x9;float rdv = pow(dot(reflect(l,n),v),2);&#xa;&#xa;&#x9;float d = max(rdv,0);&#xa;&#x9;float s = pow(rdv,shininess);&#xa;&#x9;float a = length(n);&#xa;&#xa;&#x9;shadingMap.xyz = Ka + Kd*d + Ks*s*0.5;&#xa;&#x9;shadingMap.w = a;&#xa;&#xa;&#x9;diffuseParamMap = vec4(vec3(ndl*0.5+0.5),a);&#xa;&#x9;specularParamMap = vec4(vec3(rdv*0.5+0.5),a);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="1"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="4"/>
     <int name="genericWidgetType-0" val="4"/>
     <int name="genericWidgetView-0" val="2"/>
     <string name="genericWidgetName-0" val="Ka"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="4"/>
     <int name="genericWidgetView-1" val="2"/>
     <string name="genericWidgetName-1" val="Kd"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="4"/>
     <int name="genericWidgetView-2" val="2"/>
     <string name="genericWidgetName-2" val="Ks"/>
     <bool name="genericWidgetKeyframed-2" val="1"/>
     <int name="genericWidgetType-3" val="0"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="shininess"/>
     <bool name="genericWidgetKeyframed-3" val="1"/>
    </IOData>
    <IOData name="nodeWidget-4">
     <uint name="nbChildren" val="5"/>
     <IOData name="childWidget-0">
      <bool name="vector2iAttribKeyframed" val="1"/>
      <vector2i name="vector2iAttribMinVal">
       <int name="0" val="-10000"/>
       <int name="1" val="-10000"/>
      </vector2i>
      <vector2i name="vector2iAttribMaxVal">
       <int name="0" val="10000"/>
       <int name="1" val="10000"/>
      </vector2i>
      <IOData name="vector2iAttribCurve">
       <vector2i name="currentVal">
        <int name="0" val="208"/>
        <int name="1" val="466"/>
       </vector2i>
       <uint name="nbCurves" val="2"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="208"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="466"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="vector3fAttribKeyframed" val="1"/>
      <vector3f name="vector3fAttribMinVal">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
       <float name="2" val="1"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float name="0" val="0"/>
        <float name="1" val="0"/>
        <float name="2" val="0"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="vector3fAttribKeyframed" val="1"/>
      <vector3f name="vector3fAttribMinVal">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
       <float name="2" val="1"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float name="0" val="1"/>
        <float name="1" val="0.801953"/>
        <float name="2" val="0.446662"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.801953"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.446662"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="vector3fAttribKeyframed" val="1"/>
      <vector3f name="vector3fAttribMinVal">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
       <float name="2" val="1"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float name="0" val="1"/>
        <float name="1" val="1"/>
        <float name="2" val="1"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="1"/>
      <float name="floatAttribMaxVal" val="1000"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="41.959"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="41.959"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-4-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-4-0">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeOutputPos-4-1">
     <float name="0" val="56.32"/>
     <float name="1" val="647.68"/>
    </vector2f>
    <vector2f name="nodeOutputPos-4-2">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-5" val="1"/>
    <IOData name="node-5">
     <int name="processMode" val="0"/>
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="globalMaxMinDepth"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 maxMinDepth;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;if(isFinest)&#xa;&#x9;&#x9;maxMinDepth = texture(image,texcoord);&#xa;&#x9;else {&#xa;&#x9;&#x9;vec2 ps = .5/vec2(textureSize(prevLevel0,0));&#xa;&#x9;&#x9;&#xa;&#x9;&#x9;vec4 c[4];&#xa;&#x9;&#x9;c[0] = texture(prevLevel0,texcoord+ps);&#xa;&#x9;&#x9;c[1] = texture(prevLevel0,texcoord-ps);&#xa;&#x9;&#x9;c[2] = texture(prevLevel0,texcoord+vec2(ps.x,-ps.y));&#xa;&#x9;&#x9;c[3] = texture(prevLevel0,texcoord+vec2(-ps.x,ps.y));&#xa;&#xa;&#x9;&#x9;const float T = .9;&#xa;&#x9;&#x9;float cmin = 1e+10;&#xa;&#x9;&#x9;float cmax = 0.;&#xa;&#x9;&#x9;float alpha = 0.;&#xa;&#xa;&#x9;&#x9;for(int i=0;i&lt;4;++i) {&#xa;&#x9;&#x9;&#x9;if(c[i].a>T) {&#xa;&#x9;&#x9;&#x9;&#x9;cmin = min(cmin,c[i].y);&#xa;&#x9;&#x9;&#x9;&#x9;cmax = max(cmax,c[i].x);&#xa;&#x9;&#x9;&#x9;&#x9;alpha = c[i].a;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;&#x9;}&#xa;&#xa;&#x9;&#x9;maxMinDepth = vec4(cmax,cmin,0.,alpha);&#xa;&#x9;}&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-5">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-5-0">
     <float name="0" val="56.32"/>
     <float name="1" val="1886.72"/>
    </vector2f>
    <vector2f name="nodeOutputPos-5-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-6" val="1"/>
    <IOData name="node-6">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="normalizeDepth"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;vec2 s = textureSize(inBuffer0,0);&#xa;&#x9;float l = 1.+floor(log2(max(s.x,s.y)));&#xa;&#x9;vec4 dl = textureLod(inBuffer0,vec2(.5),l);&#xa;&#x9;vec4 d = texture(inBuffer0,texcoord);&#xa;&#xa;&#x9;float nd = (d.x-dl.y)/((dl.x-dl.y));&#xa;&#xa;&#x9;outBuffer0 = vec4(nd,nd,nd,d.w);&#xa;&#x9;if(d.w&lt;0.5) outBuffer0 = vec4(2,2,2,0.0);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-6">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-6-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-6-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-7" val="1"/>
    <IOData name="node-7">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="planeFittingGradient"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 gradient;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericFragBody" val="// fit 2 planes: one on gx values, one on gy values&#xa;// this is to get second order derivatives by still taking weight&#xa;// into account (bilateral weights in that case)&#xa;&#xa;#define F 0.619928135&#xa;&#xa;in vec2 texcoord;&#xa;&#xa;float scaleDepth(in vec4 c) {&#xa;&#x9;return c.x;&#xa;}&#xa;&#xa;float val(in vec4 c) {&#xa;&#x9;return length(c.xyz);&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;const float eps = 1e-10;&#xa;&#xa;&#x9;float sigS = max(sigmaS,eps);&#xa;&#x9;float halfsize = ceil(sigS/F);&#xa;&#x9;vec2 pixelSize = 1.0/vec2(textureSize(slopeMap,0));&#xa;&#xa;&#x9;float facS = -1./(2.*sigS*sigS);&#xa;&#x9;float facL = -1./(2.*sigmaL*sigmaL);&#xa;&#xa;&#x9;float sumW = 0.;&#xa;&#xa;&#x9;float d = scaleDepth(texture(depthMap,texcoord));&#xa;&#x9;float a = texture(depthMap,texcoord).w;&#xa;&#xa;&#x9;mat3 ATWA = mat3(0.);&#xa;&#xa;&#x9;vec3 ATB = vec3(0.);&#xa;&#xa;&#x9;for(float i=-halfsize;i&lt;=halfsize;++i) {&#xa;&#x9;&#x9;for(float j=-halfsize;j&lt;=halfsize;++j) {&#xa;&#x9;&#x9;&#x9;vec2 pos = vec2(i,j);&#xa;&#x9;&#x9;&#x9;vec4 col = texture(slopeMap,texcoord+pos*pixelSize);&#xa;&#x9;&#x9;&#x9;vec4 dep = texture(depthMap,texcoord+pos*pixelSize);&#xa;&#xa;&#x9;&#x9;&#x9;float distS = length(pos);&#xa;&#x9;&#x9;&#x9;float distL = (scaleDepth(dep)-d)*a;&#xa;&#xa;&#x9;&#x9;&#x9;float wS = exp(facS*float(distS*distS));&#xa;&#x9;&#x9;&#x9;float wL = exp(facL*float(distL*distL));&#xa;&#x9;&#x9;&#x9;float w = wS*wL;&#xa;&#xa;&#x9;&#x9;&#x9;// normalized version&#xa;&#x9;&#x9;&#x9;//col.xy = length(col.xy)>eps ? normalize(col.xy) : col.xy;&#xa;&#xa;&#x9;&#x9;&#x9;float x = pos.x;&#xa;&#x9;&#x9;&#x9;float y = pos.y;&#xa;&#x9;&#x9;&#x9;float z = val(col);&#xa;&#xa;&#x9;&#x9;&#x9;ATWA[0][0] += w*x*x;&#xa;&#x9;&#x9;&#x9;ATWA[0][1] += w*x*y;&#xa;&#x9;&#x9;&#x9;ATWA[0][2] += w*x;&#xa;&#x9;&#x9;&#x9;ATWA[1][1] += w*y*y;&#xa;&#x9;&#x9;&#x9;ATWA[1][2] += w*y;&#xa;&#x9;&#x9;&#x9;ATWA[2][2] += w;&#xa;&#xa;&#x9;&#x9;&#x9;ATB += vec3(w*x*z,w*y*z,w*z);&#xa;&#xa;&#x9;&#x9;&#x9;sumW += w;&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;ATWA[1][0] = ATWA[0][1];&#xa;&#x9;ATWA[2][0] = ATWA[0][2];&#xa;&#x9;ATWA[2][1] = ATWA[1][2];&#xa;&#xa;&#x9;if(sumW>eps) {&#xa;&#x9;&#x9;ATWA /= sumW;&#xa;&#x9;&#x9;ATB /= sumW;&#xa;&#x9;}&#xa;&#xa;&#x9;mat3 ATWAINV = inverse(ATWA);&#xa;&#x9;vec3 P = ATWAINV*ATB;&#xa;&#xa;&#x9;vec3 G = -vec3(P.x,P.y,0.)*scale*10;&#xa;&#x9;G.z = 1.;//-tanh(length(G.xy));&#xa;&#x9;G = length(G.xy) >eps ? normalize(G) : G;&#xa;&#xa;&#x9;gradient = vec4(G,a);&#xa;}"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="3"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="sigmaS"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="sigmaL"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="scale"/>
     <bool name="genericWidgetKeyframed-2" val="0"/>
    </IOData>
    <IOData name="nodeWidget-7">
     <uint name="nbChildren" val="3"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="100"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="4.5"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="4.5"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.027"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.027"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="50"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="38.05"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="38.05"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-7-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-7-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-7-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-8" val="1"/>
    <IOData name="node-8">
     <string name="filename" val="../../data/imgs/pencil_splat-01.png"/>
     <vector2i name="size">
      <int name="0" val="250"/>
      <int name="1" val="250"/>
     </vector2i>
    </IOData>
    <IOData name="nodeWidget-8">
     <bool name="keepAspectRatio" val="0"/>
     <bool name="keepSize" val="0"/>
    </IOData>
    <vector2f name="nodeOutputPos-8-0">
     <float name="0" val="27.5"/>
     <float name="1" val="13.75"/>
    </vector2f>
    <bool name="nodeHasWidget-9" val="1"/>
    <IOData name="node-9">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 d = texture(inBuffer0,texcoord);&#xa;&#x9;float op = d.w;&#xa;&#x9;float l = (d.x+d.y+d.z)/3.;&#xa;&#x9;outBuffer0 = vec4(1,0.,0,d.w);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-9">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-9-0">
     <float name="0" val="27.5"/>
     <float name="1" val="13.75"/>
    </vector2f>
    <vector2f name="nodeOutputPos-9-0">
     <float name="0" val="27.5"/>
     <float name="1" val="13.75"/>
    </vector2f>
    <bool name="nodeHasWidget-10" val="1"/>
    <IOData name="node-10">
     <int name="processMode" val="0"/>
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericPyramid"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;if(isFinest)&#xa;&#x9;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;&#x9;else {&#xa;&#x9;&#x9;vec2 ps = .5*(1./vec2(textureSize(prevLevel0,0)));&#xa;&#x9;&#x9;vec4 c1 = texture(prevLevel0,texcoord+ps);&#xa;&#x9;&#x9;vec4 c2 = texture(prevLevel0,texcoord-ps);&#xa;&#x9;&#x9;vec4 c3 = texture(prevLevel0,texcoord+vec2(ps.x,-ps.y));&#xa;&#x9;&#x9;vec4 c4 = texture(prevLevel0,texcoord+vec2(-ps.x,ps.y));&#xa;&#x9;&#x9;outBuffer0 = 0.25*(c1+c2+c3+c4);&#xa;&#x9;}&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-10">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-10-0">
     <float name="0" val="27.5"/>
     <float name="1" val="13.75"/>
    </vector2f>
    <vector2f name="nodeOutputPos-10-0">
     <float name="0" val="27.5"/>
     <float name="1" val="13.75"/>
    </vector2f>
    <bool name="nodeHasWidget-11" val="1"/>
    <IOData name="node-11"/>
    <IOData name="nodeWidget-11">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="500"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="4"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="4"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-11-0">
     <float name="0" val="27.5"/>
     <float name="1" val="13.75"/>
    </vector2f>
    <vector2f name="nodeOutputPos-11-0">
     <float name="0" val="27.5"/>
     <float name="1" val="13.75"/>
    </vector2f>
    <bool name="nodeHasWidget-12" val="1"/>
    <IOData name="node-12">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="imageGradient"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="10497"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D image;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float scale;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 gradient;&#xa;uniform sampler2D image;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float scale;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;float value(in vec4 c) {&#xa;&#x9;// gradient of what:&#xa;&#x9;return 1.- .9*(c.x+c.y+c.z)/3.;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 ps = 1./vec2(textureSize(image,0));&#xa;&#x9;&#xa;&#x9;vec2 g = vec2(&#x9;value(texture(image,texcoord+vec2(ps.x,0.))) -&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value(texture(image,texcoord-vec2(ps.x,0.))),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value(texture(image,texcoord+vec2(0.,ps.y))) -&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value(texture(image,texcoord-vec2(0.,ps.y))))/2.;&#xa;&#x9;&#xa;&#x9;vec3 n1 = vec3(1.,0.,g.x*scale);&#xa;&#x9;vec3 n2 = vec3(0.,1.,-g.y*scale);&#xa;&#x9;vec3 n = normalize(cross(n1,n2));&#xa;&#xa;&#x9;gradient = vec4(n,texture(inBuffer1,texcoord).w);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D image;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float scale;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D image;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float scale;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D image;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float scale;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="1"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="scale"/>
     <bool name="genericWidgetKeyframed-0" val="0"/>
    </IOData>
    <IOData name="nodeWidget-12">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="1"/>
      <float name="floatAttribMaxVal" val="500"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="24.952"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="24.952"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-12-0">
     <float name="0" val="27.5"/>
     <float name="1" val="13.75"/>
    </vector2f>
    <vector2f name="nodeInputPos-12-1">
     <float name="0" val="27.5"/>
     <float name="1" val="13.75"/>
    </vector2f>
    <vector2f name="nodeOutputPos-12-0">
     <float name="0" val="27.5"/>
     <float name="1" val="13.75"/>
    </vector2f>
    <bool name="nodeHasWidget-13" val="1"/>
    <IOData name="node-13">
     <int name="processMode" val="0"/>
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericPyramid"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;if(isFinest)&#xa;&#x9;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;&#x9;else {&#xa;&#x9;&#x9;vec2 ps = .5*(1./vec2(textureSize(prevLevel0,0)));&#xa;&#x9;&#x9;vec4 c1 = texture(prevLevel0,texcoord+ps);&#xa;&#x9;&#x9;vec4 c2 = texture(prevLevel0,texcoord-ps);&#xa;&#x9;&#x9;vec4 c3 = texture(prevLevel0,texcoord+vec2(ps.x,-ps.y));&#xa;&#x9;&#x9;vec4 c4 = texture(prevLevel0,texcoord+vec2(-ps.x,ps.y));&#xa;&#x9;&#x9;outBuffer0 = 0.25*(c1+c2+c3+c4);&#xa;&#x9;}&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-13">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-13-0">
     <float name="0" val="27.5"/>
     <float name="1" val="13.75"/>
    </vector2f>
    <vector2f name="nodeOutputPos-13-0">
     <float name="0" val="27.5"/>
     <float name="1" val="13.75"/>
    </vector2f>
    <bool name="nodeHasWidget-14" val="1"/>
    <IOData name="node-14">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-14">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-14-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-14-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-15" val="1"/>
    <IOData name="node-15">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-15">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-15-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-15-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-16" val="1"/>
    <IOData name="node-16">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-16">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-16-0">
     <float name="0" val="56.32"/>
     <float name="1" val="2506.24"/>
    </vector2f>
    <vector2f name="nodeOutputPos-16-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-17" val="1"/>
    <IOData name="node-17">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-17">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-17-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-17-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-18" val="1"/>
    <IOData name="node-18">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-18">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-18-0">
     <float name="0" val="56.32"/>
     <float name="1" val="3125.76"/>
    </vector2f>
    <vector2f name="nodeOutputPos-18-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-19" val="1"/>
    <IOData name="node-19">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-19">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-19-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-19-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-20" val="1"/>
    <IOData name="node-20">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-20">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-20-0">
     <float name="0" val="56.32"/>
     <float name="1" val="4364.8"/>
    </vector2f>
    <vector2f name="nodeOutputPos-20-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-21" val="1"/>
    <IOData name="node-21">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D color;&#xa;uniform sampler2D shade;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D color;&#xa;uniform sampler2D shade;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;vec3 rgbToHsv(in float r,in float g,in float b) {&#xa;&#x9;const float eps = 1e-15;&#xa;&#xa;&#x9;float h,s,v;&#xa;&#xa;&#x9;v = max(max(r,g),b);&#xa;&#x9;float delta = v-min(min(r,g),b);&#xa;  &#xa;&#x9;if(delta&lt;eps) {&#xa;&#x9;&#x9;s = 0.0;&#xa;&#x9;&#x9;h = 0.0;&#xa;&#x9;} else {&#xa;&#x9;&#x9;s = delta/v;&#xa;    &#xa;&#x9;&#x9;if(r==v)&#x9;&#x9;&#x9;h = (g-b)/delta;&#xa;&#x9;&#x9;else if(g==v)&#x9;&#x9;h = 2.0 + (b-r)/delta;&#xa;&#x9;&#x9;else&#x9;&#x9;&#x9;&#x9;&#x9;h = 4.0 + (r-g)/delta;&#xa;&#xa;&#x9;&#x9;h *= 60.0;&#xa;&#x9;&#x9;if(h&lt;0.0)&#xa;&#x9;&#x9;&#x9;h += 360;&#xa;&#x9;}&#xa;  &#xa;&#x9;return vec3(h,s,v);&#xa;}&#xa;&#xa;vec3 hsvToRgb(in float h,in float s,in float v) {&#xa;&#x9;vec3 rgb;&#xa;&#x9;int hi = int(floor(h/60.0))%6;&#xa;&#x9;float f = h/60.0 - floor(h/60.0);&#xa;&#x9;float p = v*(1.0-s);&#xa;&#x9;float q = v*(1.0-f*s);&#xa;&#x9;float t = v*(1.0-(1.0-f)*s);&#xa;&#xa;&#x9;if(hi==0) rgb = vec3(v,t,p);&#xa;&#x9;else if(hi==1) rgb = vec3(q,v,p);&#xa;&#x9;else if(hi==2) rgb = vec3(p,v,t);&#xa;&#x9;else if(hi==3) rgb = vec3(p,q,v);&#xa;&#x9;else if(hi==4) rgb = vec3(t,p,v);&#xa;&#x9;else rgb = vec3(v,p,q);&#xa;&#xa;&#x9;return rgb;&#xa;}&#xa;&#xa;vec3 colorize(vec4 color,vec4 shade){&#xa;&#x9;vec3 hsvColor = rgbToHsv(color.x, color.y, color.z);&#xa;&#x9;vec3 hsvShade = rgbToHsv(shade.x,shade.y, shade.z);&#xa;&#x9;hsvColor.y = hsvShade.y+(2-hsvShade.z*2)+0.4;&#xa;&#x9;hsvColor.z = hsvShade.z;&#xa;&#x9;return(hsvToRgb(hsvColor.x,hsvColor.y,hsvColor.z));&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec4 color = texture(color,texcoord);&#xa;&#x9;vec4 shade = texture(shade,texcoord);&#xa;&#x9;//outBuffer0 = vec4(colorize(color, shade),shade.w);&#xa;&#x9;outBuffer0 = vec4(color);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D color;&#xa;uniform sampler2D shade;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D color;&#xa;uniform sampler2D shade;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D color;&#xa;uniform sampler2D shade;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-21">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-21-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-21-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-21-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-22" val="1"/>
    <IOData name="node-22">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="shading"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 shadingMap;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;shadingMap = texture(inBuffer0,texcoord);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-22">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-22-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-22-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-23" val="1"/>
    <IOData name="node-23">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-23">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-23-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-23-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-24" val="1"/>
    <IOData name="node-24">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="planeFittingGradient"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 gradient;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericFragBody" val="// fit 2 planes: one on gx values, one on gy values&#xa;// this is to get second order derivatives by still taking weight&#xa;// into account (bilateral weights in that case)&#xa;&#xa;#define F 0.619928135&#xa;&#xa;in vec2 texcoord;&#xa;&#xa;float scaleDepth(in vec4 c) {&#xa;&#x9;return c.x;&#xa;}&#xa;&#xa;float val(in vec4 c) {&#xa;&#x9;return length(c.xyz);&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;const float eps = 1e-10;&#xa;&#xa;&#x9;float sigS = max(sigmaS,eps);&#xa;&#x9;float halfsize = ceil(sigS/F);&#xa;&#x9;vec2 pixelSize = 1.0/vec2(textureSize(slopeMap,0));&#xa;&#xa;&#x9;float facS = -1./(2.*sigS*sigS);&#xa;&#x9;float facL = -1./(2.*sigmaL*sigmaL);&#xa;&#xa;&#x9;float sumW = 0.;&#xa;&#xa;&#x9;float d = scaleDepth(texture(depthMap,texcoord));&#xa;&#x9;float a = texture(depthMap,texcoord).w;&#xa;&#xa;&#x9;mat3 ATWA = mat3(0.);&#xa;&#xa;&#x9;vec3 ATB = vec3(0.);&#xa;&#xa;&#x9;for(float i=-halfsize;i&lt;=halfsize;++i) {&#xa;&#x9;&#x9;for(float j=-halfsize;j&lt;=halfsize;++j) {&#xa;&#x9;&#x9;&#x9;vec2 pos = vec2(i,j);&#xa;&#x9;&#x9;&#x9;vec4 col = texture(slopeMap,texcoord+pos*pixelSize);&#xa;&#x9;&#x9;&#x9;vec4 dep = texture(depthMap,texcoord+pos*pixelSize);&#xa;&#xa;&#x9;&#x9;&#x9;float distS = length(pos);&#xa;&#x9;&#x9;&#x9;float distL = (scaleDepth(dep)-d)*a;&#xa;&#xa;&#x9;&#x9;&#x9;float wS = exp(facS*float(distS*distS));&#xa;&#x9;&#x9;&#x9;float wL = exp(facL*float(distL*distL));&#xa;&#x9;&#x9;&#x9;float w = wS*wL;&#xa;&#xa;&#x9;&#x9;&#x9;// normalized version&#xa;&#x9;&#x9;&#x9;//col.xy = length(col.xy)>eps ? normalize(col.xy) : col.xy;&#xa;&#xa;&#x9;&#x9;&#x9;float x = pos.x;&#xa;&#x9;&#x9;&#x9;float y = pos.y;&#xa;&#x9;&#x9;&#x9;float z = val(col);&#xa;&#xa;&#x9;&#x9;&#x9;ATWA[0][0] += w*x*x;&#xa;&#x9;&#x9;&#x9;ATWA[0][1] += w*x*y;&#xa;&#x9;&#x9;&#x9;ATWA[0][2] += w*x;&#xa;&#x9;&#x9;&#x9;ATWA[1][1] += w*y*y;&#xa;&#x9;&#x9;&#x9;ATWA[1][2] += w*y;&#xa;&#x9;&#x9;&#x9;ATWA[2][2] += w;&#xa;&#xa;&#x9;&#x9;&#x9;ATB += vec3(w*x*z,w*y*z,w*z);&#xa;&#xa;&#x9;&#x9;&#x9;sumW += w;&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;ATWA[1][0] = ATWA[0][1];&#xa;&#x9;ATWA[2][0] = ATWA[0][2];&#xa;&#x9;ATWA[2][1] = ATWA[1][2];&#xa;&#xa;&#x9;if(sumW>eps) {&#xa;&#x9;&#x9;ATWA /= sumW;&#xa;&#x9;&#x9;ATB /= sumW;&#xa;&#x9;}&#xa;&#xa;&#x9;mat3 ATWAINV = inverse(ATWA);&#xa;&#x9;vec3 P = ATWAINV*ATB;&#xa;&#xa;&#x9;vec3 G = -vec3(P.x,P.y,0.)*scale*10;&#xa;&#x9;G.z = 1.;//-tanh(length(G.xy));&#xa;&#x9;G = length(G.xy) >eps ? normalize(G) : G;&#xa;&#xa;&#x9;gradient = vec4(G,a);&#xa;}"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="3"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="sigmaS"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="sigmaL"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="scale"/>
     <bool name="genericWidgetKeyframed-2" val="0"/>
    </IOData>
    <IOData name="nodeWidget-24">
     <uint name="nbChildren" val="3"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="100"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="13.3"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="13.3"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.027"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.027"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="50"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="3.65"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="3.65"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-24-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-24-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-24-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-25" val="1"/>
    <IOData name="node-25">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="flowField"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float screenRotate;&#xa;uniform float depthRotate;&#xa;uniform float mixFlows;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 flowMap;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float screenRotate;&#xa;uniform float depthRotate;&#xa;uniform float mixFlows;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;#define PI 3.1415926535898&#xa;&#xa;vec2 rotate2D(in vec2 v,in float angle,in vec2 c) {&#xa;  // rotation of v around c with a particular angle&#xa;  vec2 T = v-c;&#xa;  return vec2(cos(angle)*T.x-sin(angle)*T.y,&#xa;&#x9;      sin(angle)*T.x+cos(angle)*T.y) + c;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec4 d = texture(inBuffer0,texcoord);&#xa;&#x9;d.xy = rotate2D(d.xy,screenRotate,vec2(0.));&#xa;&#x9;//d.z *= depthRotate;&#xa;&#xa;&#x9;d.z = smoothstep(0.9,1.,d.z)*depthRotate;&#xa;&#xa;&#x9;vec4 nf = texture(inBuffer1,texcoord);&#xa;&#x9;//d.xy = mix(d.xy,nf.xy,mixFlows);&#xa;&#x9;d.xyz = mix(d.xyz,nf.xyz,mixFlows);&#xa;&#xa;&#x9;flowMap = d;&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float screenRotate;&#xa;uniform float depthRotate;&#xa;uniform float mixFlows;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float screenRotate;&#xa;uniform float depthRotate;&#xa;uniform float mixFlows;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float screenRotate;&#xa;uniform float depthRotate;&#xa;uniform float mixFlows;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="3"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="screenRotate"/>
     <bool name="genericWidgetKeyframed-0" val="0"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="depthRotate"/>
     <bool name="genericWidgetKeyframed-1" val="0"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="mixFlows"/>
     <bool name="genericWidgetKeyframed-2" val="0"/>
    </IOData>
    <IOData name="nodeWidget-25">
     <uint name="nbChildren" val="3"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="6.28319"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.314"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.314"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-25-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-25-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-25-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-26" val="1"/>
    <IOData name="node-26">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="depthFlow"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 d1 = texture(inBuffer0,texcoord);&#xa;&#x9;vec4 d2 = texture(inBuffer1,texcoord);&#xa;&#x9;outBuffer0 = vec4(d1.x,d2.xyz);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-26">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-26-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-26-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-26-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-27" val="1"/>
    <IOData name="node-27">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-27">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-27-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-27-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-28" val="1"/>
    <IOData name="node-28">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="3DWorleyNoise"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 proceduralTex;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;#define EPS 1e-5&#xa;&#xa;// LOAD MATRICES&#xa;vec4 m0 = texelFetch(matrices, ivec2(0, 0), 0);&#xa;vec4 m1 = texelFetch(matrices, ivec2(1, 0), 0);&#xa;vec4 m2 = texelFetch(matrices, ivec2(2, 0), 0);&#xa;vec4 m3 = texelFetch(matrices, ivec2(3, 0), 0);&#xa;&#xa;vec4 v0 = texelFetch(matrices, ivec2(0, 1), 0);&#xa;vec4 v1 = texelFetch(matrices, ivec2(1, 1), 0);&#xa;vec4 v2 = texelFetch(matrices, ivec2(2, 1), 0);&#xa;vec4 v3 = texelFetch(matrices, ivec2(3, 1), 0);&#xa;&#xa;vec4 p0 = texelFetch(matrices, ivec2(0, 2), 0);&#xa;vec4 p1 = texelFetch(matrices, ivec2(1, 2), 0);&#xa;vec4 p2 = texelFetch(matrices, ivec2(2, 2), 0);&#xa;vec4 p3 = texelFetch(matrices, ivec2(3, 2), 0);&#xa;&#xa;// model, view, projection and normal matrices&#xa;mat4 model = mat4(m0,m1,m2,m3);&#xa;mat4 view = mat4(v0,v1,v2,v3);&#xa;mat4 proj = mat4(p0,p1,p2,p3);&#xa;mat4 mvp = proj*view*model;&#xa;&#xa;vec3 hash33(vec3 p) {&#xa;&#x9;vec3 q = vec3(&#x9;dot(p,vec3(127.1,311.7,74.7)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(269.5,183.3,246.1)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(113.5,271.9,124.6)));&#xa;&#x9;return fract(sin(q)*43758.5453123);&#xa;}&#xa;&#xa;vec3 project(in vec3 p) {&#xa;&#x9;vec4 tmp = mvp*vec4(p,1.);&#xa;&#x9;return tmp.xyz/tmp.w;&#xa;}&#xa;&#xa;vec4 wnoise(in vec3 x,in float freq) {&#xa;&#x9;// x: 3D position &#xa;&#x9;// f: frequency&#xa;&#x9;// return: closest 3D rand position + 3D dist between x and this position &#xa;&#xa;&#x9;vec3 p = floor(x*freq);&#xa;&#x9;vec3 f = fract(x*freq);&#xa;&#x9;//vec3 xp = project(x);&#xa;&#xa;&#x9;float id = 0.0;&#xa;&#x9;vec4 res = vec4(1e+10);&#xa;&#x9;for( int k=-1; k&lt;=1; k++ )&#xa;&#x9;&#x9;for( int j=-1; j&lt;=1; j++ )&#xa;&#x9;&#x9;&#x9;for( int i=-1; i&lt;=1; i++ ) {&#xa;&#x9;&#x9;&#x9;&#x9;vec3 b = vec3( float(i), float(j), float(k) );&#xa;&#x9;&#x9;&#x9;&#x9;vec3 r = (p+b+hash33( p + b ))/freq;&#xa;&#x9;&#x9;&#x9;&#x9;//vec3 rp = r-dot(n,r-x)*n;&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;float d = distance(r,x);&#xa;&#x9;&#x9;&#x9;&#x9;//float d = distance(project(r).xy,xp.xy);&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;if(d&lt;res.w) {&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;res = vec4(r,d);&#xa;&#x9;&#x9;&#x9;&#x9;} &#xa;    }&#xa;&#xa;    return res;&#xa;}&#xa;&#xa;vec3 dist(in vec3 p,in vec4 n) {&#xa;&#x9;// 3D distance &#xa;&#x9;//return vec3(n.w,vec2(0.));&#xa;&#xa;&#x9;// 2D (projected) distance  + offset to splat position &#xa;&#x9;vec3 p1 = project(p);&#xa;&#x9;vec3 p2 = project(n.xyz);&#xa;&#xa;&#x9;return vec3(distance(p1.xy,p2.xy),p2.xy-p1.xy);&#xa;}&#xa;&#xa;vec3 fnoise(in vec3 p,in float amplitude,in float frequency,in float persistence, in int nboctaves) {&#xa;&#x9;float a = amplitude;&#xa;&#x9;float f = frequency;&#xa;&#x9;float n = 0.0;&#xa;&#x9;vec2 o = vec2(0.);&#xa;&#xa;&#x9;for(int i=0;i&lt;nboctaves;++i) {&#xa;&#x9;&#x9;vec3 d = dist(p,wnoise(p,f));&#xa;&#x9;&#x9;n = n+a*d.x;&#xa;&#x9;&#x9;o = o+a*d.yz;&#xa;&#x9;&#x9;f = f*2.;&#xa;&#x9;&#x9;a = a*persistence;&#xa;&#x9;}&#xa;&#x9;&#xa;&#x9;return vec3(n,o);&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;if(texture(positionMap,texcoord).w&lt;EPS) {&#xa;&#x9;&#x9;proceduralTex =  vec4(0.);&#xa;&#x9;&#x9;return;&#xa;&#x9;}&#xa;&#xa;&#x9;vec2 ps = .5*(1./textureSize(positionMap,0).xy); // half pixel size &#xa;&#x9;vec2 psStep  = ps/float(nbSamples+1);&#xa;&#x9;vec3 n = vec3(0.);&#xa;&#x9;float nb = 0.;&#xa;&#x9;float a = 0.;&#xa;&#xa;&#x9;for(int i=-nbSamples;i&lt;=nbSamples;++i) {&#xa;&#x9;&#x9;&#x9;for(int j=-nbSamples;j&lt;=nbSamples;++j) {&#xa;&#x9;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*psStep;&#xa;&#x9;&#x9;&#x9;&#x9;vec4 data = texture(positionMap,coord);&#xa;&#x9;&#x9;&#x9;&#x9;vec3 t = fnoise(data.xyz,amplitude,frequency,persistence,nboctaves);&#xa;&#x9;&#x9;&#x9;&#x9;n.x +=  1.-smoothstep(0.,style,t.x);&#xa;&#x9;&#x9;&#x9;&#x9;n.yz += t.yz*offset;&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;a += data.w;&#xa;&#x9;&#x9;&#x9;&#x9;nb += 1.;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;float finalA = a/nb;&#xa;&#x9;vec3 finalN = n/nb;&#xa;&#xa;&#x9;proceduralTex =  vec4(finalN,finalA);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="7"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="frequency"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="amplitude"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="persistence"/>
     <bool name="genericWidgetKeyframed-2" val="1"/>
     <int name="genericWidgetType-3" val="1"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="nboctaves"/>
     <bool name="genericWidgetKeyframed-3" val="1"/>
     <int name="genericWidgetType-4" val="1"/>
     <int name="genericWidgetView-4" val="1"/>
     <string name="genericWidgetName-4" val="nbSamples"/>
     <bool name="genericWidgetKeyframed-4" val="0"/>
     <int name="genericWidgetType-5" val="0"/>
     <int name="genericWidgetView-5" val="1"/>
     <string name="genericWidgetName-5" val="style"/>
     <bool name="genericWidgetKeyframed-5" val="0"/>
     <int name="genericWidgetType-6" val="0"/>
     <int name="genericWidgetView-6" val="1"/>
     <string name="genericWidgetName-6" val="offset"/>
     <bool name="genericWidgetKeyframed-6" val="0"/>
    </IOData>
    <IOData name="nodeWidget-28">
     <uint name="nbChildren" val="7"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="100"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="25.7"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="25.7"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.712"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.712"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="1"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="9"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="9"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="intAttribKeyframed" val="0"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="4"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="4"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-5">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="0.1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.0104"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.0104"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-6">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-28-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-28-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-28-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-29" val="1"/>
    <IOData name="node-29">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="3DWorleyNoise"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 proceduralTex;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;#define EPS 1e-5&#xa;&#xa;// LOAD MATRICES&#xa;vec4 m0 = texelFetch(matrices, ivec2(0, 0), 0);&#xa;vec4 m1 = texelFetch(matrices, ivec2(1, 0), 0);&#xa;vec4 m2 = texelFetch(matrices, ivec2(2, 0), 0);&#xa;vec4 m3 = texelFetch(matrices, ivec2(3, 0), 0);&#xa;&#xa;vec4 v0 = texelFetch(matrices, ivec2(0, 1), 0);&#xa;vec4 v1 = texelFetch(matrices, ivec2(1, 1), 0);&#xa;vec4 v2 = texelFetch(matrices, ivec2(2, 1), 0);&#xa;vec4 v3 = texelFetch(matrices, ivec2(3, 1), 0);&#xa;&#xa;vec4 p0 = texelFetch(matrices, ivec2(0, 2), 0);&#xa;vec4 p1 = texelFetch(matrices, ivec2(1, 2), 0);&#xa;vec4 p2 = texelFetch(matrices, ivec2(2, 2), 0);&#xa;vec4 p3 = texelFetch(matrices, ivec2(3, 2), 0);&#xa;&#xa;// model, view, projection and normal matrices&#xa;mat4 model = mat4(m0,m1,m2,m3);&#xa;mat4 view = mat4(v0,v1,v2,v3);&#xa;mat4 proj = mat4(p0,p1,p2,p3);&#xa;mat4 mvp = proj*view*model;&#xa;&#xa;vec3 hash33(vec3 p) {&#xa;&#x9;vec3 q = vec3(&#x9;dot(p,vec3(127.1,311.7,74.7)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(269.5,183.3,246.1)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(113.5,271.9,124.6)));&#xa;&#x9;return fract(sin(q)*43758.5453123);&#xa;}&#xa;&#xa;vec3 project(in vec3 p) {&#xa;&#x9;vec4 tmp = mvp*vec4(p,1.);&#xa;&#x9;return tmp.xyz/tmp.w;&#xa;}&#xa;&#xa;vec4 wnoise(in vec3 x,in float freq) {&#xa;&#x9;// x: 3D position &#xa;&#x9;// f: frequency&#xa;&#x9;// return: closest 3D rand position + 3D dist between x and this position &#xa;&#xa;&#x9;vec3 p = floor(x*freq);&#xa;&#x9;vec3 f = fract(x*freq);&#xa;&#x9;//vec3 xp = project(x);&#xa;&#xa;&#x9;float id = 0.0;&#xa;&#x9;vec4 res = vec4(1e+10);&#xa;&#x9;for( int k=-1; k&lt;=1; k++ )&#xa;&#x9;&#x9;for( int j=-1; j&lt;=1; j++ )&#xa;&#x9;&#x9;&#x9;for( int i=-1; i&lt;=1; i++ ) {&#xa;&#x9;&#x9;&#x9;&#x9;vec3 b = vec3( float(i), float(j), float(k) );&#xa;&#x9;&#x9;&#x9;&#x9;vec3 r = (p+b+hash33( p + b ))/freq;&#xa;&#x9;&#x9;&#x9;&#x9;//vec3 rp = r-dot(n,r-x)*n;&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;float d = distance(r,x);&#xa;&#x9;&#x9;&#x9;&#x9;//float d = distance(project(r).xy,xp.xy);&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;if(d&lt;res.w) {&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;res = vec4(r,d);&#xa;&#x9;&#x9;&#x9;&#x9;} &#xa;    }&#xa;&#xa;    return res;&#xa;}&#xa;&#xa;vec3 dist(in vec3 p,in vec4 n) {&#xa;&#x9;// 3D distance &#xa;&#x9;//return vec3(n.w,vec2(0.));&#xa;&#xa;&#x9;// 2D (projected) distance  + offset to splat position &#xa;&#x9;vec3 p1 = project(p);&#xa;&#x9;vec3 p2 = project(n.xyz);&#xa;&#xa;&#x9;return vec3(distance(p1.xy,p2.xy),p2.xy-p1.xy);&#xa;}&#xa;&#xa;vec3 fnoise(in vec3 p,in float amplitude,in float frequency,in float persistence, in int nboctaves) {&#xa;&#x9;float a = amplitude;&#xa;&#x9;float f = frequency;&#xa;&#x9;float n = 0.0;&#xa;&#x9;vec2 o = vec2(0.);&#xa;&#xa;&#x9;for(int i=0;i&lt;nboctaves;++i) {&#xa;&#x9;&#x9;vec3 d = dist(p,wnoise(p,f));&#xa;&#x9;&#x9;n = n+a*d.x;&#xa;&#x9;&#x9;o = o+a*d.yz;&#xa;&#x9;&#x9;f = f*2.;&#xa;&#x9;&#x9;a = a*persistence;&#xa;&#x9;}&#xa;&#x9;&#xa;&#x9;return vec3(n,o);&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;if(texture(positionMap,texcoord).w&lt;EPS) {&#xa;&#x9;&#x9;proceduralTex =  vec4(0.);&#xa;&#x9;&#x9;return;&#xa;&#x9;}&#xa;&#xa;&#x9;vec2 ps = .5*(1./textureSize(positionMap,0).xy); // half pixel size &#xa;&#x9;vec2 psStep  = ps/float(nbSamples+1);&#xa;&#x9;vec3 n = vec3(0.);&#xa;&#x9;float nb = 0.;&#xa;&#x9;float a = 0.;&#xa;&#xa;&#x9;for(int i=-nbSamples;i&lt;=nbSamples;++i) {&#xa;&#x9;&#x9;&#x9;for(int j=-nbSamples;j&lt;=nbSamples;++j) {&#xa;&#x9;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*psStep;&#xa;&#x9;&#x9;&#x9;&#x9;vec4 data = texture(positionMap,coord);&#xa;&#x9;&#x9;&#x9;&#x9;vec3 t = fnoise(data.xyz,amplitude,frequency,persistence,nboctaves);&#xa;&#x9;&#x9;&#x9;&#x9;n.x +=  1.-smoothstep(0.,style,t.x);&#xa;&#x9;&#x9;&#x9;&#x9;n.yz += t.yz*offset;&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;a += data.w;&#xa;&#x9;&#x9;&#x9;&#x9;nb += 1.;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;float finalA = a/nb;&#xa;&#x9;vec3 finalN = n/nb;&#xa;&#xa;&#x9;proceduralTex =  vec4(finalN,finalA);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="7"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="frequency"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="amplitude"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="persistence"/>
     <bool name="genericWidgetKeyframed-2" val="1"/>
     <int name="genericWidgetType-3" val="1"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="nboctaves"/>
     <bool name="genericWidgetKeyframed-3" val="1"/>
     <int name="genericWidgetType-4" val="1"/>
     <int name="genericWidgetView-4" val="1"/>
     <string name="genericWidgetName-4" val="nbSamples"/>
     <bool name="genericWidgetKeyframed-4" val="0"/>
     <int name="genericWidgetType-5" val="0"/>
     <int name="genericWidgetView-5" val="1"/>
     <string name="genericWidgetName-5" val="style"/>
     <bool name="genericWidgetKeyframed-5" val="0"/>
     <int name="genericWidgetType-6" val="0"/>
     <int name="genericWidgetView-6" val="1"/>
     <string name="genericWidgetName-6" val="offset"/>
     <bool name="genericWidgetKeyframed-6" val="0"/>
    </IOData>
    <IOData name="nodeWidget-29">
     <uint name="nbChildren" val="7"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="100"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="27.6"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="27.6"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.139"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.139"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="1"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="intAttribKeyframed" val="0"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-5">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="0.1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.0004"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.0004"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-6">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-29-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-29-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-29-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-30" val="1"/>
    <IOData name="node-30">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;float factor = 5;&#xa;&#x9;float offset = 0.8;&#xa;&#x9;vec4 r = vec4(texture(inBuffer0,texcoord).xyz,((factor*offset)-texture(inBuffer1,texcoord).z*factor)*texture(inBuffer1,texcoord).w);&#xa;&#x9;r.w = min(r.w,texture(inBuffer0,texcoord).x);&#xa;&#xa;&#x9;outBuffer0 = r;&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-30">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-30-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-30-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-30-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-31" val="1"/>
    <IOData name="node-31">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 a = texture(inBuffer0,texcoord);&#xa;&#x9;vec4 b = texture(inBuffer1,texcoord);&#xa;&#xa;&#x9;vec4 r = mix(a,b,1-a.w)*4;&#xa;&#xa;&#x9;outBuffer0 = r;&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-31">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-31-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-31-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-31-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-32" val="1"/>
    <IOData name="node-32">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float slant;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float slant;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 d1 = texture(inBuffer0,texcoord);&#xa;&#x9;vec4 d2 = texture(inBuffer1,texcoord);&#xa;&#x9;&#xa;&#x9;float s = smoothstep(0.,1.,pow(d2.z,1.3));&#xa;&#x9;d1.x *= mix(1.,s,slant);&#xa;&#x9;outBuffer0 = d1;&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float slant;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float slant;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float slant;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="1"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="slant"/>
     <bool name="genericWidgetKeyframed-0" val="0"/>
    </IOData>
    <IOData name="nodeWidget-32">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-32-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-32-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-32-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-33" val="1"/>
    <IOData name="node-33">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="normalizeDepth"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;vec2 s = textureSize(inBuffer0,0);&#xa;&#x9;float l = 1.+floor(log2(max(s.x,s.y)));&#xa;&#x9;vec4 dl = textureLod(inBuffer0,vec2(.5),l);&#xa;&#x9;vec4 d = texture(inBuffer0,texcoord);&#xa;&#xa;&#x9;float nd = (d.x-dl.y)/((dl.x-dl.y));&#xa;&#xa;&#x9;outBuffer0 = 1-vec4(nd,nd,nd,d.w);&#xa;&#x9;if(d.w&lt;0.5) outBuffer0 = vec4(2,2,2,0.0);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-33">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-33-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-33-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-34" val="1"/>
    <IOData name="node-34">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="impulsesPlusSplatSize"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float addSizeVariation;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float addSizeVariation;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 d1 = texture(inBuffer0,texcoord);&#xa;&#x9;vec4 d2 = texture(inBuffer1,texcoord);&#xa;&#x9;float v = mix(1.,d2.x,addSizeVariation);&#xa;&#x9;outBuffer0 = vec4(d1.xyz,v);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float addSizeVariation;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float addSizeVariation;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float addSizeVariation;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="1"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="addSizeVariation"/>
     <bool name="genericWidgetKeyframed-0" val="0"/>
    </IOData>
    <IOData name="nodeWidget-34">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-34-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-34-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-34-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-35" val="1"/>
    <IOData name="node-35">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 d1 = texture(inBuffer0,texcoord);&#xa;&#x9;vec4 d2 = texture(inBuffer1,texcoord);&#xa;&#x9;&#xa;&#x9;d1.w *= (1.-d2.w*0.3);&#xa;&#x9;outBuffer0 = d1;&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-35">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-35-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-35-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-35-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-36" val="1"/>
    <IOData name="node-36">
     <int name="processMode" val="0"/>
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="globalMaxMinDepth"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 maxMinDepth;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;if(isFinest)&#xa;&#x9;&#x9;maxMinDepth = texture(image,texcoord);&#xa;&#x9;else {&#xa;&#x9;&#x9;vec2 ps = .5/vec2(textureSize(prevLevel0,0));&#xa;&#x9;&#x9;&#xa;&#x9;&#x9;vec4 c[4];&#xa;&#x9;&#x9;c[0] = texture(prevLevel0,texcoord+ps);&#xa;&#x9;&#x9;c[1] = texture(prevLevel0,texcoord-ps);&#xa;&#x9;&#x9;c[2] = texture(prevLevel0,texcoord+vec2(ps.x,-ps.y));&#xa;&#x9;&#x9;c[3] = texture(prevLevel0,texcoord+vec2(-ps.x,ps.y));&#xa;&#xa;&#x9;&#x9;const float T = .9;&#xa;&#x9;&#x9;float cmin = 1e+10;&#xa;&#x9;&#x9;float cmax = 0.;&#xa;&#x9;&#x9;float alpha = 0.;&#xa;&#xa;&#x9;&#x9;for(int i=0;i&lt;4;++i) {&#xa;&#x9;&#x9;&#x9;if(c[i].a>T) {&#xa;&#x9;&#x9;&#x9;&#x9;cmin = min(cmin,c[i].y);&#xa;&#x9;&#x9;&#x9;&#x9;cmax = max(cmax,c[i].x);&#xa;&#x9;&#x9;&#x9;&#x9;alpha = c[i].a;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;&#x9;}&#xa;&#xa;&#x9;&#x9;maxMinDepth = vec4(cmax,cmin,0.,alpha);&#xa;&#x9;}&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-36">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-36-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-36-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-37" val="1"/>
    <IOData name="node-37"/>
    <IOData name="nodeWidget-37">
     <uint name="nbChildren" val="3"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.048"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.048"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0.01"/>
      <float name="floatAttribMaxVal" val="10"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="2.13787"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="2.13787"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0.01"/>
      <float name="floatAttribMaxVal" val="8"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.25769"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.25769"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-37-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-37-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-37-2">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-37-3">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-37-4">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-37-5">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-37-6">
     <float name="0" val="27.5"/>
     <float name="1" val="13.75"/>
    </vector2f>
    <vector2f name="nodeInputPos-37-7">
     <float name="0" val="27.5"/>
     <float name="1" val="13.75"/>
    </vector2f>
    <vector2f name="nodeOutputPos-37-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-38" val="1"/>
    <IOData name="node-38">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="imageGradient"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 gradient;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;float value(in vec4 c) {&#xa;&#x9;// gradient of what:&#xa;&#x9;return (c.x+c.y+c.z)/3.;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 ps = 1./vec2(textureSize(image,0));&#xa;&#x9;&#xa;&#x9;vec2 g = vec2(&#x9;value(texture(image,texcoord+vec2(ps.x,0.))) -&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value(texture(image,texcoord-vec2(ps.x,0.))),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value(texture(image,texcoord+vec2(0.,ps.y))) -&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value(texture(image,texcoord-vec2(0.,ps.y))))/2.;&#xa;&#x9;&#xa;&#x9;gradient = vec4(-g*500,0.,texture(image,texcoord).w);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-38">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-38-0">
     <float name="0" val="56.32"/>
     <float name="1" val="647.68"/>
    </vector2f>
    <vector2f name="nodeOutputPos-38-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-39" val="1"/>
    <IOData name="node-39">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="3DWorleyNoise"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 proceduralTex;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;#define EPS 1e-5&#xa;&#xa;// LOAD MATRICES&#xa;vec4 m0 = texelFetch(matrices, ivec2(0, 0), 0);&#xa;vec4 m1 = texelFetch(matrices, ivec2(1, 0), 0);&#xa;vec4 m2 = texelFetch(matrices, ivec2(2, 0), 0);&#xa;vec4 m3 = texelFetch(matrices, ivec2(3, 0), 0);&#xa;&#xa;vec4 v0 = texelFetch(matrices, ivec2(0, 1), 0);&#xa;vec4 v1 = texelFetch(matrices, ivec2(1, 1), 0);&#xa;vec4 v2 = texelFetch(matrices, ivec2(2, 1), 0);&#xa;vec4 v3 = texelFetch(matrices, ivec2(3, 1), 0);&#xa;&#xa;vec4 p0 = texelFetch(matrices, ivec2(0, 2), 0);&#xa;vec4 p1 = texelFetch(matrices, ivec2(1, 2), 0);&#xa;vec4 p2 = texelFetch(matrices, ivec2(2, 2), 0);&#xa;vec4 p3 = texelFetch(matrices, ivec2(3, 2), 0);&#xa;&#xa;// model, view, projection and normal matrices&#xa;mat4 model = mat4(m0,m1,m2,m3);&#xa;mat4 view = mat4(v0,v1,v2,v3);&#xa;mat4 proj = mat4(p0,p1,p2,p3);&#xa;mat4 mvp = proj*view*model;&#xa;&#xa;vec3 hash33(vec3 p) {&#xa;&#x9;vec3 q = vec3(&#x9;dot(p,vec3(127.1,311.7,74.7)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(269.5,183.3,246.1)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(113.5,271.9,124.6)));&#xa;&#x9;return fract(sin(q)*43758.5453123);&#xa;}&#xa;&#xa;vec3 project(in vec3 p) {&#xa;&#x9;vec4 tmp = mvp*vec4(p,1.);&#xa;&#x9;return tmp.xyz/tmp.w;&#xa;}&#xa;&#xa;vec4 wnoise(in vec3 x,in float freq) {&#xa;&#x9;// x: 3D position &#xa;&#x9;// f: frequency&#xa;&#x9;// return: closest 3D rand position + 3D dist between x and this position &#xa;&#xa;&#x9;vec3 p = floor(x*freq);&#xa;&#x9;vec3 f = fract(x*freq);&#xa;&#x9;//vec3 xp = project(x);&#xa;&#xa;&#x9;float id = 0.0;&#xa;&#x9;vec4 res = vec4(1e+10);&#xa;&#x9;for( int k=-1; k&lt;=1; k++ )&#xa;&#x9;&#x9;for( int j=-1; j&lt;=1; j++ )&#xa;&#x9;&#x9;&#x9;for( int i=-1; i&lt;=1; i++ ) {&#xa;&#x9;&#x9;&#x9;&#x9;vec3 b = vec3( float(i), float(j), float(k) );&#xa;&#x9;&#x9;&#x9;&#x9;vec3 r = (p+b+hash33( p + b ))/freq;&#xa;&#x9;&#x9;&#x9;&#x9;//vec3 rp = r-dot(n,r-x)*n;&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;float d = distance(r,x);&#xa;&#x9;&#x9;&#x9;&#x9;//float d = distance(project(r).xy,xp.xy);&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;if(d&lt;res.w) {&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;res = vec4(r,d);&#xa;&#x9;&#x9;&#x9;&#x9;} &#xa;    }&#xa;&#xa;    return res;&#xa;}&#xa;&#xa;vec3 dist(in vec3 p,in vec4 n) {&#xa;&#x9;// 3D distance &#xa;&#x9;//return vec3(n.w,vec2(0.));&#xa;&#xa;&#x9;// 2D (projected) distance  + offset to splat position &#xa;&#x9;vec3 p1 = project(p);&#xa;&#x9;vec3 p2 = project(n.xyz);&#xa;&#xa;&#x9;return vec3(distance(p1.xy,p2.xy),p2.xy-p1.xy);&#xa;}&#xa;&#xa;vec3 fnoise(in vec3 p,in float amplitude,in float frequency,in float persistence, in int nboctaves) {&#xa;&#x9;float a = amplitude;&#xa;&#x9;float f = frequency;&#xa;&#x9;float n = 0.0;&#xa;&#x9;vec2 o = vec2(0.);&#xa;&#xa;&#x9;for(int i=0;i&lt;nboctaves;++i) {&#xa;&#x9;&#x9;vec3 d = dist(p,wnoise(p,f));&#xa;&#x9;&#x9;n = n+a*d.x;&#xa;&#x9;&#x9;o = o+a*d.yz;&#xa;&#x9;&#x9;f = f*2.;&#xa;&#x9;&#x9;a = a*persistence;&#xa;&#x9;}&#xa;&#x9;&#xa;&#x9;return vec3(n,o);&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;if(texture(positionMap,texcoord).w&lt;EPS) {&#xa;&#x9;&#x9;proceduralTex =  vec4(0.);&#xa;&#x9;&#x9;return;&#xa;&#x9;}&#xa;&#xa;&#x9;vec2 ps = .5*(1./textureSize(positionMap,0).xy); // half pixel size &#xa;&#x9;vec2 psStep  = ps/float(nbSamples+1);&#xa;&#x9;vec3 n = vec3(0.);&#xa;&#x9;float nb = 0.;&#xa;&#x9;float a = 0.;&#xa;&#xa;&#x9;for(int i=-nbSamples;i&lt;=nbSamples;++i) {&#xa;&#x9;&#x9;&#x9;for(int j=-nbSamples;j&lt;=nbSamples;++j) {&#xa;&#x9;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*psStep;&#xa;&#x9;&#x9;&#x9;&#x9;vec4 data = texture(positionMap,coord);&#xa;&#x9;&#x9;&#x9;&#x9;vec3 t = fnoise(data.xyz,amplitude,frequency,persistence,nboctaves);&#xa;&#x9;&#x9;&#x9;&#x9;n.x +=  1.-smoothstep(0.,style,t.x);&#xa;&#x9;&#x9;&#x9;&#x9;n.yz += t.yz*offset;&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;a += data.w;&#xa;&#x9;&#x9;&#x9;&#x9;nb += 1.;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;float finalA = a/nb;&#xa;&#x9;vec3 finalN = n/nb;&#xa;&#xa;&#x9;proceduralTex =  vec4(finalN,finalA);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="7"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="frequency"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="amplitude"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="persistence"/>
     <bool name="genericWidgetKeyframed-2" val="1"/>
     <int name="genericWidgetType-3" val="1"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="nboctaves"/>
     <bool name="genericWidgetKeyframed-3" val="1"/>
     <int name="genericWidgetType-4" val="1"/>
     <int name="genericWidgetView-4" val="1"/>
     <string name="genericWidgetName-4" val="nbSamples"/>
     <bool name="genericWidgetKeyframed-4" val="0"/>
     <int name="genericWidgetType-5" val="0"/>
     <int name="genericWidgetView-5" val="1"/>
     <string name="genericWidgetName-5" val="style"/>
     <bool name="genericWidgetKeyframed-5" val="0"/>
     <int name="genericWidgetType-6" val="0"/>
     <int name="genericWidgetView-6" val="1"/>
     <string name="genericWidgetName-6" val="offset"/>
     <bool name="genericWidgetKeyframed-6" val="0"/>
    </IOData>
    <IOData name="nodeWidget-39">
     <uint name="nbChildren" val="7"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="100"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="33.2"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="33.2"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.003"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.003"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="1"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="intAttribKeyframed" val="0"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-5">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="0.1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.0043"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.0043"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-6">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.057"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.057"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-39-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-39-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-39-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-40" val="1"/>
    <IOData name="node-40">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="phongShading"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 shading;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;vec2 m = mouse/vec2(textureSize(normalMap,0))-vec2(.5);&#xa;&#x9;vec3 l = normalize(vec3(m,.5));&#xa;&#x9;vec3 n = texture(normalMap,texcoord).xyz;&#xa;&#xa;&#x9;// hack for computing the view direction&#xa;&#x9;// the true view could be obtained in &#xa;&#x9;// another buffer of a genericBuffer node&#xa;&#x9;vec3 v = normalize(vec3(texcoord*2.-1.,-30.));&#xa;&#xa;&#x9;float d = max(dot(n,l),0.);&#xa;&#x9;float s = pow(max(dot(reflect(l,n),v),0.),shininess);&#xa;&#xa;&#x9;shading.xyz = Ka + Kd*d + Ks*s;&#xa;&#x9;shading.w = length(n);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="1"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="4"/>
     <int name="genericWidgetType-0" val="4"/>
     <int name="genericWidgetView-0" val="2"/>
     <string name="genericWidgetName-0" val="Ka"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="4"/>
     <int name="genericWidgetView-1" val="2"/>
     <string name="genericWidgetName-1" val="Kd"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="4"/>
     <int name="genericWidgetView-2" val="2"/>
     <string name="genericWidgetName-2" val="Ks"/>
     <bool name="genericWidgetKeyframed-2" val="1"/>
     <int name="genericWidgetType-3" val="0"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="shininess"/>
     <bool name="genericWidgetKeyframed-3" val="1"/>
    </IOData>
    <IOData name="nodeWidget-40">
     <uint name="nbChildren" val="5"/>
     <IOData name="childWidget-0">
      <bool name="vector2iAttribKeyframed" val="1"/>
      <vector2i name="vector2iAttribMinVal">
       <int name="0" val="-10000"/>
       <int name="1" val="-10000"/>
      </vector2i>
      <vector2i name="vector2iAttribMaxVal">
       <int name="0" val="10000"/>
       <int name="1" val="10000"/>
      </vector2i>
      <IOData name="vector2iAttribCurve">
       <vector2i name="currentVal">
        <int name="0" val="508"/>
        <int name="1" val="400"/>
       </vector2i>
       <uint name="nbCurves" val="2"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="508"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="400"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="vector3fAttribKeyframed" val="1"/>
      <vector3f name="vector3fAttribMinVal">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
       <float name="2" val="1"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float name="0" val="0.1"/>
        <float name="1" val="0.1"/>
        <float name="2" val="0.1"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="vector3fAttribKeyframed" val="1"/>
      <vector3f name="vector3fAttribMinVal">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
       <float name="2" val="1"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float name="0" val="0.5"/>
        <float name="1" val="0.5"/>
        <float name="2" val="0.5"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.5"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.5"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.5"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="vector3fAttribKeyframed" val="1"/>
      <vector3f name="vector3fAttribMinVal">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
       <float name="2" val="1"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float name="0" val="0.5"/>
        <float name="1" val="0.5"/>
        <float name="2" val="0.5"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.5"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.5"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.5"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="1"/>
      <float name="floatAttribMaxVal" val="1000"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="49.951"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="49.951"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-40-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-40-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-41" val="1"/>
    <IOData name="node-41">
     <string name="filename" val="gratin/build/data/objs/sphere.obj"/>
     <IOData name="camera">
      <int name="projType" val="0"/>
      <int name="rotType" val="0"/>
      <vector2i name="viewport">
       <int name="0" val="512"/>
       <int name="1" val="512"/>
      </vector2i>
      <vector3f name="sceneCenter">
       <float name="0" val="-3.03085e-5"/>
       <float name="1" val="-0.000244021"/>
       <float name="2" val="-0.00847389"/>
      </vector3f>
      <float name="sceneRadius" val="1.00847"/>
      <float name="fovy" val="45"/>
      <vector3f name="shift">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="3"/>
      </vector3f>
      <IOData name="trackball">
       <quaternionf name="rotation">
        <float name="0" val="1"/>
        <float name="1" val="0"/>
        <float name="2" val="0"/>
        <float name="3" val="0"/>
       </quaternionf>
       <vector2f name="screenCenter">
        <float name="0" val="256"/>
        <float name="1" val="256"/>
       </vector2f>
       <float name="screenRadius" val="512"/>
      </IOData>
     </IOData>
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericObjLoader"/>
     <bool name="genericUseVertex" val="1"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="1"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec3 inVertex;&#xa;layout(location = 1) in vec3 inNormal;&#xa;layout(location = 2) in vec3 inTangent;&#xa;layout(location = 3) in vec2 inTexcoord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericVertBody" val="out vec3  normalV;&#xa;out float depthV;&#xa;&#xa;// LOAD MATRICES&#xa;vec4 m0 = texelFetch(inBuffer0, ivec2(0, 0), 0);&#xa;vec4 m1 = texelFetch(inBuffer0, ivec2(1, 0), 0);&#xa;vec4 m2 = texelFetch(inBuffer0, ivec2(2, 0), 0);&#xa;vec4 m3 = texelFetch(inBuffer0, ivec2(3, 0), 0);&#xa;&#xa;vec4 v0 = texelFetch(inBuffer0, ivec2(0, 1), 0);&#xa;vec4 v1 = texelFetch(inBuffer0, ivec2(1, 1), 0);&#xa;vec4 v2 = texelFetch(inBuffer0, ivec2(2, 1), 0);&#xa;vec4 v3 = texelFetch(inBuffer0, ivec2(3, 1), 0);&#xa;&#xa;vec4 p0 = texelFetch(inBuffer0, ivec2(0, 2), 0);&#xa;vec4 p1 = texelFetch(inBuffer0, ivec2(1, 2), 0);&#xa;vec4 p2 = texelFetch(inBuffer0, ivec2(2, 2), 0);&#xa;vec4 p3 = texelFetch(inBuffer0, ivec2(3, 2), 0);&#xa;&#xa;mat4 m = mat4(m0,m1,m2,m3);&#xa;mat4 v = mat4(v0,v1,v2,v3);&#xa;mat4 p = mat4(p0,p1,p2,p3);&#xa;&#xa;void main() {&#xa;&#x9;//m = model;&#xa;&#x9;//v = view;&#xa;&#x9;//p = proj;&#xa;&#xa;&#x9;mat4 mdv    = v*m;&#xa;&#x9;mat4 mvp    = p*mdv;&#xa;&#xa;&#x9;normalV     = (mdv*vec4(inNormal,0)).xyz;&#xa;&#x9;depthV      = (clamp(-(mdv*vec4(inVertex,1)).z,zmin,zmax)-zmin)/(zmax-zmin);&#xa;&#x9;gl_Position = mvp*vec4(inVertex,1);&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericFragBody" val="in vec3  normalV;&#xa;in float depthV;&#xa;&#xa;void main() {&#xa;&#x9;outBuffer0 = vec4(normalize(normalV),depthV);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 3) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericTessEBody" val="layout(triangles,equal_spacing,ccw) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = gl_TessCoord.x*gl_in[0].gl_Position;&#xa;&#x9;vec4 p2 = gl_TessCoord.y*gl_in[1].gl_Position;&#xa;&#x9;vec4 p3 = gl_TessCoord.z*gl_in[2].gl_Position;&#xa;&#x9;gl_Position = p1+p2+p3;&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}&#xa;"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-41">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="trackballCameraKeyframed" val="1"/>
      <IOData name="trackballCameraAttribCurveQ">
       <quaternionf name="currentVal">
        <float name="0" val="1"/>
        <float name="1" val="0"/>
        <float name="2" val="0"/>
        <float name="3" val="0"/>
       </quaternionf>
       <uint name="nbCurves" val="4"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-3">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <IOData name="trackballCameraAttribCurveS">
       <vector3f name="currentVal">
        <float name="0" val="0"/>
        <float name="1" val="0"/>
        <float name="2" val="3"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="3"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <int name="projection" val="0"/>
      <int name="rotation" val="0"/>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-41-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-41-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-42" val="1"/>
    <IOData name="node-42">
     <string name="filename" val="gratin/data/objs/sphere.obj"/>
     <IOData name="camera">
      <int name="projType" val="0"/>
      <int name="rotType" val="1"/>
      <vector2i name="viewport">
       <int name="0" val="512"/>
       <int name="1" val="512"/>
      </vector2i>
      <vector3f name="sceneCenter">
       <float name="0" val="-3.03085e-5"/>
       <float name="1" val="-0.000244021"/>
       <float name="2" val="-0.00847389"/>
      </vector3f>
      <float name="sceneRadius" val="1.00847"/>
      <float name="fovy" val="45"/>
      <vector3f name="shift">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="3.02542"/>
      </vector3f>
      <IOData name="trackball">
       <quaternionf name="rotation">
        <float name="0" val="1"/>
        <float name="1" val="0"/>
        <float name="2" val="0"/>
        <float name="3" val="0"/>
       </quaternionf>
       <vector2f name="screenCenter">
        <float name="0" val="256"/>
        <float name="1" val="256"/>
       </vector2f>
       <float name="screenRadius" val="512"/>
      </IOData>
     </IOData>
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="AdvancedGBuffers"/>
     <bool name="genericUseVertex" val="1"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="1"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec3 inVertex;&#xa;layout(location = 1) in vec3 inNormal;&#xa;layout(location = 2) in vec3 inTangent;&#xa;layout(location = 3) in vec2 inTexcoord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float rotate;&#xa;uniform float move;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;"/>
     <string name="genericVertBody" val="layout(location = 0) out vec3 vfNormal;&#xa;layout(location = 1) out vec3 vfTangent;&#xa;layout(location = 2) out vec2 vfTexcoord;&#xa;layout(location = 3) out float  vfDepthV;&#xa;layout(location = 4) out vec3 pos;&#xa;layout(location = 5) out float matID;&#xa;layout(location = 6) out vec3 wfNormal;&#xa;&#xa;#define PI 3.1415926535898&#xa;&#xa;// LOAD MATRICES&#xa;vec4 m0 = texelFetch(inBuffer0, ivec2(0, 0), 0);&#xa;vec4 m1 = texelFetch(inBuffer0, ivec2(1, 0), 0);&#xa;vec4 m2 = texelFetch(inBuffer0, ivec2(2, 0), 0);&#xa;vec4 m3 = texelFetch(inBuffer0, ivec2(3, 0), 0);&#xa;&#xa;vec4 v0 = texelFetch(inBuffer0, ivec2(0, 1), 0);&#xa;vec4 v1 = texelFetch(inBuffer0, ivec2(1, 1), 0);&#xa;vec4 v2 = texelFetch(inBuffer0, ivec2(2, 1), 0);&#xa;vec4 v3 = texelFetch(inBuffer0, ivec2(3, 1), 0);&#xa;&#xa;vec4 p0 = texelFetch(inBuffer0, ivec2(0, 2), 0);&#xa;vec4 p1 = texelFetch(inBuffer0, ivec2(1, 2), 0);&#xa;vec4 p2 = texelFetch(inBuffer0, ivec2(2, 2), 0);&#xa;vec4 p3 = texelFetch(inBuffer0, ivec2(3, 2), 0);&#xa;&#xa;mat4 m = mat4(m0,m1,m2,m3);&#xa;mat4 v = mat4(v0,v1,v2,v3);&#xa;mat4 p = mat4(p0,p1,p2,p3);&#xa;&#xa;vec2 rotate2D(in vec2 v,in float angle,in vec2 c) {&#xa;  // rotation of v around c with a particular angle&#xa;  vec2 T = v-c;&#xa;  return vec2(cos(angle)*T.x-sin(angle)*T.y,&#xa;&#x9;      sin(angle)*T.x+cos(angle)*T.y) + c;&#xa;}&#xa;&#xa;mat3 rotMat(in float angle) {&#xa;&#x9;return mat3(&#xa;&#x9;vec3(cos(angle),0.,-sin(angle)),&#xa;&#x9;vec3(0.,1.,0.),&#xa;&#x9;vec3(sin(angle),0.,cos(angle)));&#xa;}&#xa;&#xa;vec3 cube(vec3 inVertex){&#xa;&#x9;vec3 outVertex;&#xa;&#x9;if(inVertex.x >= 0){outVertex.x = 1;}else{outVertex.x = -1;}&#xa;&#x9;if(inVertex.y >= 0){outVertex.y = 1;}else{outVertex.y = -1;}&#xa;&#x9;if(inVertex.z >= 0){outVertex.z = 1;}else{outVertex.z = -1;}&#xa;&#x9;return outVertex;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;v[3]+=vec4(0,0,0,0);&#xa;&#x9;mat4 mdv    = v*m;&#xa;&#x9;mat4 mvp    = p*mdv;&#xa;&#xa;&#x9;pos = cube(inVertex);&#xa;&#xa;&#x9;vfNormal = (mdv*vec4(inNormal,0)).xyz;&#xa;&#x9;wfNormal = inNormal;&#xa;&#x9;vfTangent = (mdv*vec4(inTangent,0)).xyz;&#xa;&#x9;vfTexcoord = inTexcoord;&#xa;&#x9;vfDepthV = -(mdv*vec4(pos,1)).z;&#xa;&#xa;&#x9;gl_Position = mvp*vec4(pos,1);&#xa;&#x9;matID = float(objectID+1);&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 cameraParameters;&#xa;layout(location = 1) out vec4 normalVBuffer;&#xa;layout(location = 2) out vec4 normalWBuffer;&#xa;layout(location = 3) out vec4 tangentVBuffer;&#xa;layout(location = 4) out vec4 coordBuffer;&#xa;layout(location = 5) out vec4 positionsBuffer;&#xa;layout(location = 6) out vec4 depthBuffer;&#xa;layout(location = 7) out vec4 mask;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float rotate;&#xa;uniform float move;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;"/>
     <string name="genericFragBody" val="layout(location = 0) in vec3 vfNormal;&#xa;layout(location = 1) in vec3 vfTangent;&#xa;layout(location = 2) in vec2 vfTexcoord;&#xa;layout(location = 3) in float vfDepthV;&#xa;layout(location = 4) in vec3 pos;&#xa;layout(location = 5) in float matID;&#xa;layout(location = 6) in vec3 wfNormal;&#xa;&#xa;void main() {&#xa;&#x9;vec3 n = normalize(vfNormal);&#xa;&#x9;vec3 t = normalize(vfTangent);&#xa;&#x9;vec2 uv = vfTexcoord;&#xa;&#x9;float d = vfDepthV;&#xa;&#xa;&#xa;&#x9;tangentVBuffer = vec4(t,1.0);&#xa;&#x9;coordBuffer = vec4(uv, 0.0, 1.0);&#xa;&#x9;normalVBuffer = vec4(n,1.);&#xa;&#x9;normalWBuffer = vec4(normalize(wfNormal),1.);&#xa;&#x9;cameraParameters = vec4(0.);&#xa;&#x9;positionsBuffer = vec4(pos,1);&#xa;&#x9;depthBuffer = vec4(d,d,d,1.);&#xa;&#x9;mask = vec4(vec3(objectID+1),1.0f);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 3) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float rotate;&#xa;uniform float move;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float rotate;&#xa;uniform float move;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;"/>
     <string name="genericTessEBody" val="layout(triangles,equal_spacing,ccw) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = gl_TessCoord.x*gl_in[0].gl_Position;&#xa;&#x9;vec4 p2 = gl_TessCoord.y*gl_in[1].gl_Position;&#xa;&#x9;vec4 p3 = gl_TessCoord.z*gl_in[2].gl_Position;&#xa;&#x9;gl_Position = p1+p2+p3;&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float rotate;&#xa;uniform float move;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}&#xa;"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="2"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="rotate"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="move"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
    </IOData>
    <IOData name="nodeWidget-42">
     <uint name="nbChildren" val="6"/>
     <IOData name="childWidget-0">
      <bool name="trackballCameraKeyframed" val="1"/>
      <IOData name="trackballCameraAttribCurveQ">
       <quaternionf name="currentVal">
        <float name="0" val="-0.175447"/>
        <float name="1" val="-0.768621"/>
        <float name="2" val="0.615155"/>
        <float name="3" val="0.00486812"/>
       </quaternionf>
       <uint name="nbCurves" val="4"/>
       <IOData name="curve-0">
        <int name="interpType" val="2"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="2"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="2"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-3">
        <int name="interpType" val="2"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <IOData name="trackballCameraAttribCurveS">
       <vector3f name="currentVal">
        <float name="0" val="0.251573"/>
        <float name="1" val="-2.48698"/>
        <float name="2" val="2.42033"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="3.02542"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <int name="projection" val="0"/>
      <int name="rotation" val="1"/>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="6.28319"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="6.28319"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="6.28319"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-5">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="-5"/>
      <float name="floatAttribMaxVal" val="5"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="-5"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="-5"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-42-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-42-0">
     <float name="0" val="56.32"/>
     <float name="1" val="4364.8"/>
    </vector2f>
    <vector2f name="nodeOutputPos-42-1">
     <float name="0" val="56.32"/>
     <float name="1" val="3745.28"/>
    </vector2f>
    <vector2f name="nodeOutputPos-42-2">
     <float name="0" val="56.32"/>
     <float name="1" val="3125.76"/>
    </vector2f>
    <vector2f name="nodeOutputPos-42-3">
     <float name="0" val="56.32"/>
     <float name="1" val="2506.24"/>
    </vector2f>
    <vector2f name="nodeOutputPos-42-4">
     <float name="0" val="56.32"/>
     <float name="1" val="1886.72"/>
    </vector2f>
    <vector2f name="nodeOutputPos-42-5">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeOutputPos-42-6">
     <float name="0" val="56.32"/>
     <float name="1" val="647.68"/>
    </vector2f>
    <vector2f name="nodeOutputPos-42-7">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-43" val="1"/>
    <IOData name="node-43">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="3DWorleyNoise"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 proceduralTex;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;#define EPS 1e-5&#xa;&#xa;// LOAD MATRICES&#xa;vec4 m0 = texelFetch(matrices, ivec2(0, 0), 0);&#xa;vec4 m1 = texelFetch(matrices, ivec2(1, 0), 0);&#xa;vec4 m2 = texelFetch(matrices, ivec2(2, 0), 0);&#xa;vec4 m3 = texelFetch(matrices, ivec2(3, 0), 0);&#xa;&#xa;vec4 v0 = texelFetch(matrices, ivec2(0, 1), 0);&#xa;vec4 v1 = texelFetch(matrices, ivec2(1, 1), 0);&#xa;vec4 v2 = texelFetch(matrices, ivec2(2, 1), 0);&#xa;vec4 v3 = texelFetch(matrices, ivec2(3, 1), 0);&#xa;&#xa;vec4 p0 = texelFetch(matrices, ivec2(0, 2), 0);&#xa;vec4 p1 = texelFetch(matrices, ivec2(1, 2), 0);&#xa;vec4 p2 = texelFetch(matrices, ivec2(2, 2), 0);&#xa;vec4 p3 = texelFetch(matrices, ivec2(3, 2), 0);&#xa;&#xa;// model, view, projection and normal matrices&#xa;mat4 model = mat4(m0,m1,m2,m3);&#xa;mat4 view = mat4(v0,v1,v2,v3);&#xa;mat4 proj = mat4(p0,p1,p2,p3);&#xa;mat4 mvp = proj*view*model;&#xa;&#xa;vec3 hash33(vec3 p) {&#xa;&#x9;vec3 q = vec3(&#x9;dot(p,vec3(127.1,311.7,74.7)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(269.5,183.3,246.1)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(113.5,271.9,124.6)));&#xa;&#x9;return fract(sin(q)*43758.5453123);&#xa;}&#xa;&#xa;vec3 project(in vec3 p) {&#xa;&#x9;vec4 tmp = mvp*vec4(p,1.);&#xa;&#x9;return tmp.xyz/tmp.w;&#xa;}&#xa;&#xa;vec4 wnoise(in vec3 x,in float freq) {&#xa;&#x9;// x: 3D position &#xa;&#x9;// f: frequency&#xa;&#x9;// return: closest 3D rand position + 3D dist between x and this position &#xa;&#xa;&#x9;vec3 p = floor(x*freq);&#xa;&#x9;vec3 f = fract(x*freq);&#xa;&#x9;//vec3 xp = project(x);&#xa;&#xa;&#x9;float id = 0.0;&#xa;&#x9;vec4 res = vec4(1e+10);&#xa;&#x9;for( int k=-1; k&lt;=1; k++ )&#xa;&#x9;&#x9;for( int j=-1; j&lt;=1; j++ )&#xa;&#x9;&#x9;&#x9;for( int i=-1; i&lt;=1; i++ ) {&#xa;&#x9;&#x9;&#x9;&#x9;vec3 b = vec3( float(i), float(j), float(k) );&#xa;&#x9;&#x9;&#x9;&#x9;vec3 r = (p+b+hash33( p + b ))/freq;&#xa;&#x9;&#x9;&#x9;&#x9;//vec3 rp = r-dot(n,r-x)*n;&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;float d = distance(r,x);&#xa;&#x9;&#x9;&#x9;&#x9;//float d = distance(project(r).xy,xp.xy);&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;if(d&lt;res.w) {&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;res = vec4(r,d);&#xa;&#x9;&#x9;&#x9;&#x9;} &#xa;    }&#xa;&#xa;    return res;&#xa;}&#xa;&#xa;vec3 dist(in vec3 p,in vec4 n) {&#xa;&#x9;// 3D distance &#xa;&#x9;//return vec3(n.w,vec2(0.));&#xa;&#xa;&#x9;// 2D (projected) distance  + offset to splat position &#xa;&#x9;vec3 p1 = project(p);&#xa;&#x9;vec3 p2 = project(n.xyz);&#xa;&#xa;&#x9;return vec3(distance(p1.xy,p2.xy),p2.xy-p1.xy);&#xa;}&#xa;&#xa;vec3 fnoise(in vec3 p,in float amplitude,in float frequency,in float persistence, in int nboctaves) {&#xa;&#x9;float a = amplitude;&#xa;&#x9;float f = frequency;&#xa;&#x9;float n = 0.0;&#xa;&#x9;vec2 o = vec2(0.);&#xa;&#xa;&#x9;for(int i=0;i&lt;nboctaves;++i) {&#xa;&#x9;&#x9;vec3 d = dist(p,wnoise(p,f));&#xa;&#x9;&#x9;n = n+a*d.x;&#xa;&#x9;&#x9;o = o+a*d.yz;&#xa;&#x9;&#x9;f = f*2.;&#xa;&#x9;&#x9;a = a*persistence;&#xa;&#x9;}&#xa;&#x9;&#xa;&#x9;return vec3(n,o);&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;if(texture(positionMap,texcoord).w&lt;EPS) {&#xa;&#x9;&#x9;proceduralTex =  vec4(0.);&#xa;&#x9;&#x9;return;&#xa;&#x9;}&#xa;&#xa;&#x9;vec2 ps = .5*(1./textureSize(positionMap,0).xy); // half pixel size &#xa;&#x9;vec2 psStep  = ps/float(nbSamples+1);&#xa;&#x9;vec3 n = vec3(0.);&#xa;&#x9;float nb = 0.;&#xa;&#x9;float a = 0.;&#xa;&#xa;&#x9;for(int i=-nbSamples;i&lt;=nbSamples;++i) {&#xa;&#x9;&#x9;&#x9;for(int j=-nbSamples;j&lt;=nbSamples;++j) {&#xa;&#x9;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*psStep;&#xa;&#x9;&#x9;&#x9;&#x9;vec4 data = texture(positionMap,coord);&#xa;&#x9;&#x9;&#x9;&#x9;vec3 t = fnoise(data.xyz,amplitude,frequency,persistence,nboctaves);&#xa;&#x9;&#x9;&#x9;&#x9;n.x +=  1.-smoothstep(0.,style,t.x);&#xa;&#x9;&#x9;&#x9;&#x9;n.yz += t.yz*offset;&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;a += data.w;&#xa;&#x9;&#x9;&#x9;&#x9;nb += 1.;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;float finalA = a/nb;&#xa;&#x9;vec3 finalN = n/nb;&#xa;&#xa;&#x9;proceduralTex =  vec4(finalN,finalA);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="7"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="frequency"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="amplitude"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="persistence"/>
     <bool name="genericWidgetKeyframed-2" val="1"/>
     <int name="genericWidgetType-3" val="1"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="nboctaves"/>
     <bool name="genericWidgetKeyframed-3" val="1"/>
     <int name="genericWidgetType-4" val="1"/>
     <int name="genericWidgetView-4" val="1"/>
     <string name="genericWidgetName-4" val="nbSamples"/>
     <bool name="genericWidgetKeyframed-4" val="0"/>
     <int name="genericWidgetType-5" val="0"/>
     <int name="genericWidgetView-5" val="1"/>
     <string name="genericWidgetName-5" val="style"/>
     <bool name="genericWidgetKeyframed-5" val="0"/>
     <int name="genericWidgetType-6" val="0"/>
     <int name="genericWidgetView-6" val="1"/>
     <string name="genericWidgetName-6" val="offset"/>
     <bool name="genericWidgetKeyframed-6" val="0"/>
    </IOData>
    <IOData name="nodeWidget-43">
     <uint name="nbChildren" val="7"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="100"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="25.1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="25.1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.003"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.003"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="1"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="intAttribKeyframed" val="0"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-5">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="0.1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.0047"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.0047"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-6">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-43-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-43-1">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeOutputPos-43-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-44" val="1"/>
    <IOData name="node-44">
     <int name="processMode" val="0"/>
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="globalMaxMinDepth"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 maxMinDepth;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;if(isFinest)&#xa;&#x9;&#x9;maxMinDepth = texture(image,texcoord);&#xa;&#x9;else {&#xa;&#x9;&#x9;vec2 ps = .5/vec2(textureSize(prevLevel0,0));&#xa;&#x9;&#x9;&#xa;&#x9;&#x9;vec4 c[4];&#xa;&#x9;&#x9;c[0] = texture(prevLevel0,texcoord+ps);&#xa;&#x9;&#x9;c[1] = texture(prevLevel0,texcoord-ps);&#xa;&#x9;&#x9;c[2] = texture(prevLevel0,texcoord+vec2(ps.x,-ps.y));&#xa;&#x9;&#x9;c[3] = texture(prevLevel0,texcoord+vec2(-ps.x,ps.y));&#xa;&#xa;&#x9;&#x9;const float T = .9;&#xa;&#x9;&#x9;float cmin = 1e+10;&#xa;&#x9;&#x9;float cmax = 0.;&#xa;&#x9;&#x9;float alpha = 0.;&#xa;&#xa;&#x9;&#x9;for(int i=0;i&lt;4;++i) {&#xa;&#x9;&#x9;&#x9;if(c[i].a>T) {&#xa;&#x9;&#x9;&#x9;&#x9;cmin = min(cmin,c[i].y);&#xa;&#x9;&#x9;&#x9;&#x9;cmax = max(cmax,c[i].x);&#xa;&#x9;&#x9;&#x9;&#x9;alpha = c[i].a;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;&#x9;}&#xa;&#xa;&#x9;&#x9;maxMinDepth = vec4(cmax,cmin,0.,alpha);&#xa;&#x9;}&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-44">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-44-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-44-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-45" val="1"/>
    <IOData name="node-45">
     <string name="filename" val="gratin/build/data/objs/sphere.obj"/>
     <IOData name="camera">
      <int name="projType" val="0"/>
      <int name="rotType" val="0"/>
      <vector2i name="viewport">
       <int name="0" val="512"/>
       <int name="1" val="512"/>
      </vector2i>
      <vector3f name="sceneCenter">
       <float name="0" val="-3.03085e-5"/>
       <float name="1" val="-0.000244021"/>
       <float name="2" val="-0.00847389"/>
      </vector3f>
      <float name="sceneRadius" val="1.00847"/>
      <float name="fovy" val="45"/>
      <vector3f name="shift">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="3"/>
      </vector3f>
      <IOData name="trackball">
       <quaternionf name="rotation">
        <float name="0" val="1"/>
        <float name="1" val="0"/>
        <float name="2" val="0"/>
        <float name="3" val="0"/>
       </quaternionf>
       <vector2f name="screenCenter">
        <float name="0" val="256"/>
        <float name="1" val="256"/>
       </vector2f>
       <float name="screenRadius" val="512"/>
      </IOData>
     </IOData>
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericObjLoader"/>
     <bool name="genericUseVertex" val="1"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="1"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec3 inVertex;&#xa;layout(location = 1) in vec3 inNormal;&#xa;layout(location = 2) in vec3 inTangent;&#xa;layout(location = 3) in vec2 inTexcoord;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericVertBody" val="out vec3  normalV;&#xa;out float depthV;&#xa;&#xa;void main() {&#xa;&#x9;mat4 m = mat4(1);&#xa;&#x9;mat4 v = view;&#xa;&#x9;mat4 p = proj;&#xa;&#xa;&#x9;mat4 mdv    = v*m;&#xa;&#x9;mat4 mvp    = p*mdv;&#xa;&#xa;&#x9;normalV     = (mdv*vec4(inNormal,0)).xyz;&#xa;&#x9;depthV      = (clamp(-(mdv*vec4(inVertex,1)).z,zmin,zmax)-zmin)/(zmax-zmin);&#xa;&#x9;gl_Position = mvp*vec4(inVertex,1);&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericFragBody" val="in vec3  normalV;&#xa;in float depthV;&#xa;&#xa;void main() {&#xa;&#x9;//outBuffer0 = vec4(normalize(normalV),depthV);&#xa;&#x9;//if(proj[1].y > 1.7925 &amp;&amp; proj[1].y &lt; 1.7926){outBuffer0 = vec4(0,1,0,1);}&#xa;&#x9;//if(proj[3].z > -0.0203 &amp;&amp; proj[3].z &lt; -0.0201){outBuffer0 = vec4(0,1,0,1);}&#xa;&#x9;if(view[3].z == -3){outBuffer0 = vec4(0,1,0,1);}&#xa;&#x9;//outBuffer0 = vec4(view[3].xyz,1);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 3) out;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericTessEBody" val="layout(triangles,equal_spacing,ccw) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = gl_TessCoord.x*gl_in[0].gl_Position;&#xa;&#x9;vec4 p2 = gl_TessCoord.y*gl_in[1].gl_Position;&#xa;&#x9;vec4 p3 = gl_TessCoord.z*gl_in[2].gl_Position;&#xa;&#x9;gl_Position = p1+p2+p3;&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}&#xa;"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-45">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="trackballCameraKeyframed" val="1"/>
      <IOData name="trackballCameraAttribCurveQ">
       <quaternionf name="currentVal">
        <float name="0" val="1"/>
        <float name="1" val="0"/>
        <float name="2" val="0"/>
        <float name="3" val="0"/>
       </quaternionf>
       <uint name="nbCurves" val="4"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-3">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <IOData name="trackballCameraAttribCurveS">
       <vector3f name="currentVal">
        <float name="0" val="0"/>
        <float name="1" val="0"/>
        <float name="2" val="3"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="3"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <int name="projection" val="0"/>
      <int name="rotation" val="0"/>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeOutputPos-45-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
   </IOData>
   <float name="scale" val="12.5008"/>
   <vector2f name="offset">
    <float name="0" val="3483.5"/>
    <float name="1" val="4494.29"/>
   </vector2f>
   <IOData name="animation">
    <uint name="firstFrame" val="0"/>
    <uint name="lastFrame" val="30"/>
    <uint name="currentFrame" val="30"/>
    <uint name="fps" val="30"/>
   </IOData>
  </IOData>
  <IOData name="animationWidget">
   <vector2i name="animationWidgetSize">
    <int name="0" val="1280"/>
    <int name="1" val="405"/>
   </vector2i>
   <IOData name="timelineWidget"/>
  </IOData>
  <IOData name="nodeListWidget"/>
  <IOData name="interactionWidget">
   <float name="scale" val="1.60008"/>
   <vector2f name="offset">
    <float name="0" val="651.95"/>
    <float name="1" val="253.654"/>
   </vector2f>
  </IOData>
  <IOData name="nodeInterfaceWidget"/>
 </IOData>
</Gratin>
