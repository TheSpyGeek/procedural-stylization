<Gratin type="pipeline">
 <int val="0" name="majorVersion"/>
 <int val="3" name="minorVersion"/>
 <IOData name="mainWindow">
  <IOData name="graphWidget">
   <IOData name="graph">
    <uint val="23" name="nbNodes"/>
    <string val="gbuffersGenericId" name="nodeStringId-0"/>
    <uint val="1" name="nodeVersion-0"/>
    <string val="genericObjLoader" name="nodeName-0"/>
    <string val="Generic/" name="nodePath-0"/>
    <string val="Generic node for 3D object processing" name="nodeDesc-0"/>
    <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-0"/>
    <uint val="0" name="nodeId-0"/>
    <uint val="0" name="nodeGraphId-0"/>
    <vector2f name="nodePos-0">
     <float val="-312.528" name="0"/>
     <float val="-7886.8" name="1"/>
    </vector2f>
    <int val="0" name="nodeInputNameSize-0"/>
    <int val="2" name="nodeOutputNameSize-0"/>
    <string val="normals" name="nodeOutputName-0-0"/>
    <string val="positions" name="nodeOutputName-0-1"/>
    <string val="phongShadingID" name="nodeStringId-1"/>
    <uint val="1" name="nodeVersion-1"/>
    <string val="phongShading" name="nodeName-1"/>
    <string val="Rendering/" name="nodePath-1"/>
    <string val="Phong shading" name="nodeDesc-1"/>
    <string val="Take a normal map as input and apply a simple Phong shading with a directionnal light. The view vector is approximated with pixel coords but could be obtained as an ouptut of a genericBuffers node.&#xa;&#xa;The light direction is controlled via the mouse in the interaction widget." name="nodeHelp-1"/>
    <uint val="1" name="nodeId-1"/>
    <uint val="0" name="nodeGraphId-1"/>
    <vector2f name="nodePos-1">
     <float val="959.539" name="0"/>
     <float val="-9827.71" name="1"/>
    </vector2f>
    <int val="1" name="nodeInputNameSize-1"/>
    <int val="1" name="nodeOutputNameSize-1"/>
    <string val="normalMap" name="nodeInputName-1-0"/>
    <string val="shading" name="nodeOutputName-1-0"/>
    <string val="imgGenericId" name="nodeStringId-2"/>
    <uint val="1" name="nodeVersion-2"/>
    <string val="genericImage" name="nodeName-2"/>
    <string val="Generic/" name="nodePath-2"/>
    <string val="Generic node for image processing" name="nodeDesc-2"/>
    <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-2"/>
    <uint val="2" name="nodeId-2"/>
    <uint val="0" name="nodeGraphId-2"/>
    <vector2f name="nodePos-2">
     <float val="998.06" name="0"/>
     <float val="-10626.8" name="1"/>
    </vector2f>
    <int val="1" name="nodeInputNameSize-2"/>
    <int val="1" name="nodeOutputNameSize-2"/>
    <string val="inBuffer0" name="nodeInputName-2-0"/>
    <string val="outBuffer0" name="nodeOutputName-2-0"/>
    <string val="3DGradientNoiseID" name="nodeStringId-3"/>
    <uint val="1" name="nodeVersion-3"/>
    <string val="3DGradientNoise" name="nodeName-3"/>
    <string val="Texture/" name="nodePath-3"/>
    <string val="Fractal 3D procedural gradient noise" name="nodeDesc-3"/>
    <string val="Noise based on the interpolation of pseudo random gradients on a 3D grid. &#xa;The octaves allows gradient noises with different frequencies &#xa;and amplitudes to be added and create a fractal noise. &#xa;The persistence defines how the amplitude of the signal is scaled on each octave.&#xa;The ZCoord parameter allows to navigate along the third dimension. " name="nodeHelp-3"/>
    <uint val="3" name="nodeId-3"/>
    <uint val="0" name="nodeGraphId-3"/>
    <vector2f name="nodePos-3">
     <float val="943.171" name="0"/>
     <float val="-9028.13" name="1"/>
    </vector2f>
    <int val="1" name="nodeInputNameSize-3"/>
    <int val="1" name="nodeOutputNameSize-3"/>
    <string val="inBuffer0" name="nodeInputName-3-0"/>
    <string val="proceduralTex" name="nodeOutputName-3-0"/>
    <string val="imgGenericId" name="nodeStringId-4"/>
    <uint val="1" name="nodeVersion-4"/>
    <string val="genericImage" name="nodeName-4"/>
    <string val="Generic/" name="nodePath-4"/>
    <string val="Generic node for image processing" name="nodeDesc-4"/>
    <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-4"/>
    <uint val="4" name="nodeId-4"/>
    <uint val="0" name="nodeGraphId-4"/>
    <vector2f name="nodePos-4">
     <float val="1801.2" name="0"/>
     <float val="-7276.08" name="1"/>
    </vector2f>
    <int val="2" name="nodeInputNameSize-4"/>
    <int val="1" name="nodeOutputNameSize-4"/>
    <string val="ndTex" name="nodeInputName-4-0"/>
    <string val="otherTex" name="nodeInputName-4-1"/>
    <string val="res" name="nodeOutputName-4-0"/>
    <string val="3DGradientNoiseID" name="nodeStringId-5"/>
    <uint val="1" name="nodeVersion-5"/>
    <string val="3DGradientNoise" name="nodeName-5"/>
    <string val="Texture/" name="nodePath-5"/>
    <string val="Fractal 3D procedural gradient noise" name="nodeDesc-5"/>
    <string val="Noise based on the interpolation of pseudo random gradients on a 3D grid. &#xa;The octaves allows gradient noises with different frequencies &#xa;and amplitudes to be added and create a fractal noise. &#xa;The persistence defines how the amplitude of the signal is scaled on each octave.&#xa;The ZCoord parameter allows to navigate along the third dimension. " name="nodeHelp-5"/>
    <uint val="5" name="nodeId-5"/>
    <uint val="0" name="nodeGraphId-5"/>
    <vector2f name="nodePos-5">
     <float val="3149.54" name="0"/>
     <float val="-8063.87" name="1"/>
    </vector2f>
    <int val="1" name="nodeInputNameSize-5"/>
    <int val="1" name="nodeOutputNameSize-5"/>
    <string val="inBuffer0" name="nodeInputName-5-0"/>
    <string val="proceduralTex" name="nodeOutputName-5-0"/>
    <string val="advancedGbuffers" name="nodeStringId-6"/>
    <uint val="1" name="nodeVersion-6"/>
    <string val="AdvancedGBuffers" name="nodeName-6"/>
    <string val="Custom/" name="nodePath-6"/>
    <string val="Generic node for 3D object processing" name="nodeDesc-6"/>
    <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-6"/>
    <uint val="6" name="nodeId-6"/>
    <uint val="1" name="nodeGraphId-6"/>
    <vector2f name="nodePos-6">
     <float val="-2813.71" name="0"/>
     <float val="2595.21" name="1"/>
    </vector2f>
    <int val="0" name="nodeInputNameSize-6"/>
    <int val="8" name="nodeOutputNameSize-6"/>
    <string val="cameraParameters" name="nodeOutputName-6-0"/>
    <string val="normalVBuffer" name="nodeOutputName-6-1"/>
    <string val="normalWBuffer" name="nodeOutputName-6-2"/>
    <string val="tangentVBuffer" name="nodeOutputName-6-3"/>
    <string val="coordBuffer" name="nodeOutputName-6-4"/>
    <string val="positionsBuffer" name="nodeOutputName-6-5"/>
    <string val="depthBuffer" name="nodeOutputName-6-6"/>
    <string val="mask" name="nodeOutputName-6-7"/>
    <string val="phongShadingID" name="nodeStringId-7"/>
    <uint val="1" name="nodeVersion-7"/>
    <string val="phongShading" name="nodeName-7"/>
    <string val="Rendering/" name="nodePath-7"/>
    <string val="Phong shading" name="nodeDesc-7"/>
    <string val="Take a normal map as input and apply a simple Phong shading with a directionnal light. The view vector is approximated with pixel coords but could be obtained as an ouptut of a genericBuffers node.&#xa;&#xa;The light direction is controlled via the mouse in the interaction widget." name="nodeHelp-7"/>
    <uint val="7" name="nodeId-7"/>
    <uint val="1" name="nodeGraphId-7"/>
    <vector2f name="nodePos-7">
     <float val="-1145.14" name="0"/>
     <float val="6421.39" name="1"/>
    </vector2f>
    <int val="1" name="nodeInputNameSize-7"/>
    <int val="1" name="nodeOutputNameSize-7"/>
    <string val="normalMap" name="nodeInputName-7-0"/>
    <string val="shading" name="nodeOutputName-7-0"/>
    <string val="imgGenericId" name="nodeStringId-8"/>
    <uint val="1" name="nodeVersion-8"/>
    <string val="depthMasked" name="nodeName-8"/>
    <string val="Generic/" name="nodePath-8"/>
    <string val="Generic node for image processing" name="nodeDesc-8"/>
    <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-8"/>
    <uint val="8" name="nodeId-8"/>
    <uint val="1" name="nodeGraphId-8"/>
    <vector2f name="nodePos-8">
     <float val="-1840.4" name="0"/>
     <float val="2901.95" name="1"/>
    </vector2f>
    <int val="2" name="nodeInputNameSize-8"/>
    <int val="1" name="nodeOutputNameSize-8"/>
    <string val="inBuffer0" name="nodeInputName-8-0"/>
    <string val="inBuffer1" name="nodeInputName-8-1"/>
    <string val="outBuffer0" name="nodeOutputName-8-0"/>
    <string val="globalMaxMinDepth" name="nodeStringId-9"/>
    <uint val="1" name="nodeVersion-9"/>
    <string val="globalMaxMinDepth" name="nodeName-9"/>
    <string val="Analysis/global" name="nodePath-9"/>
    <string val="Min/max depth" name="nodeDesc-9"/>
    <string val="Compute the maximum color of an image. The resulting color is stored in the last level of the output pyramid. It can be accessed via the following formula: vec2 s = vec2(textureSize(image,0)); float l = 1. + floor(log2(max(s.x,s.y))); vec4 color = textureLod(image,vec2(.5),l); " name="nodeHelp-9"/>
    <uint val="9" name="nodeId-9"/>
    <uint val="1" name="nodeGraphId-9"/>
    <vector2f name="nodePos-9">
     <float val="-995.078" name="0"/>
     <float val="2946.48" name="1"/>
    </vector2f>
    <int val="1" name="nodeInputNameSize-9"/>
    <int val="1" name="nodeOutputNameSize-9"/>
    <string val="image" name="nodeInputName-9-0"/>
    <string val="maxMinDepth" name="nodeOutputName-9-0"/>
    <string val="normalizeDepth" name="nodeStringId-10"/>
    <uint val="1" name="nodeVersion-10"/>
    <string val="normalizeDepth" name="nodeName-10"/>
    <string val="SilhouetteExtension/" name="nodePath-10"/>
    <string val="Normalize depth buffer" name="nodeDesc-10"/>
    <string val="This node was designed to create custom shaders The settings widget allows to modify input, output parameters as well as the output image sizes. WARNING1: you will be able to modify the number of inputs/outputs only if the node is entirely disconnected. WARNING2: input/output names will not be modified if a custom node is created from this node because these names should be edited directly in the setting widget WARNING3: modifying the settings of a node will remove all previously defined keyframes * Special data allows to modify the output image (using a multiple of the input size, plus an offset vector Check use mouse/keyboard if you want to interact with the mouse * Input data allows to add/remove/displace input data (only if disconnected) * Output data allows to add/remove/displace output data (only if disconnected) * Param data allows to add/remove parameters that will automatically be included in your shader. For each of them you may choose a proper name, type, and min/max/default values. Check keyframes if you want your parameter to be accessible through the animation widget In the node interface itself: Source tab contains the head and body of your GLSL source (only the body is editable) Params tab contains the defined widgets according to your setting choices Log tab contains compilation errors Once your settings and source completed, click on apply to see the result " name="nodeHelp-10"/>
    <uint val="10" name="nodeId-10"/>
    <uint val="1" name="nodeGraphId-10"/>
    <vector2f name="nodePos-10">
     <float val="-140.664" name="0"/>
     <float val="2945.49" name="1"/>
    </vector2f>
    <int val="1" name="nodeInputNameSize-10"/>
    <int val="1" name="nodeOutputNameSize-10"/>
    <string val="inBuffer0" name="nodeInputName-10-0"/>
    <string val="outBuffer0" name="nodeOutputName-10-0"/>
    <string val="imgSpritesGenericId" name="nodeStringId-11"/>
    <uint val="1" name="nodeVersion-11"/>
    <string val="genericImgSprites" name="nodeName-11"/>
    <string val="Generic/" name="nodePath-11"/>
    <string val="Generic node for image sprites processing" name="nodeDesc-11"/>
    <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-11"/>
    <uint val="11" name="nodeId-11"/>
    <uint val="1" name="nodeGraphId-11"/>
    <vector2f name="nodePos-11">
     <float val="2759.71" name="0"/>
     <float val="5861.34" name="1"/>
    </vector2f>
    <int val="6" name="nodeInputNameSize-11"/>
    <int val="1" name="nodeOutputNameSize-11"/>
    <string val="matrices" name="nodeInputName-11-0"/>
    <string val="positionWMap" name="nodeInputName-11-1"/>
    <string val="normalWMap" name="nodeInputName-11-2"/>
    <string val="shadingMap" name="nodeInputName-11-3"/>
    <string val="depthMap" name="nodeInputName-11-4"/>
    <string val="noiseTex1" name="nodeInputName-11-5"/>
    <string val="rendering" name="nodeOutputName-11-0"/>
    <string val="mixColorID" name="nodeStringId-12"/>
    <uint val="1" name="nodeVersion-12"/>
    <string val="mixColors" name="nodeName-12"/>
    <string val="Imaging/operators" name="nodePath-12"/>
    <string val="Mix 2 images" name="nodeDesc-12"/>
    <string val="Linearly interpolate 2 images based on a user defined alpha value: &#xa;(1-alpha)*img01 + alpha*img02 " name="nodeHelp-12"/>
    <uint val="12" name="nodeId-12"/>
    <uint val="1" name="nodeGraphId-12"/>
    <vector2f name="nodePos-12">
     <float val="3654.13" name="0"/>
     <float val="6404.19" name="1"/>
    </vector2f>
    <int val="2" name="nodeInputNameSize-12"/>
    <int val="1" name="nodeOutputNameSize-12"/>
    <string val="img01" name="nodeInputName-12-0"/>
    <string val="img02" name="nodeInputName-12-1"/>
    <string val="image" name="nodeOutputName-12-0"/>
    <string val="imgGenericId" name="nodeStringId-13"/>
    <uint val="1" name="nodeVersion-13"/>
    <string val="genericImage" name="nodeName-13"/>
    <string val="Generic/" name="nodePath-13"/>
    <string val="Generic node for image processing" name="nodeDesc-13"/>
    <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-13"/>
    <uint val="13" name="nodeId-13"/>
    <uint val="1" name="nodeGraphId-13"/>
    <vector2f name="nodePos-13">
     <float val="3761.61" name="0"/>
     <float val="5253.61" name="1"/>
    </vector2f>
    <int val="1" name="nodeInputNameSize-13"/>
    <int val="1" name="nodeOutputNameSize-13"/>
    <string val="inBuffer0" name="nodeInputName-13-0"/>
    <string val="outBuffer0" name="nodeOutputName-13-0"/>
    <string val="3DGradientNoiseID" name="nodeStringId-14"/>
    <uint val="1" name="nodeVersion-14"/>
    <string val="3DGradientNoise" name="nodeName-14"/>
    <string val="Texture/" name="nodePath-14"/>
    <string val="Fractal 3D procedural gradient noise" name="nodeDesc-14"/>
    <string val="Noise based on the interpolation of pseudo random gradients on a 3D grid. &#xa;The octaves allows gradient noises with different frequencies &#xa;and amplitudes to be added and create a fractal noise. &#xa;The persistence defines how the amplitude of the signal is scaled on each octave.&#xa;The ZCoord parameter allows to navigate along the third dimension. " name="nodeHelp-14"/>
    <uint val="14" name="nodeId-14"/>
    <uint val="1" name="nodeGraphId-14"/>
    <vector2f name="nodePos-14">
     <float val="1728.83" name="0"/>
     <float val="4325.09" name="1"/>
    </vector2f>
    <int val="1" name="nodeInputNameSize-14"/>
    <int val="1" name="nodeOutputNameSize-14"/>
    <string val="inBuffer0" name="nodeInputName-14-0"/>
    <string val="proceduralTex" name="nodeOutputName-14-0"/>
    <string val="imgSpritesGenericId" name="nodeStringId-15"/>
    <uint val="1" name="nodeVersion-15"/>
    <string val="genericImgSprites" name="nodeName-15"/>
    <string val="Generic/" name="nodePath-15"/>
    <string val="Generic node for image sprites processing" name="nodeDesc-15"/>
    <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-15"/>
    <uint val="15" name="nodeId-15"/>
    <uint val="1" name="nodeGraphId-15"/>
    <vector2f name="nodePos-15">
     <float val="810.865" name="0"/>
     <float val="5314.54" name="1"/>
    </vector2f>
    <int val="6" name="nodeInputNameSize-15"/>
    <int val="1" name="nodeOutputNameSize-15"/>
    <string val="matrices" name="nodeInputName-15-0"/>
    <string val="positionWMap" name="nodeInputName-15-1"/>
    <string val="normalWMap" name="nodeInputName-15-2"/>
    <string val="shadingMap" name="nodeInputName-15-3"/>
    <string val="depthMap" name="nodeInputName-15-4"/>
    <string val="noiseTex1" name="nodeInputName-15-5"/>
    <string val="rendering" name="nodeOutputName-15-0"/>
    <string val="imgGenericId" name="nodeStringId-16"/>
    <uint val="1" name="nodeVersion-16"/>
    <string val="genericImage" name="nodeName-16"/>
    <string val="Generic/" name="nodePath-16"/>
    <string val="Generic node for image processing" name="nodeDesc-16"/>
    <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-16"/>
    <uint val="16" name="nodeId-16"/>
    <uint val="1" name="nodeGraphId-16"/>
    <vector2f name="nodePos-16">
     <float val="3955.41" name="0"/>
     <float val="4143.3" name="1"/>
    </vector2f>
    <int val="1" name="nodeInputNameSize-16"/>
    <int val="1" name="nodeOutputNameSize-16"/>
    <string val="inBuffer0" name="nodeInputName-16-0"/>
    <string val="outBuffer0" name="nodeOutputName-16-0"/>
    <string val="imgGenericId" name="nodeStringId-17"/>
    <uint val="1" name="nodeVersion-17"/>
    <string val="genericImage" name="nodeName-17"/>
    <string val="Generic/" name="nodePath-17"/>
    <string val="Generic node for image processing" name="nodeDesc-17"/>
    <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-17"/>
    <uint val="17" name="nodeId-17"/>
    <uint val="1" name="nodeGraphId-17"/>
    <vector2f name="nodePos-17">
     <float val="5406.47" name="0"/>
     <float val="4346.25" name="1"/>
    </vector2f>
    <int val="2" name="nodeInputNameSize-17"/>
    <int val="1" name="nodeOutputNameSize-17"/>
    <string val="inBuffer0" name="nodeInputName-17-0"/>
    <string val="inBuffer1" name="nodeInputName-17-1"/>
    <string val="outBuffer0" name="nodeOutputName-17-0"/>
    <string val="coherentStyle01Id" name="nodeStringId-18"/>
    <uint val="1" name="nodeVersion-18"/>
    <string val="coherentStyle01" name="nodeName-18"/>
    <string val="Imaging/" name="nodePath-18"/>
    <string val="Coherent style" name="nodeDesc-18"/>
    <string val="Coherent style.&#xa;TODO" name="nodeHelp-18"/>
    <uint val="18" name="nodeId-18"/>
    <uint val="1" name="nodeGraphId-18"/>
    <vector2f name="nodePos-18">
     <float val="3944.49" name="0"/>
     <float val="3375.23" name="1"/>
    </vector2f>
    <int val="6" name="nodeInputNameSize-18"/>
    <int val="1" name="nodeOutputNameSize-18"/>
    <string val="matrices" name="nodeInputName-18-0"/>
    <string val="positionWMap" name="nodeInputName-18-1"/>
    <string val="normalWMap" name="nodeInputName-18-2"/>
    <string val="shadingMap" name="nodeInputName-18-3"/>
    <string val="depthMap" name="nodeInputName-18-4"/>
    <string val="noiseTex1" name="nodeInputName-18-5"/>
    <string val="rendering" name="nodeOutputName-18-0"/>
    <string val="imgGenericId" name="nodeStringId-19"/>
    <uint val="1" name="nodeVersion-19"/>
    <string val="offsetVector" name="nodeName-19"/>
    <string val="Generic/" name="nodePath-19"/>
    <string val="Generic node for image processing" name="nodeDesc-19"/>
    <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-19"/>
    <uint val="19" name="nodeId-19"/>
    <uint val="2" name="nodeGraphId-19"/>
    <vector2f name="nodePos-19">
     <float val="-1823.42" name="0"/>
     <float val="5717.52" name="1"/>
    </vector2f>
    <int val="1" name="nodeInputNameSize-19"/>
    <int val="1" name="nodeOutputNameSize-19"/>
    <string val="ndTex" name="nodeInputName-19-0"/>
    <string val="res" name="nodeOutputName-19-0"/>
    <string val="imgGenericId" name="nodeStringId-20"/>
    <uint val="1" name="nodeVersion-20"/>
    <string val="softWeightedKmeans" name="nodeName-20"/>
    <string val="Generic/" name="nodePath-20"/>
    <string val="Generic node for image processing" name="nodeDesc-20"/>
    <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-20"/>
    <uint val="20" name="nodeId-20"/>
    <uint val="3" name="nodeGraphId-20"/>
    <vector2f name="nodePos-20">
     <float val="4537.66" name="0"/>
     <float val="10871.6" name="1"/>
    </vector2f>
    <int val="1" name="nodeInputNameSize-20"/>
    <int val="3" name="nodeOutputNameSize-20"/>
    <string val="ndTex" name="nodeInputName-20-0"/>
    <string val="res" name="nodeOutputName-20-0"/>
    <string val="zoomedData" name="nodeOutputName-20-1"/>
    <string val="zoomedSeg" name="nodeOutputName-20-2"/>
    <string val="imgGenericId" name="nodeStringId-21"/>
    <uint val="1" name="nodeVersion-21"/>
    <string val="testNan" name="nodeName-21"/>
    <string val="Generic/" name="nodePath-21"/>
    <string val="Generic node for image processing" name="nodeDesc-21"/>
    <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-21"/>
    <uint val="21" name="nodeId-21"/>
    <uint val="3" name="nodeGraphId-21"/>
    <vector2f name="nodePos-21">
     <float val="5422.39" name="0"/>
     <float val="10836.6" name="1"/>
    </vector2f>
    <int val="1" name="nodeInputNameSize-21"/>
    <int val="1" name="nodeOutputNameSize-21"/>
    <string val="inBuffer0" name="nodeInputName-21-0"/>
    <string val="outBuffer0" name="nodeOutputName-21-0"/>
    <string val="imgGenericId" name="nodeStringId-22"/>
    <uint val="1" name="nodeVersion-22"/>
    <string val="genericImage" name="nodeName-22"/>
    <string val="Generic/" name="nodePath-22"/>
    <string val="Generic node for image processing" name="nodeDesc-22"/>
    <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-22"/>
    <uint val="22" name="nodeId-22"/>
    <uint val="4" name="nodeGraphId-22"/>
    <vector2f name="nodePos-22">
     <float val="-538.966" name="0"/>
     <float val="7756.31" name="1"/>
    </vector2f>
    <int val="4" name="nodeInputNameSize-22"/>
    <int val="1" name="nodeOutputNameSize-22"/>
    <string val="matrices" name="nodeInputName-22-0"/>
    <string val="vectorFieldTex" name="nodeInputName-22-1"/>
    <string val="normalsTex" name="nodeInputName-22-2"/>
    <string val="positionsTex" name="nodeInputName-22-3"/>
    <string val="result" name="nodeOutputName-22-0"/>
    <uint val="1" name="nbConnections-0-1"/>
    <vector2u name="connection-0-1-0">
     <uint val="0" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <uint val="1" name="nbConnections-0-2"/>
    <vector2u name="connection-0-2-0">
     <uint val="0" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <uint val="1" name="nbConnections-0-3"/>
    <vector2u name="connection-0-3-0">
     <uint val="1" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <uint val="2" name="nbConnections-0-4"/>
    <vector2u name="connection-0-4-0">
     <uint val="0" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <vector2u name="connection-0-4-1">
     <uint val="1" name="0"/>
     <uint val="1" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-0-5"/>
    <uint val="0" name="nbConnections-0-6"/>
    <uint val="0" name="nbConnections-0-7"/>
    <uint val="0" name="nbConnections-0-8"/>
    <uint val="0" name="nbConnections-0-9"/>
    <uint val="0" name="nbConnections-0-10"/>
    <uint val="0" name="nbConnections-0-11"/>
    <uint val="0" name="nbConnections-0-12"/>
    <uint val="0" name="nbConnections-0-13"/>
    <uint val="0" name="nbConnections-0-14"/>
    <uint val="0" name="nbConnections-0-15"/>
    <uint val="0" name="nbConnections-0-16"/>
    <uint val="0" name="nbConnections-0-17"/>
    <uint val="0" name="nbConnections-0-18"/>
    <uint val="0" name="nbConnections-0-19"/>
    <uint val="0" name="nbConnections-0-20"/>
    <uint val="0" name="nbConnections-0-21"/>
    <uint val="0" name="nbConnections-0-22"/>
    <uint val="0" name="nbConnections-1-2"/>
    <uint val="0" name="nbConnections-1-3"/>
    <uint val="0" name="nbConnections-1-4"/>
    <uint val="0" name="nbConnections-1-5"/>
    <uint val="0" name="nbConnections-1-6"/>
    <uint val="0" name="nbConnections-1-7"/>
    <uint val="0" name="nbConnections-1-8"/>
    <uint val="0" name="nbConnections-1-9"/>
    <uint val="0" name="nbConnections-1-10"/>
    <uint val="0" name="nbConnections-1-11"/>
    <uint val="0" name="nbConnections-1-12"/>
    <uint val="0" name="nbConnections-1-13"/>
    <uint val="0" name="nbConnections-1-14"/>
    <uint val="0" name="nbConnections-1-15"/>
    <uint val="0" name="nbConnections-1-16"/>
    <uint val="0" name="nbConnections-1-17"/>
    <uint val="0" name="nbConnections-1-18"/>
    <uint val="0" name="nbConnections-1-19"/>
    <uint val="0" name="nbConnections-1-20"/>
    <uint val="0" name="nbConnections-1-21"/>
    <uint val="0" name="nbConnections-1-22"/>
    <uint val="0" name="nbConnections-2-3"/>
    <uint val="0" name="nbConnections-2-4"/>
    <uint val="0" name="nbConnections-2-5"/>
    <uint val="0" name="nbConnections-2-6"/>
    <uint val="0" name="nbConnections-2-7"/>
    <uint val="0" name="nbConnections-2-8"/>
    <uint val="0" name="nbConnections-2-9"/>
    <uint val="0" name="nbConnections-2-10"/>
    <uint val="0" name="nbConnections-2-11"/>
    <uint val="0" name="nbConnections-2-12"/>
    <uint val="0" name="nbConnections-2-13"/>
    <uint val="0" name="nbConnections-2-14"/>
    <uint val="0" name="nbConnections-2-15"/>
    <uint val="0" name="nbConnections-2-16"/>
    <uint val="0" name="nbConnections-2-17"/>
    <uint val="0" name="nbConnections-2-18"/>
    <uint val="0" name="nbConnections-2-19"/>
    <uint val="0" name="nbConnections-2-20"/>
    <uint val="0" name="nbConnections-2-21"/>
    <uint val="0" name="nbConnections-2-22"/>
    <uint val="0" name="nbConnections-3-4"/>
    <uint val="0" name="nbConnections-3-5"/>
    <uint val="0" name="nbConnections-3-6"/>
    <uint val="0" name="nbConnections-3-7"/>
    <uint val="0" name="nbConnections-3-8"/>
    <uint val="0" name="nbConnections-3-9"/>
    <uint val="0" name="nbConnections-3-10"/>
    <uint val="0" name="nbConnections-3-11"/>
    <uint val="0" name="nbConnections-3-12"/>
    <uint val="0" name="nbConnections-3-13"/>
    <uint val="0" name="nbConnections-3-14"/>
    <uint val="0" name="nbConnections-3-15"/>
    <uint val="0" name="nbConnections-3-16"/>
    <uint val="0" name="nbConnections-3-17"/>
    <uint val="0" name="nbConnections-3-18"/>
    <uint val="0" name="nbConnections-3-19"/>
    <uint val="0" name="nbConnections-3-20"/>
    <uint val="0" name="nbConnections-3-21"/>
    <uint val="0" name="nbConnections-3-22"/>
    <uint val="1" name="nbConnections-4-5"/>
    <vector2u name="connection-4-5-0">
     <uint val="0" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-4-6"/>
    <uint val="0" name="nbConnections-4-7"/>
    <uint val="0" name="nbConnections-4-8"/>
    <uint val="0" name="nbConnections-4-9"/>
    <uint val="0" name="nbConnections-4-10"/>
    <uint val="0" name="nbConnections-4-11"/>
    <uint val="0" name="nbConnections-4-12"/>
    <uint val="0" name="nbConnections-4-13"/>
    <uint val="0" name="nbConnections-4-14"/>
    <uint val="0" name="nbConnections-4-15"/>
    <uint val="0" name="nbConnections-4-16"/>
    <uint val="0" name="nbConnections-4-17"/>
    <uint val="0" name="nbConnections-4-18"/>
    <uint val="0" name="nbConnections-4-19"/>
    <uint val="0" name="nbConnections-4-20"/>
    <uint val="0" name="nbConnections-4-21"/>
    <uint val="0" name="nbConnections-4-22"/>
    <uint val="0" name="nbConnections-5-6"/>
    <uint val="0" name="nbConnections-5-7"/>
    <uint val="0" name="nbConnections-5-8"/>
    <uint val="0" name="nbConnections-5-9"/>
    <uint val="0" name="nbConnections-5-10"/>
    <uint val="0" name="nbConnections-5-11"/>
    <uint val="0" name="nbConnections-5-12"/>
    <uint val="0" name="nbConnections-5-13"/>
    <uint val="0" name="nbConnections-5-14"/>
    <uint val="0" name="nbConnections-5-15"/>
    <uint val="0" name="nbConnections-5-16"/>
    <uint val="0" name="nbConnections-5-17"/>
    <uint val="0" name="nbConnections-5-18"/>
    <uint val="0" name="nbConnections-5-19"/>
    <uint val="0" name="nbConnections-5-20"/>
    <uint val="0" name="nbConnections-5-21"/>
    <uint val="0" name="nbConnections-5-22"/>
    <uint val="1" name="nbConnections-6-7"/>
    <vector2u name="connection-6-7-0">
     <uint val="1" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <uint val="2" name="nbConnections-6-8"/>
    <vector2u name="connection-6-8-0">
     <uint val="6" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <vector2u name="connection-6-8-1">
     <uint val="7" name="0"/>
     <uint val="1" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-6-9"/>
    <uint val="0" name="nbConnections-6-10"/>
    <uint val="3" name="nbConnections-6-11"/>
    <vector2u name="connection-6-11-0">
     <uint val="0" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <vector2u name="connection-6-11-1">
     <uint val="5" name="0"/>
     <uint val="1" name="1"/>
    </vector2u>
    <vector2u name="connection-6-11-2">
     <uint val="2" name="0"/>
     <uint val="2" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-6-12"/>
    <uint val="0" name="nbConnections-6-13"/>
    <uint val="1" name="nbConnections-6-14"/>
    <vector2u name="connection-6-14-0">
     <uint val="5" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <uint val="3" name="nbConnections-6-15"/>
    <vector2u name="connection-6-15-0">
     <uint val="0" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <vector2u name="connection-6-15-1">
     <uint val="5" name="0"/>
     <uint val="1" name="1"/>
    </vector2u>
    <vector2u name="connection-6-15-2">
     <uint val="2" name="0"/>
     <uint val="2" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-6-16"/>
    <uint val="0" name="nbConnections-6-17"/>
    <uint val="3" name="nbConnections-6-18"/>
    <vector2u name="connection-6-18-0">
     <uint val="0" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <vector2u name="connection-6-18-1">
     <uint val="5" name="0"/>
     <uint val="1" name="1"/>
    </vector2u>
    <vector2u name="connection-6-18-2">
     <uint val="2" name="0"/>
     <uint val="2" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-6-19"/>
    <uint val="0" name="nbConnections-6-20"/>
    <uint val="0" name="nbConnections-6-21"/>
    <uint val="0" name="nbConnections-6-22"/>
    <uint val="0" name="nbConnections-7-8"/>
    <uint val="0" name="nbConnections-7-9"/>
    <uint val="0" name="nbConnections-7-10"/>
    <uint val="1" name="nbConnections-7-11"/>
    <vector2u name="connection-7-11-0">
     <uint val="0" name="0"/>
     <uint val="3" name="1"/>
    </vector2u>
    <uint val="1" name="nbConnections-7-12"/>
    <vector2u name="connection-7-12-0">
     <uint val="0" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-7-13"/>
    <uint val="0" name="nbConnections-7-14"/>
    <uint val="1" name="nbConnections-7-15"/>
    <vector2u name="connection-7-15-0">
     <uint val="0" name="0"/>
     <uint val="3" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-7-16"/>
    <uint val="1" name="nbConnections-7-17"/>
    <vector2u name="connection-7-17-0">
     <uint val="0" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <uint val="1" name="nbConnections-7-18"/>
    <vector2u name="connection-7-18-0">
     <uint val="0" name="0"/>
     <uint val="3" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-7-19"/>
    <uint val="0" name="nbConnections-7-20"/>
    <uint val="0" name="nbConnections-7-21"/>
    <uint val="0" name="nbConnections-7-22"/>
    <uint val="1" name="nbConnections-8-9"/>
    <vector2u name="connection-8-9-0">
     <uint val="0" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-8-10"/>
    <uint val="0" name="nbConnections-8-11"/>
    <uint val="0" name="nbConnections-8-12"/>
    <uint val="0" name="nbConnections-8-13"/>
    <uint val="0" name="nbConnections-8-14"/>
    <uint val="0" name="nbConnections-8-15"/>
    <uint val="0" name="nbConnections-8-16"/>
    <uint val="0" name="nbConnections-8-17"/>
    <uint val="0" name="nbConnections-8-18"/>
    <uint val="0" name="nbConnections-8-19"/>
    <uint val="0" name="nbConnections-8-20"/>
    <uint val="0" name="nbConnections-8-21"/>
    <uint val="0" name="nbConnections-8-22"/>
    <uint val="1" name="nbConnections-9-10"/>
    <vector2u name="connection-9-10-0">
     <uint val="0" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-9-11"/>
    <uint val="0" name="nbConnections-9-12"/>
    <uint val="0" name="nbConnections-9-13"/>
    <uint val="0" name="nbConnections-9-14"/>
    <uint val="0" name="nbConnections-9-15"/>
    <uint val="0" name="nbConnections-9-16"/>
    <uint val="0" name="nbConnections-9-17"/>
    <uint val="0" name="nbConnections-9-18"/>
    <uint val="0" name="nbConnections-9-19"/>
    <uint val="0" name="nbConnections-9-20"/>
    <uint val="0" name="nbConnections-9-21"/>
    <uint val="0" name="nbConnections-9-22"/>
    <uint val="1" name="nbConnections-10-11"/>
    <vector2u name="connection-10-11-0">
     <uint val="0" name="0"/>
     <uint val="4" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-10-12"/>
    <uint val="0" name="nbConnections-10-13"/>
    <uint val="0" name="nbConnections-10-14"/>
    <uint val="1" name="nbConnections-10-15"/>
    <vector2u name="connection-10-15-0">
     <uint val="0" name="0"/>
     <uint val="4" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-10-16"/>
    <uint val="0" name="nbConnections-10-17"/>
    <uint val="1" name="nbConnections-10-18"/>
    <vector2u name="connection-10-18-0">
     <uint val="0" name="0"/>
     <uint val="4" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-10-19"/>
    <uint val="0" name="nbConnections-10-20"/>
    <uint val="0" name="nbConnections-10-21"/>
    <uint val="0" name="nbConnections-10-22"/>
    <uint val="1" name="nbConnections-11-12"/>
    <vector2u name="connection-11-12-0">
     <uint val="0" name="0"/>
     <uint val="1" name="1"/>
    </vector2u>
    <uint val="1" name="nbConnections-11-13"/>
    <vector2u name="connection-11-13-0">
     <uint val="0" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-11-14"/>
    <uint val="0" name="nbConnections-11-15"/>
    <uint val="0" name="nbConnections-11-16"/>
    <uint val="0" name="nbConnections-11-17"/>
    <uint val="0" name="nbConnections-11-18"/>
    <uint val="0" name="nbConnections-11-19"/>
    <uint val="0" name="nbConnections-11-20"/>
    <uint val="0" name="nbConnections-11-21"/>
    <uint val="0" name="nbConnections-11-22"/>
    <uint val="0" name="nbConnections-12-13"/>
    <uint val="0" name="nbConnections-12-14"/>
    <uint val="0" name="nbConnections-12-15"/>
    <uint val="0" name="nbConnections-12-16"/>
    <uint val="0" name="nbConnections-12-17"/>
    <uint val="0" name="nbConnections-12-18"/>
    <uint val="0" name="nbConnections-12-19"/>
    <uint val="0" name="nbConnections-12-20"/>
    <uint val="0" name="nbConnections-12-21"/>
    <uint val="0" name="nbConnections-12-22"/>
    <uint val="0" name="nbConnections-13-14"/>
    <uint val="0" name="nbConnections-13-15"/>
    <uint val="0" name="nbConnections-13-16"/>
    <uint val="0" name="nbConnections-13-17"/>
    <uint val="0" name="nbConnections-13-18"/>
    <uint val="0" name="nbConnections-13-19"/>
    <uint val="0" name="nbConnections-13-20"/>
    <uint val="0" name="nbConnections-13-21"/>
    <uint val="0" name="nbConnections-13-22"/>
    <uint val="1" name="nbConnections-14-15"/>
    <vector2u name="connection-14-15-0">
     <uint val="0" name="0"/>
     <uint val="5" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-14-16"/>
    <uint val="0" name="nbConnections-14-17"/>
    <uint val="1" name="nbConnections-14-18"/>
    <vector2u name="connection-14-18-0">
     <uint val="0" name="0"/>
     <uint val="5" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-14-19"/>
    <uint val="0" name="nbConnections-14-20"/>
    <uint val="0" name="nbConnections-14-21"/>
    <uint val="0" name="nbConnections-14-22"/>
    <uint val="1" name="nbConnections-15-16"/>
    <vector2u name="connection-15-16-0">
     <uint val="0" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-15-17"/>
    <uint val="0" name="nbConnections-15-18"/>
    <uint val="0" name="nbConnections-15-19"/>
    <uint val="0" name="nbConnections-15-20"/>
    <uint val="0" name="nbConnections-15-21"/>
    <uint val="0" name="nbConnections-15-22"/>
    <uint val="1" name="nbConnections-16-17"/>
    <vector2u name="connection-16-17-0">
     <uint val="0" name="0"/>
     <uint val="1" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-16-18"/>
    <uint val="0" name="nbConnections-16-19"/>
    <uint val="0" name="nbConnections-16-20"/>
    <uint val="0" name="nbConnections-16-21"/>
    <uint val="0" name="nbConnections-16-22"/>
    <uint val="0" name="nbConnections-17-18"/>
    <uint val="0" name="nbConnections-17-19"/>
    <uint val="0" name="nbConnections-17-20"/>
    <uint val="0" name="nbConnections-17-21"/>
    <uint val="0" name="nbConnections-17-22"/>
    <uint val="0" name="nbConnections-18-19"/>
    <uint val="0" name="nbConnections-18-20"/>
    <uint val="0" name="nbConnections-18-21"/>
    <uint val="0" name="nbConnections-18-22"/>
    <uint val="0" name="nbConnections-19-20"/>
    <uint val="0" name="nbConnections-19-21"/>
    <uint val="0" name="nbConnections-19-22"/>
    <uint val="1" name="nbConnections-20-21"/>
    <vector2u name="connection-20-21-0">
     <uint val="2" name="0"/>
     <uint val="0" name="1"/>
    </vector2u>
    <uint val="0" name="nbConnections-20-22"/>
    <uint val="0" name="nbConnections-21-22"/>
    <bool val="1" name="nodeHasWidget-0"/>
    <IOData name="node-0">
     <string val="../../../../home/artis/home/artis/home/artis/vergne/projects/data/models/roundedcube.obj" name="filename"/>
     <IOData name="camera">
      <int val="0" name="projType"/>
      <int val="0" name="rotType"/>
      <vector2i name="viewport">
       <int val="512" name="0"/>
       <int val="512" name="1"/>
      </vector2i>
      <vector3f name="sceneCenter">
       <float val="-0.00171327" name="0"/>
       <float val="-0.00210487" name="1"/>
       <float val="-0.0264235" name="2"/>
      </vector3f>
      <float val="1.55316" name="sceneRadius"/>
      <float val="45" name="fovy"/>
      <vector3f name="shift">
       <float val="0" name="0"/>
       <float val="0" name="1"/>
       <float val="3.7643" name="2"/>
      </vector3f>
      <IOData name="trackball">
       <quaternionf name="rotation">
        <float val="0.783659" name="0"/>
        <float val="0.169071" name="1"/>
        <float val="-0.569431" name="2"/>
        <float val="0.181774" name="3"/>
       </quaternionf>
       <vector2f name="screenCenter">
        <float val="256" name="0"/>
        <float val="256" name="1"/>
       </vector2f>
       <float val="512" name="screenRadius"/>
      </IOData>
     </IOData>
     <string val="420" name="genericGlslVersion"/>
     <string val="genericObjLoader" name="genericNodeName"/>
     <bool val="1" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="1" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec3 inVertex;&#xa;layout(location = 1) in vec3 inNormal;&#xa;layout(location = 2) in vec3 inTangent;&#xa;layout(location = 3) in vec2 inTexcoord;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;" name="genericVertHead"/>
     <string val="out vec3  normalV;&#xa;out float depthV;&#xa;out vec3 posW;&#xa;&#xa;void main() {&#xa;&#x9;mat4 mdv    = view*model;&#xa;&#x9;mat4 mvp    = proj*mdv;&#xa;&#x9;posW = inVertex;&#xa;&#xa;&#x9;normalV     = (mdv*vec4(inNormal,0)).xyz;&#xa;&#x9;depthV      = (clamp(-(mdv*vec4(inVertex,1)).z,zmin,zmax)-zmin)/(zmax-zmin);&#xa;&#x9;gl_Position = mvp*vec4(inVertex,1);&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 normals;&#xa;layout(location = 1) out vec4 positions;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;" name="genericFragHead"/>
     <string val="in vec3  normalV;&#xa;in float depthV;&#xa;in vec3 posW;&#xa;&#xa;void main() {&#xa;&#x9;normals = vec4(normalize(normalV),depthV);&#xa;&#x9;positions = vec4(posW,1.);&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 3) out;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;" name="genericTessEHead"/>
     <string val="layout(triangles,equal_spacing,ccw) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = gl_TessCoord.x*gl_in[0].gl_Position;&#xa;&#x9;vec4 p2 = gl_TessCoord.y*gl_in[1].gl_Position;&#xa;&#x9;vec4 p3 = gl_TessCoord.z*gl_in[2].gl_Position;&#xa;&#x9;gl_Position = p1+p2+p3;&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}&#xa;" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="512" name="0"/>
      <float val="512" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="0" name="genericNbWidgets"/>
    </IOData>
    <IOData name="nodeWidget-0">
     <uint val="1" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="1" name="trackballCameraKeyframed"/>
      <IOData name="trackballCameraAttribCurveQ">
       <quaternionf name="currentVal">
        <float val="0.783661" name="0"/>
        <float val="0.169071" name="1"/>
        <float val="-0.569433" name="2"/>
        <float val="0.181774" name="3"/>
       </quaternionf>
       <uint val="4" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.783661" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.169071" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="-0.569433" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-3">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.181774" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <IOData name="trackballCameraAttribCurveS">
       <vector3f name="currentVal">
        <float val="0" name="0"/>
        <float val="0" name="1"/>
        <float val="3.7643" name="2"/>
       </vector3f>
       <uint val="3" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="3.7643" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <int val="0" name="projection"/>
      <int val="0" name="rotation"/>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeOutputPos-0-0">
     <float val="56.32" name="0"/>
     <float val="647.68" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-0-1">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-1"/>
    <IOData name="node-1">
     <string val="410" name="genericGlslVersion"/>
     <string val="phongShading" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 410&#xa;&#xa;layout(location = 0) out vec4 shading;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;vec2 m = mouse/vec2(textureSize(normalMap,0))-vec2(.5);&#xa;&#x9;vec3 l = normalize(vec3(m,.5));&#xa;&#x9;vec3 n = texture(normalMap,texcoord).xyz;&#xa;&#xa;&#x9;// hack for computing the view direction&#xa;&#x9;// the true view could be obtained in &#xa;&#x9;// another buffer of a genericBuffer node&#xa;&#x9;vec3 v = normalize(vec3(texcoord*2.-1.,-30.));&#xa;&#xa;&#x9;float d = max(dot(n,l),0.);&#xa;&#x9;float s = pow(max(dot(reflect(l,n),v),0.),shininess);&#xa;&#xa;&#x9;shading.xyz = Ka + Kd*d + Ks*s;&#xa;&#x9;shading.w = length(n);&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 410&#xa;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="1" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="4" name="genericNbWidgets"/>
     <int val="4" name="genericWidgetType-0"/>
     <int val="2" name="genericWidgetView-0"/>
     <string val="Ka" name="genericWidgetName-0"/>
     <bool val="1" name="genericWidgetKeyframed-0"/>
     <int val="4" name="genericWidgetType-1"/>
     <int val="2" name="genericWidgetView-1"/>
     <string val="Kd" name="genericWidgetName-1"/>
     <bool val="1" name="genericWidgetKeyframed-1"/>
     <int val="4" name="genericWidgetType-2"/>
     <int val="2" name="genericWidgetView-2"/>
     <string val="Ks" name="genericWidgetName-2"/>
     <bool val="1" name="genericWidgetKeyframed-2"/>
     <int val="0" name="genericWidgetType-3"/>
     <int val="1" name="genericWidgetView-3"/>
     <string val="shininess" name="genericWidgetName-3"/>
     <bool val="1" name="genericWidgetKeyframed-3"/>
    </IOData>
    <IOData name="nodeWidget-1">
     <uint val="5" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="1" name="vector2iAttribKeyframed"/>
      <vector2i name="vector2iAttribMinVal">
       <int val="-10000" name="0"/>
       <int val="-10000" name="1"/>
      </vector2i>
      <vector2i name="vector2iAttribMaxVal">
       <int val="10000" name="0"/>
       <int val="10000" name="1"/>
      </vector2i>
      <IOData name="vector2iAttribCurve">
       <vector2i name="currentVal">
        <int val="258" name="0"/>
        <int val="287" name="1"/>
       </vector2i>
       <uint val="2" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="258" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="287" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool val="1" name="vector3fAttribKeyframed"/>
      <vector3f name="vector3fAttribMinVal">
       <float val="0" name="0"/>
       <float val="0" name="1"/>
       <float val="0" name="2"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float val="1" name="0"/>
       <float val="1" name="1"/>
       <float val="1" name="2"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float val="0.1" name="0"/>
        <float val="0.1" name="1"/>
        <float val="0.1" name="2"/>
       </vector3f>
       <uint val="3" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.1" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.1" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.1" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool val="1" name="vector3fAttribKeyframed"/>
      <vector3f name="vector3fAttribMinVal">
       <float val="0" name="0"/>
       <float val="0" name="1"/>
       <float val="0" name="2"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float val="1" name="0"/>
       <float val="1" name="1"/>
       <float val="1" name="2"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float val="0.5" name="0"/>
        <float val="0.5" name="1"/>
        <float val="0.5" name="2"/>
       </vector3f>
       <uint val="3" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.5" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.5" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.5" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool val="1" name="vector3fAttribKeyframed"/>
      <vector3f name="vector3fAttribMinVal">
       <float val="0" name="0"/>
       <float val="0" name="1"/>
       <float val="0" name="2"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float val="1" name="0"/>
       <float val="1" name="1"/>
       <float val="1" name="2"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float val="0.5" name="0"/>
        <float val="0.5" name="1"/>
        <float val="0.5" name="2"/>
       </vector3f>
       <uint val="3" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.5" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.5" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.5" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="1" name="floatAttribMinVal"/>
      <float val="1000" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="49.951" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="49.951" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-1-0">
     <float val="56.32" name="0"/>
     <float val="647.68" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-1-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-2"/>
    <IOData name="node-2">
     <string val="420" name="genericGlslVersion"/>
     <string val="genericImage" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = vec4(texture(inBuffer0,texcoord).xyz,1);&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="0" name="genericNbWidgets"/>
    </IOData>
    <IOData name="nodeWidget-2">
     <uint val="0" name="nbChildren"/>
    </IOData>
    <vector2f name="nodeInputPos-2-0">
     <float val="56.32" name="0"/>
     <float val="647.68" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-2-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-3"/>
    <IOData name="node-3">
     <string val="410" name="genericGlslVersion"/>
     <string val="3DGradientNoise" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform int nboctaves;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 410&#xa;&#xa;layout(location = 0) out vec4 proceduralTex;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform int nboctaves;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;&#xa;vec3 hash33(vec3 p) {&#xa;&#x9;vec3 q = vec3(&#x9;dot(p,vec3(127.1,311.7,74.7)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(269.5,183.3,246.1)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(113.5,271.9,124.6)));&#xa;&#x9;return fract(sin(q)*43758.5453123)*2.-1.;&#xa;}&#xa;&#xa;float gnoise(in vec3 x) {&#xa;&#x9;vec3 p = floor(x);&#xa;&#x9;vec3 f = fract(x);&#xa;    vec3 m = f*f*(3.-2.*f);&#xa;&#xa;&#x9;return mix(&#xa;&#x9;&#x9;&#x9;&#x9;mix(mix(dot(hash33(p+vec3(0.,0.,0.)),f-vec3(0.,0.,0.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,0.,0.)),f-vec3(1.,0.,0.)),m.x),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;  mix(dot(hash33(p+vec3(0.,1.,0.)),f-vec3(0.,1.,0.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,1.,0.)),f-vec3(1.,1.,0.)),m.x),m.y),&#xa;&#x9;&#x9;&#x9;&#x9;mix(mix(dot(hash33(p+vec3(0.,0.,1.)),f-vec3(0.,0.,1.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,0.,1.)),f-vec3(1.,0.,1.)),m.x),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;  mix(dot(hash33(p+vec3(0.,1.,1.)),f-vec3(0.,1.,1.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,1.,1.)),f-vec3(1.,1.,1.)),m.x),m.y),m.z)*.5+.5;&#xa;}&#xa;&#xa;float fnoise(in vec3 p,in float amplitude,in float frequency,in float persistence, in int nboctaves) {&#xa;&#x9;float a = amplitude;&#xa;&#x9;float f = frequency;&#xa;&#x9;float n = 0.0;&#xa;&#xa;&#x9;for(int i=0;i&lt;nboctaves;++i) {&#xa;&#x9;&#x9;n = n+a*gnoise(p*f);&#xa;&#x9;&#x9;f = f*2.;&#xa;&#x9;&#x9;a = a*persistence;&#xa;&#x9;}&#xa;&#x9;&#xa;&#x9;return n;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec4 data = texture(inBuffer0,texcoord);&#xa;&#x9;float n = fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves);&#xa;&#x9;proceduralTex =  vec4(vec3(n),data.w);&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform int nboctaves;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 410&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform int nboctaves;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform int nboctaves;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="512" name="0"/>
      <float val="512" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="5" name="genericNbWidgets"/>
     <int val="0" name="genericWidgetType-0"/>
     <int val="1" name="genericWidgetView-0"/>
     <string val="frequency" name="genericWidgetName-0"/>
     <bool val="1" name="genericWidgetKeyframed-0"/>
     <int val="0" name="genericWidgetType-1"/>
     <int val="1" name="genericWidgetView-1"/>
     <string val="amplitude" name="genericWidgetName-1"/>
     <bool val="1" name="genericWidgetKeyframed-1"/>
     <int val="0" name="genericWidgetType-2"/>
     <int val="1" name="genericWidgetView-2"/>
     <string val="persistence" name="genericWidgetName-2"/>
     <bool val="1" name="genericWidgetKeyframed-2"/>
     <int val="1" name="genericWidgetType-3"/>
     <int val="1" name="genericWidgetView-3"/>
     <string val="nboctaves" name="genericWidgetName-3"/>
     <bool val="1" name="genericWidgetKeyframed-3"/>
     <int val="0" name="genericWidgetType-4"/>
     <int val="1" name="genericWidgetView-4"/>
     <string val="ZCoord" name="genericWidgetName-4"/>
     <bool val="1" name="genericWidgetKeyframed-4"/>
    </IOData>
    <IOData name="nodeWidget-3">
     <uint val="5" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="100" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="3.1" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="3.1" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0.5" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.5" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0.5" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.5" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool val="1" name="intAttribKeyframed"/>
      <int val="1" name="intAttribMinVal"/>
      <int val="10" name="intAttribMaxVal"/>
      <IOData name="intAttribCurve">
       <int val="4" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="4" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-3-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-3-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-4"/>
    <IOData name="node-4">
     <string val="420" name="genericGlslVersion"/>
     <string val="genericImage" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D ndTex;&#xa;uniform sampler2D otherTex;&#xa;uniform float sig;&#xa;uniform int halfsize;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 res;&#xa;uniform sampler2D ndTex;&#xa;uniform sampler2D otherTex;&#xa;uniform float sig;&#xa;uniform int halfsize;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;const float eps = 1e-10;&#xa;const float sigmin = 0.001;&#xa;&#xa;vec2 ps = 1./textureSize(ndTex,0);&#xa;int hs = abs(halfsize);&#xa;float sigma = max(sig,sigmin);&#xa;&#xa;float gauss(in float v, in float s) {&#xa;&#x9;return exp(-.5*((v*v)/(s*s)));&#xa;}&#xa;&#xa;vec2 getDisplacedVector02() {&#xa;&#x9;vec2 cDisp = vec2(0.); // displacement vector &#xa;&#x9;float cDist = 1e+10; // current dist (max)&#xa;&#x9;float sum = 0.;&#xa;&#xa;&#x9;for(int i=-hs;i&lt;=hs;++i) {&#xa;&#x9;&#x9;for(int j=-hs;j&lt;=hs;++j) {&#xa;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*ps;&#xa;&#x9;&#x9;&#x9;vec4 data = texture(ndTex,coord);&#xa;&#x9;&#xa;&#x9;&#x9;&#x9;if(length(data.xyz)&lt;0.5) continue;&#xa;&#xa;&#x9;&#x9;&#x9;vec2 tDisp = data.xy*hs*ps;&#xa;&#x9;&#x9;&#x9;float tDist = gauss(distance(texcoord,coord+tDisp),sigma);&#xa;&#x9;&#x9;&#x9;sum += tDist;&#xa;&#x9;&#x9;&#x9;cDisp += tDisp*tDist;&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;return sum&lt;eps ? vec2(0.) : -(cDisp/sum)*sign(halfsize);&#xa;}&#xa;&#xa;vec2 getDisplacedVector01() {&#xa;&#x9;vec2 cDisp = vec2(0.); // displacement vector &#xa;&#x9;float cDist = 1e+10; // current dist (max)&#xa;&#xa;&#x9;for(int i=-hs;i&lt;=hs;++i) {&#xa;&#x9;&#x9;for(int j=-hs;j&lt;=hs;++j) {&#xa;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*ps;&#xa;&#x9;&#x9;&#x9;vec4 data = texture(ndTex,coord);&#xa;&#x9;&#xa;&#x9;&#x9;&#x9;if(length(data.xyz)&lt;0.5) continue;&#xa;&#xa;&#x9;&#x9;&#x9;vec2 tDisp = data.xy*hs*ps;&#xa;&#x9;&#x9;&#x9;float tDist = distance(texcoord,coord+tDisp);&#xa;&#xa;&#x9;&#x9;&#x9;if(tDist&lt;cDist) {&#xa;&#x9;&#x9;&#x9;&#x9;cDist = tDist;&#xa;&#x9;&#x9;&#x9;&#x9;cDisp = tDisp;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;return -cDisp*sign(halfsize);&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 c = getDisplacedVector02();&#xa;&#xa;&#xa;&#x9;res = texture(otherTex,texcoord+c);&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D ndTex;&#xa;uniform sampler2D otherTex;&#xa;uniform float sig;&#xa;uniform int halfsize;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform sampler2D ndTex;&#xa;uniform sampler2D otherTex;&#xa;uniform float sig;&#xa;uniform int halfsize;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D ndTex;&#xa;uniform sampler2D otherTex;&#xa;uniform float sig;&#xa;uniform int halfsize;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="2" name="genericNbWidgets"/>
     <int val="1" name="genericWidgetType-0"/>
     <int val="1" name="genericWidgetView-0"/>
     <string val="halfsize" name="genericWidgetName-0"/>
     <bool val="0" name="genericWidgetKeyframed-0"/>
     <int val="0" name="genericWidgetType-1"/>
     <int val="1" name="genericWidgetView-1"/>
     <string val="sig" name="genericWidgetName-1"/>
     <bool val="0" name="genericWidgetKeyframed-1"/>
    </IOData>
    <IOData name="nodeWidget-4">
     <uint val="2" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="0" name="intAttribKeyframed"/>
      <int val="-100" name="intAttribMinVal"/>
      <int val="100" name="intAttribMaxVal"/>
      <IOData name="intAttribCurve">
       <int val="21" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="21" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool val="0" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0.016" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.016" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-4-0">
     <float val="56.32" name="0"/>
     <float val="647.68" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-4-1">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-4-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-5"/>
    <IOData name="node-5">
     <string val="410" name="genericGlslVersion"/>
     <string val="3DGradientNoise" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform int nboctaves;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 410&#xa;&#xa;layout(location = 0) out vec4 proceduralTex;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform int nboctaves;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;&#xa;vec3 hash33(vec3 p) {&#xa;&#x9;vec3 q = vec3(&#x9;dot(p,vec3(127.1,311.7,74.7)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(269.5,183.3,246.1)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(113.5,271.9,124.6)));&#xa;&#x9;return fract(sin(q)*43758.5453123)*2.-1.;&#xa;}&#xa;&#xa;float gnoise(in vec3 x) {&#xa;&#x9;vec3 p = floor(x);&#xa;&#x9;vec3 f = fract(x);&#xa;    vec3 m = f*f*(3.-2.*f);&#xa;&#xa;&#x9;return mix(&#xa;&#x9;&#x9;&#x9;&#x9;mix(mix(dot(hash33(p+vec3(0.,0.,0.)),f-vec3(0.,0.,0.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,0.,0.)),f-vec3(1.,0.,0.)),m.x),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;  mix(dot(hash33(p+vec3(0.,1.,0.)),f-vec3(0.,1.,0.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,1.,0.)),f-vec3(1.,1.,0.)),m.x),m.y),&#xa;&#x9;&#x9;&#x9;&#x9;mix(mix(dot(hash33(p+vec3(0.,0.,1.)),f-vec3(0.,0.,1.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,0.,1.)),f-vec3(1.,0.,1.)),m.x),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;  mix(dot(hash33(p+vec3(0.,1.,1.)),f-vec3(0.,1.,1.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,1.,1.)),f-vec3(1.,1.,1.)),m.x),m.y),m.z)*.5+.5;&#xa;}&#xa;&#xa;float fnoise(in vec3 p,in float amplitude,in float frequency,in float persistence, in int nboctaves) {&#xa;&#x9;float a = amplitude;&#xa;&#x9;float f = frequency;&#xa;&#x9;float n = 0.0;&#xa;&#xa;&#x9;for(int i=0;i&lt;nboctaves;++i) {&#xa;&#x9;&#x9;n = n+a*gnoise(p*f);&#xa;&#x9;&#x9;f = f*2.;&#xa;&#x9;&#x9;a = a*persistence;&#xa;&#x9;}&#xa;&#x9;&#xa;&#x9;return n;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec4 data = texture(inBuffer0,texcoord);&#xa;&#x9;float n = fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves);&#xa;&#x9;proceduralTex =  vec4(vec3(n),data.w);&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform int nboctaves;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 410&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform int nboctaves;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform int nboctaves;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="512" name="0"/>
      <float val="512" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="5" name="genericNbWidgets"/>
     <int val="0" name="genericWidgetType-0"/>
     <int val="1" name="genericWidgetView-0"/>
     <string val="frequency" name="genericWidgetName-0"/>
     <bool val="1" name="genericWidgetKeyframed-0"/>
     <int val="0" name="genericWidgetType-1"/>
     <int val="1" name="genericWidgetView-1"/>
     <string val="amplitude" name="genericWidgetName-1"/>
     <bool val="1" name="genericWidgetKeyframed-1"/>
     <int val="0" name="genericWidgetType-2"/>
     <int val="1" name="genericWidgetView-2"/>
     <string val="persistence" name="genericWidgetName-2"/>
     <bool val="1" name="genericWidgetKeyframed-2"/>
     <int val="1" name="genericWidgetType-3"/>
     <int val="1" name="genericWidgetView-3"/>
     <string val="nboctaves" name="genericWidgetName-3"/>
     <bool val="1" name="genericWidgetKeyframed-3"/>
     <int val="0" name="genericWidgetType-4"/>
     <int val="1" name="genericWidgetView-4"/>
     <string val="ZCoord" name="genericWidgetName-4"/>
     <bool val="1" name="genericWidgetKeyframed-4"/>
    </IOData>
    <IOData name="nodeWidget-5">
     <uint val="5" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="100" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="3.1" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="3.1" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0.5" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.5" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0.5" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.5" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool val="1" name="intAttribKeyframed"/>
      <int val="1" name="intAttribMinVal"/>
      <int val="10" name="intAttribMaxVal"/>
      <IOData name="intAttribCurve">
       <int val="4" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="4" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-5-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-5-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-6"/>
    <IOData name="node-6">
     <string val="../../../../../disc/projects/gratin-dev/trunk/build/data/objs/sphere.obj" name="filename"/>
     <IOData name="camera">
      <int val="0" name="projType"/>
      <int val="0" name="rotType"/>
      <vector2i name="viewport">
       <int val="512" name="0"/>
       <int val="512" name="1"/>
      </vector2i>
      <vector3f name="sceneCenter">
       <float val="-3.03085e-05" name="0"/>
       <float val="-0.000244021" name="1"/>
       <float val="-0.00847389" name="2"/>
      </vector3f>
      <float val="1.00847" name="sceneRadius"/>
      <float val="45" name="fovy"/>
      <vector3f name="shift">
       <float val="0" name="0"/>
       <float val="0" name="1"/>
       <float val="2.74504" name="2"/>
      </vector3f>
      <IOData name="trackball">
       <quaternionf name="rotation">
        <float val="-0.840105" name="0"/>
        <float val="-0.454373" name="1"/>
        <float val="-0.285821" name="2"/>
        <float val="-0.0779401" name="3"/>
       </quaternionf>
       <vector2f name="screenCenter">
        <float val="256" name="0"/>
        <float val="256" name="1"/>
       </vector2f>
       <float val="512" name="screenRadius"/>
      </IOData>
     </IOData>
     <string val="420" name="genericGlslVersion"/>
     <string val="AdvancedGBuffers" name="genericNodeName"/>
     <bool val="1" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="1" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec3 inVertex;&#xa;layout(location = 1) in vec3 inNormal;&#xa;layout(location = 2) in vec3 inTangent;&#xa;layout(location = 3) in vec2 inTexcoord;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;" name="genericVertHead"/>
     <string val="layout(location = 0) out vec3 vfNormal;&#xa;layout(location = 1) out vec3 vfTangent;&#xa;layout(location = 2) out vec2 vfTexcoord;&#xa;layout(location = 3) out float  vfDepthV;&#xa;layout(location = 4) out vec3 pos;&#xa;layout(location = 5) out float matID;&#xa;layout(location = 6) out vec3 wfNormal;&#xa;&#xa;void main() {&#xa;&#x9;mat4 mdv    = view*model;&#xa;&#x9;mat4 mvp    = proj*mdv;&#xa;&#xa;&#x9;pos = inVertex;&#xa;&#x9;vfNormal = (mdv*vec4(inNormal,0)).xyz;&#xa;&#x9;wfNormal = inNormal;&#xa;&#x9;vfTangent = (mdv*vec4(inTangent,0)).xyz;&#xa;&#x9;vfTexcoord = inTexcoord;&#xa;&#x9;vfDepthV = -(mdv*vec4(inVertex,1)).z;&#xa;&#xa;&#x9;gl_Position = mvp*vec4(inVertex,1);&#xa;&#x9;matID = float(objectID+1);&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 cameraParameters;&#xa;layout(location = 1) out vec4 normalVBuffer;&#xa;layout(location = 2) out vec4 normalWBuffer;&#xa;layout(location = 3) out vec4 tangentVBuffer;&#xa;layout(location = 4) out vec4 coordBuffer;&#xa;layout(location = 5) out vec4 positionsBuffer;&#xa;layout(location = 6) out vec4 depthBuffer;&#xa;layout(location = 7) out vec4 mask;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;" name="genericFragHead"/>
     <string val="layout(location = 0) in vec3 vfNormal;&#xa;layout(location = 1) in vec3 vfTangent;&#xa;layout(location = 2) in vec2 vfTexcoord;&#xa;layout(location = 3) in float vfDepthV;&#xa;layout(location = 4) in vec3 pos;&#xa;layout(location = 5) in float matID;&#xa;layout(location = 6) in vec3 wfNormal;&#xa;&#xa;void main() {&#xa;&#x9;vec3 n = normalize(vfNormal);&#xa;&#x9;vec3 t = normalize(vfTangent);&#xa;&#x9;vec2 uv = vfTexcoord;&#xa;&#x9;float d = vfDepthV;&#xa;&#xa;&#xa;&#x9;tangentVBuffer = vec4(t,1.0);&#xa;&#x9;coordBuffer = vec4(uv, 0.0, 1.0);&#xa;&#x9;normalVBuffer = vec4(n,1.);&#xa;&#x9;normalWBuffer = vec4(normalize(wfNormal),1.);&#xa;&#x9;cameraParameters = vec4(0.);&#xa;&#x9;positionsBuffer = vec4(pos,1);&#xa;&#x9;depthBuffer = vec4(d,d,d,1.);&#xa;&#x9;mask = vec4(vec3(objectID+1),1.0f);&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 3) out;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;" name="genericTessEHead"/>
     <string val="layout(triangles,equal_spacing,ccw) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = gl_TessCoord.x*gl_in[0].gl_Position;&#xa;&#x9;vec4 p2 = gl_TessCoord.y*gl_in[1].gl_Position;&#xa;&#x9;vec4 p3 = gl_TessCoord.z*gl_in[2].gl_Position;&#xa;&#x9;gl_Position = p1+p2+p3;&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}&#xa;" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="512" name="0"/>
      <float val="512" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="0" name="genericNbWidgets"/>
    </IOData>
    <IOData name="nodeWidget-6">
     <uint val="1" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="1" name="trackballCameraKeyframed"/>
      <IOData name="trackballCameraAttribCurveQ">
       <quaternionf name="currentVal">
        <float val="0.93525" name="0"/>
        <float val="0.0263108" name="1"/>
        <float val="-0.3151" name="2"/>
        <float val="0.159147" name="3"/>
       </quaternionf>
       <uint val="4" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="2" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="2" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.93525" name="1"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float val="299" name="0"/>
          <float val="0.907432" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="2" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="2" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.0263108" name="1"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float val="299" name="0"/>
          <float val="0.410565" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int val="2" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="2" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="-0.3151" name="1"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float val="299" name="0"/>
          <float val="-0.0188975" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-3">
        <int val="2" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="2" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.159147" name="1"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float val="299" name="0"/>
          <float val="0.0874456" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <IOData name="trackballCameraAttribCurveS">
       <vector3f name="currentVal">
        <float val="-0.116101" name="0"/>
        <float val="-0.0232203" name="1"/>
        <float val="4.95812" name="2"/>
       </vector3f>
       <uint val="3" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="2" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="-0.116101" name="1"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float val="299" name="0"/>
          <float val="-0.116101" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="2" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="-0.0232203" name="1"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float val="299" name="0"/>
          <float val="-0.0232203" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="2" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="4.95812" name="1"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float val="299" name="0"/>
          <float val="4.95812" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <int val="0" name="projection"/>
      <int val="0" name="rotation"/>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeOutputPos-6-0">
     <float val="56.32" name="0"/>
     <float val="4364.8" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-6-1">
     <float val="56.32" name="0"/>
     <float val="3745.28" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-6-2">
     <float val="56.32" name="0"/>
     <float val="3125.76" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-6-3">
     <float val="56.32" name="0"/>
     <float val="2506.24" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-6-4">
     <float val="56.32" name="0"/>
     <float val="1886.72" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-6-5">
     <float val="56.32" name="0"/>
     <float val="1267.2" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-6-6">
     <float val="56.32" name="0"/>
     <float val="647.68" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-6-7">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-7"/>
    <IOData name="node-7">
     <string val="410" name="genericGlslVersion"/>
     <string val="phongShading" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 410&#xa;&#xa;layout(location = 0) out vec4 shading;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;vec2 m = mouse/vec2(textureSize(normalMap,0))-vec2(.5);&#xa;&#x9;vec3 l = normalize(vec3(m,.5));&#xa;&#x9;vec3 n = texture(normalMap,texcoord).xyz;&#xa;&#xa;&#x9;// hack for computing the view direction&#xa;&#x9;// the true view could be obtained in &#xa;&#x9;// another buffer of a genericBuffer node&#xa;&#x9;vec3 v = normalize(vec3(texcoord*2.-1.,-30.));&#xa;&#xa;&#x9;float d = max(dot(n,l),0.);&#xa;&#x9;float s = pow(max(dot(reflect(l,n),v),0.),shininess);&#xa;&#xa;&#x9;shading.xyz = Ka + Kd*d + Ks*s;&#xa;&#x9;shading.w = length(n);&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 410&#xa;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="1" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="4" name="genericNbWidgets"/>
     <int val="4" name="genericWidgetType-0"/>
     <int val="2" name="genericWidgetView-0"/>
     <string val="Ka" name="genericWidgetName-0"/>
     <bool val="1" name="genericWidgetKeyframed-0"/>
     <int val="4" name="genericWidgetType-1"/>
     <int val="2" name="genericWidgetView-1"/>
     <string val="Kd" name="genericWidgetName-1"/>
     <bool val="1" name="genericWidgetKeyframed-1"/>
     <int val="4" name="genericWidgetType-2"/>
     <int val="2" name="genericWidgetView-2"/>
     <string val="Ks" name="genericWidgetName-2"/>
     <bool val="1" name="genericWidgetKeyframed-2"/>
     <int val="0" name="genericWidgetType-3"/>
     <int val="1" name="genericWidgetView-3"/>
     <string val="shininess" name="genericWidgetName-3"/>
     <bool val="1" name="genericWidgetKeyframed-3"/>
    </IOData>
    <IOData name="nodeWidget-7">
     <uint val="5" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="1" name="vector2iAttribKeyframed"/>
      <vector2i name="vector2iAttribMinVal">
       <int val="-10000" name="0"/>
       <int val="-10000" name="1"/>
      </vector2i>
      <vector2i name="vector2iAttribMaxVal">
       <int val="10000" name="0"/>
       <int val="10000" name="1"/>
      </vector2i>
      <IOData name="vector2iAttribCurve">
       <vector2i name="currentVal">
        <int val="110" name="0"/>
        <int val="424" name="1"/>
       </vector2i>
       <uint val="2" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="110" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="424" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool val="1" name="vector3fAttribKeyframed"/>
      <vector3f name="vector3fAttribMinVal">
       <float val="0" name="0"/>
       <float val="0" name="1"/>
       <float val="0" name="2"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float val="1" name="0"/>
       <float val="1" name="1"/>
       <float val="1" name="2"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float val="0.180392" name="0"/>
        <float val="0.203922" name="1"/>
        <float val="0.211765" name="2"/>
       </vector3f>
       <uint val="3" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.180392" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.203922" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.211765" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool val="1" name="vector3fAttribKeyframed"/>
      <vector3f name="vector3fAttribMinVal">
       <float val="0" name="0"/>
       <float val="0" name="1"/>
       <float val="0" name="2"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float val="1" name="0"/>
       <float val="1" name="1"/>
       <float val="1" name="2"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float val="0.678431" name="0"/>
        <float val="0.498039" name="1"/>
        <float val="0.658824" name="2"/>
       </vector3f>
       <uint val="3" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.678431" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.498039" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.658824" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool val="1" name="vector3fAttribKeyframed"/>
      <vector3f name="vector3fAttribMinVal">
       <float val="0" name="0"/>
       <float val="0" name="1"/>
       <float val="0" name="2"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float val="1" name="0"/>
       <float val="1" name="1"/>
       <float val="1" name="2"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float val="0.446662" name="0"/>
        <float val="0.292851" name="1"/>
        <float val="0.0327611" name="2"/>
       </vector3f>
       <uint val="3" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.446662" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.292851" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.0327611" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="1" name="floatAttribMinVal"/>
      <float val="1000" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="11.989" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="11.989" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-7-0">
     <float val="56.32" name="0"/>
     <float val="3745.28" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-7-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-8"/>
    <IOData name="node-8">
     <string val="420" name="genericGlslVersion"/>
     <string val="depthMasked" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord)*texture(inBuffer1,texcoord).x;&#xa;&#x9;//outBuffer0.a = texture(inBuffer1,texcoord).x;&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="0" name="genericNbWidgets"/>
    </IOData>
    <IOData name="nodeWidget-8">
     <uint val="0" name="nbChildren"/>
    </IOData>
    <vector2f name="nodeInputPos-8-0">
     <float val="56.32" name="0"/>
     <float val="647.68" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-8-1">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-8-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-9"/>
    <IOData name="node-9">
     <int val="0" name="processMode"/>
     <string val="410" name="genericGlslVersion"/>
     <string val="globalMaxMinDepth" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 410&#xa;&#xa;layout(location = 0) out vec4 maxMinDepth;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;if(isFinest)&#xa;&#x9;&#x9;maxMinDepth = texture(image,texcoord);&#xa;&#x9;else {&#xa;&#x9;&#x9;vec2 ps = .5/vec2(textureSize(prevLevel0,0));&#xa;&#x9;&#x9;&#xa;&#x9;&#x9;vec4 c[4];&#xa;&#x9;&#x9;c[0] = texture(prevLevel0,texcoord+ps);&#xa;&#x9;&#x9;c[1] = texture(prevLevel0,texcoord-ps);&#xa;&#x9;&#x9;c[2] = texture(prevLevel0,texcoord+vec2(ps.x,-ps.y));&#xa;&#x9;&#x9;c[3] = texture(prevLevel0,texcoord+vec2(-ps.x,ps.y));&#xa;&#xa;&#x9;&#x9;const float T = .9;&#xa;&#x9;&#x9;float cmin = 1e+10;&#xa;&#x9;&#x9;float cmax = 0.;&#xa;&#x9;&#x9;float alpha = 0.;&#xa;&#xa;&#x9;&#x9;for(int i=0;i&lt;4;++i) {&#xa;&#x9;&#x9;&#x9;if(c[i].a>T) {&#xa;&#x9;&#x9;&#x9;&#x9;cmin = min(cmin,c[i].y);&#xa;&#x9;&#x9;&#x9;&#x9;cmax = max(cmax,c[i].x);&#xa;&#x9;&#x9;&#x9;&#x9;alpha = c[i].a;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;&#x9;}&#xa;&#xa;&#x9;&#x9;maxMinDepth = vec4(cmax,cmin,0.,alpha);&#xa;&#x9;}&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 410&#xa;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="0" name="genericNbWidgets"/>
    </IOData>
    <IOData name="nodeWidget-9">
     <uint val="0" name="nbChildren"/>
    </IOData>
    <vector2f name="nodeInputPos-9-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-9-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-10"/>
    <IOData name="node-10">
     <string val="420" name="genericGlslVersion"/>
     <string val="normalizeDepth" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;vec2 s = textureSize(inBuffer0,0);&#xa;&#x9;float l = 1.+floor(log2(max(s.x,s.y)));&#xa;&#x9;vec4 dl = textureLod(inBuffer0,vec2(.5),l);&#xa;&#x9;vec4 d = texture(inBuffer0,texcoord);&#xa;&#xa;&#x9;float nd = (d.x-dl.y)/((dl.x-dl.y));&#xa;&#xa;&#x9;outBuffer0 = vec4(nd,nd,nd,d.w);&#xa;&#x9;if(d.w&lt;0.5) outBuffer0 = vec4(2,2,2,0.0);&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="0" name="genericNbWidgets"/>
    </IOData>
    <IOData name="nodeWidget-10">
     <uint val="0" name="nbChildren"/>
    </IOData>
    <vector2f name="nodeInputPos-10-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-10-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-11"/>
    <IOData name="node-11">
     <string val="420" name="genericGlslVersion"/>
     <string val="genericImgSprites" name="genericNodeName"/>
     <bool val="1" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="1" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="1" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionWMap;&#xa;uniform sampler2D normalWMap;&#xa;uniform sampler2D shadingMap;&#xa;uniform sampler2D depthMap;&#xa;uniform sampler2D noiseTex1;&#xa;uniform vec2 mouse;&#xa;uniform float test;&#xa;uniform int size;&#xa;" name="genericVertHead"/>
     <string val="&#xa;out vec2 texcoordCenter;&#xa;out vec4 positionWCenter;&#xa;out vec4 normalWCenter;&#xa;out vec4 shadingCenter;&#xa;out vec4 depthCenter;&#xa;out vec4 noiseCenter;&#xa;&#xa;out mat4 mvp; // modelviewproj matrix&#xa;&#xa;// LOAD MATRICES &#xa;vec4 m0 = &#x9;texelFetch(matrices, ivec2(0, 0), 0);&#xa;vec4 m1 = &#x9;texelFetch(matrices, ivec2(1, 0), 0);&#xa;vec4 m2 = &#x9;texelFetch(matrices, ivec2(2, 0), 0);&#xa;vec4 m3 = &#x9;texelFetch(matrices, ivec2(3, 0), 0);&#xa;&#xa;vec4 v0 = &#x9;texelFetch(matrices, ivec2(0, 1), 0);&#xa;vec4 v1 = &#x9;texelFetch(matrices, ivec2(1, 1), 0);&#xa;vec4 v2 = &#x9;texelFetch(matrices, ivec2(2, 1), 0);&#xa;vec4 v3 = &#x9;texelFetch(matrices, ivec2(3, 1), 0);&#xa;&#xa;vec4 p0 = &#x9;texelFetch(matrices, ivec2(0, 2), 0);&#xa;vec4 p1 = &#x9;texelFetch(matrices, ivec2(1, 2), 0);&#xa;vec4 p2 = &#x9;texelFetch(matrices, ivec2(2, 2), 0);&#xa;vec4 p3 = &#x9;texelFetch(matrices, ivec2(3, 2), 0);&#xa;&#xa;mat4 model = mat4(m0,m1,m2,m3);&#xa;mat4 view = mat4(v0,v1,v2,v3);&#xa;mat4 proj = mat4(p0,p1,p2,p3);&#xa;&#xa;float hash12(vec2 p) {&#xa;&#x9;return fract(sin(dot(p,vec2(12.9898,78.233)))*43758.5453123);&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 m = (mouse/textureSize(positionWMap,0))*2.-1.;&#xa;&#xa;&#x9;vec2 p = vertex;//m; // vertex for full image&#xa;&#x9;vec2 c = p*.5+.5; // texture coordinates &#xa;&#x9;mat4 projected = proj*view*model;&#xa;&#x9;vec4 posW = texture(positionWMap,c);&#xa;&#x9;vec4 nW = texture(normalWMap,c);&#xa;&#xa;&#x9;if(hash12(p)&lt;test) {&#xa;&#x9;&#x9;nW = vec4(0);&#xa;&#x9;}&#xa;&#xa;&#x9;// the z position of the splat should be the one of the (projected) object &#xa;&#x9;//gl_Position  = vec4(p,(projected*posW).z,length(nW.xyz));&#xa;&#x9;vec4 pP = projected*posW;&#xa;&#x9;gl_Position  = vec4(p.xy,pP.z/pP.w,length(nW.xyz));&#xa;&#x9;//gl_Position  = vec4(p.xy,0.,length(nW.xyz));&#xa;&#xa;&#x9;gl_PointSize = 20.0;&#xa;&#xa;&#x9;shadingCenter = texture(shadingMap,c);&#xa;&#x9;positionWCenter = posW;&#xa;&#x9;normalWCenter = nW;&#xa;&#x9;depthCenter = texture(depthMap,c);&#xa;&#x9;noiseCenter = texture(noiseTex1,c);&#xa;&#x9;texcoordCenter = c;&#xa;&#x9;mvp = projected;&#xa;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 rendering;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionWMap;&#xa;uniform sampler2D normalWMap;&#xa;uniform sampler2D shadingMap;&#xa;uniform sampler2D depthMap;&#xa;uniform sampler2D noiseTex1;&#xa;uniform vec2 mouse;&#xa;uniform float test;&#xa;uniform int size;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoordCenter;&#xa;in vec4 positionWCenter;&#xa;in vec4 normalWCenter;&#xa;in vec4 shadingCenter;&#xa;in vec4 depthCenter;&#xa;in vec4 noiseCenter;&#xa;&#xa;in mat4 mvp;&#xa;&#xa;vec2 ts = textureSize(positionWMap,0);&#xa;&#xa;float W(float d,float s) {&#xa;&#x9;// simple gaussian for the weight&#xa;&#x9;return exp(-(d*d)/(2.*s*s));&#xa;}&#xa;&#xa;void main() {&#x9;&#xa;&#x9;vec4 col = vec4(0.);&#xa;&#x9;vec3 pW = positionWCenter.xyz;&#xa;&#x9;vec3 nW = normalWCenter.xyz;&#xa;&#x9;vec2 fc = gl_FragCoord.xy; // current pixel coordinate&#xa;&#xa;&#x9;float sig = 1.; // sigma for distance to the curve&#xa;&#x9;float vs = 0.005; // the volumetric step&#xa;&#x9;float d = 1e+10;&#xa;&#xa;&#x9;// ideally, we should make sure that we never go beyond the size of the square...&#xa;&#x9;int ss = int(float(size)*noiseCenter.x); &#xa;&#x9;for(int i=0;i&lt;=ss;++i) {&#xa;&#x9;&#x9;vec4 pW = vec4(pW+float(i)*nW*vs,1.); // modified pos in world space&#xa;&#x9;&#x9;vec4 pP = mvp*pW; // position in clip space &#xa;&#x9;&#x9;vec2 pS = .5*((pP.xy/pP.w)+1.)*ts; // normalized position in screen space&#xa;&#xa;&#x9;&#x9;vec4 c = vec4(shadingCenter.xyz*noiseCenter.x,1.);&#xa;&#x9;&#x9;//c = mix(vec4(shadingCenter.xyz,1),vec4(1,0,0,1),1.-noiseCenter.x);&#xa;&#xa;&#x9;&#x9;float dt = distance(pS,fc);&#xa;&#x9;&#x9;&#xa;&#x9;&#x9;//float w = W(d,sig*(1.-float(i)/float(ss+ss)));&#xa;&#x9;&#x9;//col += w*c;&#xa;&#xa;&#x9;&#x9;if(dt&lt;d) {&#xa;&#x9;&#x9;&#x9;float w = W(d,sig*(1.-float(i)/float(ss+ss)));&#xa;&#x9;&#x9;&#x9;col = w*c;&#xa;&#x9;&#x9;&#x9;d = dt;&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;//vec2 c = vec2(gl_PointCoord.x,1.-gl_PointCoord.y); // position in splat space &#xa;&#x9;vec4 fcol = clamp(col,vec4(0.),vec4(1.));&#xa;&#xa;&#x9;float ww = 10*(1.-depthCenter.x);&#xa;&#x9;//fcol.w *= noiseCenter.x;&#xa;&#x9;rendering = fcol;//+fcol*ww;///float(size);&#xa;&#xa;&#x9;//rendering = t;//vec4(gl_FragCoord.xy/ts,0,1);&#xa;&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 1) out;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionWMap;&#xa;uniform sampler2D normalWMap;&#xa;uniform sampler2D shadingMap;&#xa;uniform sampler2D depthMap;&#xa;uniform sampler2D noiseTex1;&#xa;uniform vec2 mouse;&#xa;uniform float test;&#xa;uniform int size;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionWMap;&#xa;uniform sampler2D normalWMap;&#xa;uniform sampler2D shadingMap;&#xa;uniform sampler2D depthMap;&#xa;uniform sampler2D noiseTex1;&#xa;uniform vec2 mouse;&#xa;uniform float test;&#xa;uniform int size;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position;&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(points) in;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionWMap;&#xa;uniform sampler2D normalWMap;&#xa;uniform sampler2D shadingMap;&#xa;uniform sampler2D depthMap;&#xa;uniform sampler2D noiseTex1;&#xa;uniform vec2 mouse;&#xa;uniform float test;&#xa;uniform int size;&#xa;" name="genericGeomHead"/>
     <string val="layout(points, max_vertices = 1) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position;&#xa;&#x9;EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="1" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="2" name="genericNbWidgets"/>
     <int val="1" name="genericWidgetType-0"/>
     <int val="1" name="genericWidgetView-0"/>
     <string val="size" name="genericWidgetName-0"/>
     <bool val="0" name="genericWidgetKeyframed-0"/>
     <int val="0" name="genericWidgetType-1"/>
     <int val="1" name="genericWidgetView-1"/>
     <string val="test" name="genericWidgetName-1"/>
     <bool val="0" name="genericWidgetKeyframed-1"/>
    </IOData>
    <IOData name="nodeWidget-11">
     <uint val="3" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="1" name="vector2iAttribKeyframed"/>
      <vector2i name="vector2iAttribMinVal">
       <int val="-10000" name="0"/>
       <int val="-10000" name="1"/>
      </vector2i>
      <vector2i name="vector2iAttribMaxVal">
       <int val="10000" name="0"/>
       <int val="10000" name="1"/>
      </vector2i>
      <IOData name="vector2iAttribCurve">
       <vector2i name="currentVal">
        <int val="0" name="0"/>
        <int val="0" name="1"/>
       </vector2i>
       <uint val="2" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool val="0" name="intAttribKeyframed"/>
      <int val="0" name="intAttribMinVal"/>
      <int val="100" name="intAttribMaxVal"/>
      <IOData name="intAttribCurve">
       <int val="22" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="22" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool val="0" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-11-0">
     <float val="56.32" name="0"/>
     <float val="4364.8" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-11-1">
     <float val="56.32" name="0"/>
     <float val="1267.2" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-11-2">
     <float val="56.32" name="0"/>
     <float val="3125.76" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-11-3">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-11-4">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-11-5">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-11-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-12"/>
    <IOData name="node-12">
     <string val="410" name="genericGlslVersion"/>
     <string val="mixColors" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D img01;&#xa;uniform sampler2D img02;&#xa;uniform float alpha;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 410&#xa;&#xa;layout(location = 0) out vec4 image;&#xa;uniform sampler2D img01;&#xa;uniform sampler2D img02;&#xa;uniform float alpha;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;vec4 col1 = texture(img01,texcoord);&#xa;&#x9;vec4 col2 = texture(img02,texcoord);&#xa;&#x9;image = mix(col1,col2,col2.a);&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D img01;&#xa;uniform sampler2D img02;&#xa;uniform float alpha;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 410&#xa;&#xa;uniform sampler2D img01;&#xa;uniform sampler2D img02;&#xa;uniform float alpha;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D img01;&#xa;uniform sampler2D img02;&#xa;uniform float alpha;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="1" name="genericNbWidgets"/>
     <int val="0" name="genericWidgetType-0"/>
     <int val="1" name="genericWidgetView-0"/>
     <string val="alpha" name="genericWidgetName-0"/>
     <bool val="1" name="genericWidgetKeyframed-0"/>
    </IOData>
    <IOData name="nodeWidget-12">
     <uint val="1" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0.5" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.5" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-12-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-12-1">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-12-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-13"/>
    <IOData name="node-13">
     <string val="420" name="genericGlslVersion"/>
     <string val="genericImage" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 d = texture(inBuffer0,texcoord);&#xa;&#xa;&#x9;if(d.w>1.)&#xa;&#x9;&#x9;d = d/d.w;&#xa;&#xa;&#x9;//d = d/20.;&#xa;&#x9;outBuffer0 = d;&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="0" name="genericNbWidgets"/>
    </IOData>
    <IOData name="nodeWidget-13">
     <uint val="0" name="nbChildren"/>
    </IOData>
    <vector2f name="nodeInputPos-13-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-13-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-14"/>
    <IOData name="node-14">
     <string val="410" name="genericGlslVersion"/>
     <string val="3DGradientNoise" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 410&#xa;&#xa;layout(location = 0) out vec4 proceduralTex;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;&#xa;vec3 hash33(vec3 p) {&#xa;&#x9;vec3 q = vec3(&#x9;dot(p,vec3(127.1,311.7,74.7)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(269.5,183.3,246.1)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(113.5,271.9,124.6)));&#xa;&#x9;return fract(sin(q)*43758.5453123)*2.-1.;&#xa;}&#xa;&#xa;float gnoise(in vec3 x) {&#xa;&#x9;vec3 p = floor(x);&#xa;&#x9;vec3 f = fract(x);&#xa;    vec3 m = f*f*(3.-2.*f);&#xa;&#xa;&#x9;return mix(&#xa;&#x9;&#x9;&#x9;&#x9;mix(mix(dot(hash33(p+vec3(0.,0.,0.)),f-vec3(0.,0.,0.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,0.,0.)),f-vec3(1.,0.,0.)),m.x),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;  mix(dot(hash33(p+vec3(0.,1.,0.)),f-vec3(0.,1.,0.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,1.,0.)),f-vec3(1.,1.,0.)),m.x),m.y),&#xa;&#x9;&#x9;&#x9;&#x9;mix(mix(dot(hash33(p+vec3(0.,0.,1.)),f-vec3(0.,0.,1.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,0.,1.)),f-vec3(1.,0.,1.)),m.x),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;  mix(dot(hash33(p+vec3(0.,1.,1.)),f-vec3(0.,1.,1.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,1.,1.)),f-vec3(1.,1.,1.)),m.x),m.y),m.z)*.5+.5;&#xa;}&#xa;&#xa;float fnoise(in vec3 p,in float amplitude,in float frequency,in float persistence, in int nboctaves) {&#xa;&#x9;float a = amplitude;&#xa;&#x9;float f = frequency;&#xa;&#x9;float n = 0.0;&#xa;&#xa;&#x9;for(int i=0;i&lt;nboctaves;++i) {&#xa;&#x9;&#x9;n = n+a*gnoise(p*f);&#xa;&#x9;&#x9;f = f*2.;&#xa;&#x9;&#x9;a = a*persistence;&#xa;&#x9;}&#xa;&#x9;&#xa;&#x9;return n;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 ps = .5*(1./textureSize(inBuffer0,0).xy); // half pixel size &#xa;&#x9;vec2 psStep  = ps/float(nbSamples+1);&#xa;&#x9;float n1 = 0.;&#xa;&#x9;float n2 = 0.;&#xa;&#x9;float nb = 0.;&#xa;&#x9;float a = 0.;&#xa;&#x9;vec3 offset = vec3(10.);&#xa;&#x9;for(int i=-nbSamples;i&lt;=nbSamples;++i) {&#xa;&#x9;&#x9;&#x9;for(int j=-nbSamples;j&lt;=nbSamples;++j) {&#xa;&#x9;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*psStep;&#xa;&#x9;&#x9;&#x9;&#x9;vec4 data = texture(inBuffer0,coord);&#xa;&#x9;&#x9;&#x9;&#x9;n1 += smoothstep(0.5-style,0.5+style,fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves));&#xa;&#x9;&#x9;&#x9;&#x9;n2 += smoothstep(0.5-style,0.5+style,fnoise((data.xyz+offset)*frequency,amplitude,frequency,persistence,nboctaves));&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;a += data.w;&#xa;&#x9;&#x9;&#x9;&#x9;nb += 1.;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;proceduralTex =  vec4(vec3(n1/nb,n2/nb,0.),a/nb);&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 410&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="512" name="0"/>
      <float val="512" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="7" name="genericNbWidgets"/>
     <int val="0" name="genericWidgetType-0"/>
     <int val="1" name="genericWidgetView-0"/>
     <string val="frequency" name="genericWidgetName-0"/>
     <bool val="1" name="genericWidgetKeyframed-0"/>
     <int val="0" name="genericWidgetType-1"/>
     <int val="1" name="genericWidgetView-1"/>
     <string val="amplitude" name="genericWidgetName-1"/>
     <bool val="1" name="genericWidgetKeyframed-1"/>
     <int val="0" name="genericWidgetType-2"/>
     <int val="1" name="genericWidgetView-2"/>
     <string val="persistence" name="genericWidgetName-2"/>
     <bool val="1" name="genericWidgetKeyframed-2"/>
     <int val="1" name="genericWidgetType-3"/>
     <int val="1" name="genericWidgetView-3"/>
     <string val="nboctaves" name="genericWidgetName-3"/>
     <bool val="1" name="genericWidgetKeyframed-3"/>
     <int val="0" name="genericWidgetType-4"/>
     <int val="1" name="genericWidgetView-4"/>
     <string val="ZCoord" name="genericWidgetName-4"/>
     <bool val="1" name="genericWidgetKeyframed-4"/>
     <int val="1" name="genericWidgetType-5"/>
     <int val="1" name="genericWidgetView-5"/>
     <string val="nbSamples" name="genericWidgetName-5"/>
     <bool val="0" name="genericWidgetKeyframed-5"/>
     <int val="0" name="genericWidgetType-6"/>
     <int val="1" name="genericWidgetView-6"/>
     <string val="style" name="genericWidgetName-6"/>
     <bool val="0" name="genericWidgetKeyframed-6"/>
    </IOData>
    <IOData name="nodeWidget-14">
     <uint val="7" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="100" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="9.4" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="9.4" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="1" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="1" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0.5" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.5" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool val="1" name="intAttribKeyframed"/>
      <int val="1" name="intAttribMinVal"/>
      <int val="10" name="intAttribMaxVal"/>
      <IOData name="intAttribCurve">
       <int val="1" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="1" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-5">
      <bool val="0" name="intAttribKeyframed"/>
      <int val="0" name="intAttribMinVal"/>
      <int val="10" name="intAttribMaxVal"/>
      <IOData name="intAttribCurve">
       <int val="4" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="4" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-6">
      <bool val="0" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-14-0">
     <float val="56.32" name="0"/>
     <float val="1267.2" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-14-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-15"/>
    <IOData name="node-15">
     <string val="420" name="genericGlslVersion"/>
     <string val="genericImgSprites" name="genericNodeName"/>
     <bool val="1" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="1" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="1" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionWMap;&#xa;uniform sampler2D normalWMap;&#xa;uniform sampler2D shadingMap;&#xa;uniform sampler2D depthMap;&#xa;uniform sampler2D noiseTex1;&#xa;uniform vec2 mouse;&#xa;uniform float test;&#xa;uniform int size;&#xa;" name="genericVertHead"/>
     <string val="#define TESTc&#xa;&#xa;out vec2 texcoordCenter;&#xa;out vec4 positionWCenter;&#xa;out vec4 normalWCenter;&#xa;out vec4 shadingCenter;&#xa;out vec4 depthCenter;&#xa;out vec4 noiseCenter;&#xa;&#xa;out mat4 mvp; // modelviewproj matrix&#xa;out mat4 mvpInv; &#xa;&#xa;out mat3 normalMat;&#xa;out mat3 normalMatInv;&#xa;&#xa;// LOAD MATRICES &#xa;vec4 m0 = &#x9;texelFetch(matrices, ivec2(0, 0), 0);&#xa;vec4 m1 = &#x9;texelFetch(matrices, ivec2(1, 0), 0);&#xa;vec4 m2 = &#x9;texelFetch(matrices, ivec2(2, 0), 0);&#xa;vec4 m3 = &#x9;texelFetch(matrices, ivec2(3, 0), 0);&#xa;&#xa;vec4 v0 = &#x9;texelFetch(matrices, ivec2(0, 1), 0);&#xa;vec4 v1 = &#x9;texelFetch(matrices, ivec2(1, 1), 0);&#xa;vec4 v2 = &#x9;texelFetch(matrices, ivec2(2, 1), 0);&#xa;vec4 v3 = &#x9;texelFetch(matrices, ivec2(3, 1), 0);&#xa;&#xa;vec4 p0 = &#x9;texelFetch(matrices, ivec2(0, 2), 0);&#xa;vec4 p1 = &#x9;texelFetch(matrices, ivec2(1, 2), 0);&#xa;vec4 p2 = &#x9;texelFetch(matrices, ivec2(2, 2), 0);&#xa;vec4 p3 = &#x9;texelFetch(matrices, ivec2(3, 2), 0);&#xa;&#xa;mat4 model = mat4(m0,m1,m2,m3);&#xa;mat4 view = mat4(v0,v1,v2,v3);&#xa;mat4 proj = mat4(p0,p1,p2,p3);&#xa;&#xa;float hash12(vec2 p) {&#xa;&#x9;return fract(sin(dot(p,vec2(12.9898,78.233)))*43758.5453123);&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 m = (mouse/textureSize(positionWMap,0))*2.-1.;&#xa;&#xa;#ifdef TEST &#xa;&#x9;vec2 p = m;&#xa;#else &#xa;&#x9;vec2 p = vertex;&#xa;#endif&#xa;&#xa;&#x9;vec2 c = p*.5+.5; // texture coordinates &#xa;&#x9;mat4 projected = proj*view*model;&#xa;&#x9;vec4 posW = texture(positionWMap,c);&#xa;&#x9;vec4 nW = texture(normalWMap,c);&#xa;&#xa;&#x9;if(hash12(p)&lt;test) {&#xa;&#x9;&#x9;nW = vec4(0);&#xa;&#x9;}&#xa;&#xa;#ifdef TEST&#xa;&#x9;float l = distance(m,vertex) &lt; 0.1 ? 1. : 0.;&#xa;#else &#xa;&#x9;float l = 1.;&#xa;#endif&#xa;&#x9;vec4 nC = texture(noiseTex1,c);&#xa;&#x9;if(nC.y&lt;0.8) l = 0.;&#xa;//nC.x = (nC.x-0.8)*5.;&#xa;&#x9;// the z position of the splat should be the one of the (projected) object &#xa;&#x9;//gl_Position  = vec4(p,(projected*posW).z,length(nW.xyz));&#xa;&#x9;vec4 pP = projected*posW;&#xa;&#x9;gl_Position  = vec4(p.xy,pP.z/pP.w,length(nW.xyz)*l);&#xa;&#x9;//gl_Position  = vec4(p.xy,0.,length(nW.xyz));&#xa;&#xa;&#x9;gl_PointSize = 11.0;&#xa;&#xa;&#x9;shadingCenter = texture(shadingMap,c);&#xa;&#x9;positionWCenter = posW;&#xa;&#x9;normalWCenter = nW;&#xa;&#x9;depthCenter = texture(depthMap,c);&#xa;&#x9;noiseCenter = nC;&#xa;&#x9;texcoordCenter = c;&#xa;&#x9;mvp = projected;&#xa;&#x9;mvpInv = inverse(projected);&#xa;&#x9;normalMat = transpose(inverse(mat3(view*model)));&#xa;&#x9;normalMatInv = inverse(normalMat);&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 rendering;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionWMap;&#xa;uniform sampler2D normalWMap;&#xa;uniform sampler2D shadingMap;&#xa;uniform sampler2D depthMap;&#xa;uniform sampler2D noiseTex1;&#xa;uniform vec2 mouse;&#xa;uniform float test;&#xa;uniform int size;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoordCenter;&#xa;in vec4 positionWCenter;&#xa;in vec4 normalWCenter;&#xa;in vec4 shadingCenter;&#xa;in vec4 depthCenter;&#xa;in vec4 noiseCenter;&#xa;&#xa;in mat4 mvp;&#xa;in mat4 mvpInv; &#xa;&#xa;in mat3 normalMat;&#xa;in mat3 normalMatInv;&#xa;&#xa;#define TESTc&#xa;#define PI 3.1415926535898&#xa;&#xa;vec2 ts = textureSize(positionWMap,0);&#xa;&#xa;vec3 hash33(vec3 p) {&#xa;&#x9;vec3 q = vec3(&#x9;dot(p,vec3(127.1,311.7,74.7)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(269.5,183.3,246.1)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(113.5,271.9,124.6)));&#xa;&#x9;return fract(sin(q)*43758.5453123)*2.-1.;&#xa;}&#xa;&#xa;float gnoise(in vec3 x) {&#xa;&#x9;vec3 p = floor(x);&#xa;&#x9;vec3 f = fract(x);&#xa;    vec3 m = f*f*(3.-2.*f);&#xa;&#xa;&#x9;return mix(&#xa;&#x9;&#x9;&#x9;&#x9;mix(mix(dot(hash33(p+vec3(0.,0.,0.)),f-vec3(0.,0.,0.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,0.,0.)),f-vec3(1.,0.,0.)),m.x),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;  mix(dot(hash33(p+vec3(0.,1.,0.)),f-vec3(0.,1.,0.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,1.,0.)),f-vec3(1.,1.,0.)),m.x),m.y),&#xa;&#x9;&#x9;&#x9;&#x9;mix(mix(dot(hash33(p+vec3(0.,0.,1.)),f-vec3(0.,0.,1.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,0.,1.)),f-vec3(1.,0.,1.)),m.x),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;  mix(dot(hash33(p+vec3(0.,1.,1.)),f-vec3(0.,1.,1.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,1.,1.)),f-vec3(1.,1.,1.)),m.x),m.y),m.z)*.5+.5;&#xa;}&#xa;&#xa;&#xa;vec3 modifDirection(in vec3 nV,in float i,in float size) {&#xa;&#x9;vec3 n = nV;&#xa;&#x9;n.y -= i/size;&#x9;&#xa;&#x9;return normalize(n);&#xa;}&#xa;&#xa;&#xa;float W(float d,float s) {&#xa;&#x9;// simple gaussian for the weight&#xa;&#x9;return exp(-(d*d)/(2.*s*s));&#xa;}&#xa;&#xa;void main() {&#x9;&#xa;&#x9;vec2 splatCoord = gl_PointCoord.xy;&#xa;&#x9;vec2 centeredSplatCoord = gl_PointCoord.xy-0.5;&#xa;&#xa;&#x9;if(length(centeredSplatCoord)>0.5) discard;&#xa;&#x9;&#xa;#ifdef TEST &#xa;&#x9;if(length(centeredSplatCoord)>0.48) {&#xa;&#x9;&#x9;rendering = vec4(1,0,0,1);&#xa;&#x9;&#x9;return;&#xa;&#x9;}&#xa;#endif&#xa;&#xa;&#x9;vec4 col = vec4(vec3(0.),1.);&#xa;&#x9;vec3 pW = positionWCenter.xyz;&#xa;&#x9;vec3 nW = normalWCenter.xyz;&#xa;&#x9;vec2 fc = gl_FragCoord.xy; // current pixel coordinate&#xa;&#xa;&#x9;float sig = 1.2; // sigma for distance to the curve&#xa;&#x9;float vs = 0.005; // the volumetric step&#xa;&#x9;float d = 1e+10;&#xa;&#xa;&#x9;// ideally, we should make sure that we never go beyond the size of the square...&#xa;&#x9;int ss = size;//int(float(size)*noiseCenter.x); &#xa;&#x9;float s = 0.;&#xa;&#xa;&#x9;for(int i=0;i&lt;=ss;++i) {&#xa;&#x9;&#x9;vec3 nV = normalMat*nW;&#xa;&#x9;&#x9;nV = modifDirection(nV,float(i),float(ss));&#xa;&#x9;&#x9;vec3 nWN = normalMatInv*nV;&#xa;&#xa;&#x9;&#x9;vec4 pW = vec4(pW+float(i)*nWN*vs,1.); // modified pos in world space&#xa;&#x9;&#x9;vec4 pP = mvp*pW; // position in clip space &#xa;&#x9;&#x9;vec2 pS = .5*((pP.xy/pP.w)+1.)*ts; // normalized position in screen space&#xa;&#xa;&#x9;&#x9;float dt = distance(pS,fc);&#xa;&#x9;&#x9;if(dt&lt;d) {&#xa;&#x9;&#x9;&#x9;s = 1.-float(i)/float(ss+ss/1.5);&#xa;&#x9;&#x9;&#x9;d = dt;&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;float w = W(d,sig*s);&#xa;&#x9;vec4 c = vec4(shadingCenter.xyz+vec3(noiseCenter.x),1.);&#xa;&#xa;&#x9;rendering = vec4(c.xyz*w,w);&#xa;&#xa;&#x9;//vec2 c = vec2(gl_PointCoord.x,1.-gl_PointCoord.y); // position in splat space &#xa;&#x9;//vec4 fcol = clamp(col,vec4(0.),vec4(1.));&#xa;&#x9;//float ww = 10*(1.-depthCenter.x);&#xa;&#x9;//fcol.w *= noiseCenter.x;&#xa;&#x9;//rendering = fcol;//+fcol*ww;///float(size);&#xa;&#x9;//rendering = vec4(vec3(W(d,sig*s)),1);&#xa;&#x9;//rendering = t;//vec4(gl_FragCoord.xy/ts,0,1);&#xa;&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 1) out;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionWMap;&#xa;uniform sampler2D normalWMap;&#xa;uniform sampler2D shadingMap;&#xa;uniform sampler2D depthMap;&#xa;uniform sampler2D noiseTex1;&#xa;uniform vec2 mouse;&#xa;uniform float test;&#xa;uniform int size;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionWMap;&#xa;uniform sampler2D normalWMap;&#xa;uniform sampler2D shadingMap;&#xa;uniform sampler2D depthMap;&#xa;uniform sampler2D noiseTex1;&#xa;uniform vec2 mouse;&#xa;uniform float test;&#xa;uniform int size;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position;&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(points) in;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionWMap;&#xa;uniform sampler2D normalWMap;&#xa;uniform sampler2D shadingMap;&#xa;uniform sampler2D depthMap;&#xa;uniform sampler2D noiseTex1;&#xa;uniform vec2 mouse;&#xa;uniform float test;&#xa;uniform int size;&#xa;" name="genericGeomHead"/>
     <string val="layout(points, max_vertices = 1) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position;&#xa;&#x9;EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="1" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="2" name="genericNbWidgets"/>
     <int val="1" name="genericWidgetType-0"/>
     <int val="1" name="genericWidgetView-0"/>
     <string val="size" name="genericWidgetName-0"/>
     <bool val="0" name="genericWidgetKeyframed-0"/>
     <int val="0" name="genericWidgetType-1"/>
     <int val="1" name="genericWidgetView-1"/>
     <string val="test" name="genericWidgetName-1"/>
     <bool val="0" name="genericWidgetKeyframed-1"/>
    </IOData>
    <IOData name="nodeWidget-15">
     <uint val="3" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="1" name="vector2iAttribKeyframed"/>
      <vector2i name="vector2iAttribMinVal">
       <int val="-10000" name="0"/>
       <int val="-10000" name="1"/>
      </vector2i>
      <vector2i name="vector2iAttribMaxVal">
       <int val="10000" name="0"/>
       <int val="10000" name="1"/>
      </vector2i>
      <IOData name="vector2iAttribCurve">
       <vector2i name="currentVal">
        <int val="0" name="0"/>
        <int val="0" name="1"/>
       </vector2i>
       <uint val="2" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool val="0" name="intAttribKeyframed"/>
      <int val="0" name="intAttribMinVal"/>
      <int val="100" name="intAttribMaxVal"/>
      <IOData name="intAttribCurve">
       <int val="22" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="22" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool val="0" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-15-0">
     <float val="56.32" name="0"/>
     <float val="4364.8" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-15-1">
     <float val="56.32" name="0"/>
     <float val="1267.2" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-15-2">
     <float val="56.32" name="0"/>
     <float val="3125.76" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-15-3">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-15-4">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-15-5">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-15-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-16"/>
    <IOData name="node-16">
     <string val="420" name="genericGlslVersion"/>
     <string val="genericImage" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 d = texture(inBuffer0,texcoord);&#xa;&#xa;&#x9;if(d.w>1.)&#xa;&#x9;&#x9;d = d/d.w;&#xa;&#xa;&#x9;d.xyz /= 1.5;&#xa;&#x9;//d = d/2.;&#xa;&#x9;outBuffer0 = d;&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="0" name="genericNbWidgets"/>
    </IOData>
    <IOData name="nodeWidget-16">
     <uint val="0" name="nbChildren"/>
    </IOData>
    <vector2f name="nodeInputPos-16-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-16-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-17"/>
    <IOData name="node-17">
     <string val="420" name="genericGlslVersion"/>
     <string val="genericImage" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 d1 = texture(inBuffer0,texcoord);&#xa;&#x9;vec4 d2 = texture(inBuffer1,texcoord);&#xa;&#xa;&#x9;outBuffer0 = d2 + (1.-d2.a)*d1;&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="0" name="genericNbWidgets"/>
    </IOData>
    <IOData name="nodeWidget-17">
     <uint val="0" name="nbChildren"/>
    </IOData>
    <vector2f name="nodeInputPos-17-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-17-1">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-17-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-18"/>
    <IOData name="node-18"/>
    <IOData name="nodeWidget-18">
     <uint val="2" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="1" name="intAttribKeyframed"/>
      <int val="1" name="intAttribMinVal"/>
      <int val="100" name="intAttribMaxVal"/>
      <IOData name="intAttribCurve">
       <int val="40" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="40" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool val="1" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0.83" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.83" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-18-0">
     <float val="56.32" name="0"/>
     <float val="4364.8" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-18-1">
     <float val="56.32" name="0"/>
     <float val="1267.2" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-18-2">
     <float val="56.32" name="0"/>
     <float val="3125.76" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-18-3">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-18-4">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-18-5">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-18-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-19"/>
    <IOData name="node-19">
     <string val="420" name="genericGlslVersion"/>
     <string val="offsetVector" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D ndTex;&#xa;uniform float sig;&#xa;uniform int halfsize;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 res;&#xa;uniform sampler2D ndTex;&#xa;uniform float sig;&#xa;uniform int halfsize;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;const float eps = 1e-10;&#xa;const float sigmin = 0.001;&#xa;&#xa;vec2 ps = 1./textureSize(ndTex,0);&#xa;int hs = abs(halfsize);&#xa;float sigma = max(sig,sigmin);&#xa;&#xa;float gauss(in float v, in float s) {&#xa;&#x9;return exp(-.5*((v*v)/(s*s)));&#xa;}&#xa;&#xa;vec2 getDisplacedVector02() {&#xa;&#x9;vec2 cDisp = vec2(0.); // displacement vector &#xa;&#x9;float cDist = 1e+10; // current dist (max)&#xa;&#x9;float sum = 0.;&#xa;&#xa;&#x9;for(int i=-hs;i&lt;=hs;++i) {&#xa;&#x9;&#x9;for(int j=-hs;j&lt;=hs;++j) {&#xa;&#x9;&#x9;&#x9;vec2 o = vec2(float(i),float(j));&#xa;&#x9;&#x9;&#x9;if(length(o)>hs) continue;&#xa;&#xa;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*ps;&#xa;&#x9;&#x9;&#x9;vec4 data = texture(ndTex,coord);&#xa;&#x9;&#xa;&#x9;&#x9;&#x9;if(length(data.xyz)&lt;0.5) continue;&#xa;&#xa;&#x9;&#x9;&#x9;vec2 tDisp = data.xy*hs*ps;&#xa;&#x9;&#x9;&#x9;float tDist = gauss(distance(texcoord,coord+tDisp),sigma);&#xa;&#x9;&#x9;&#x9;sum += tDist;&#xa;&#x9;&#x9;&#x9;cDisp += tDisp*tDist;&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;return sum&lt;eps ? vec2(0.) : -(cDisp/sum)*sign(halfsize);&#xa;}&#xa;&#xa;vec2 getDisplacedVector01() {&#xa;&#x9;vec2 cDisp = vec2(0.); // displacement vector &#xa;&#x9;float cDist = 1e+10; // current dist (max)&#xa;&#xa;&#x9;for(int i=-hs;i&lt;=hs;++i) {&#xa;&#x9;&#x9;for(int j=-hs;j&lt;=hs;++j) {&#xa;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*ps;&#xa;&#x9;&#x9;&#x9;vec4 data = texture(ndTex,coord);&#xa;&#x9;&#xa;&#x9;&#x9;&#x9;if(length(data.xyz)&lt;0.5) continue;&#xa;&#xa;&#x9;&#x9;&#x9;vec2 tDisp = data.xy*hs*ps;&#xa;&#x9;&#x9;&#x9;float tDist = distance(texcoord,coord+tDisp);&#xa;&#xa;&#x9;&#x9;&#x9;if(tDist&lt;cDist) {&#xa;&#x9;&#x9;&#x9;&#x9;cDist = tDist;&#xa;&#x9;&#x9;&#x9;&#x9;cDisp = tDisp;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;return -cDisp*sign(halfsize);&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 c = getDisplacedVector02();&#xa;&#xa;&#x9;res = vec4(c,0.,float(hs));&#xa;&#x9;//res = texture(otherTex,texcoord+c);&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D ndTex;&#xa;uniform float sig;&#xa;uniform int halfsize;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform sampler2D ndTex;&#xa;uniform float sig;&#xa;uniform int halfsize;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D ndTex;&#xa;uniform float sig;&#xa;uniform int halfsize;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="2" name="genericNbWidgets"/>
     <int val="1" name="genericWidgetType-0"/>
     <int val="1" name="genericWidgetView-0"/>
     <string val="halfsize" name="genericWidgetName-0"/>
     <bool val="0" name="genericWidgetKeyframed-0"/>
     <int val="0" name="genericWidgetType-1"/>
     <int val="1" name="genericWidgetView-1"/>
     <string val="sig" name="genericWidgetName-1"/>
     <bool val="0" name="genericWidgetKeyframed-1"/>
    </IOData>
    <IOData name="nodeWidget-19">
     <uint val="2" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="0" name="intAttribKeyframed"/>
      <int val="-100" name="intAttribMinVal"/>
      <int val="100" name="intAttribMaxVal"/>
      <IOData name="intAttribCurve">
       <int val="47" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="47" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool val="0" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0.027" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.027" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-19-0">
     <float val="56.32" name="0"/>
     <float val="3745.28" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-19-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-20"/>
    <IOData name="node-20">
     <string val="420" name="genericGlslVersion"/>
     <string val="softWeightedKmeans" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D ndTex;&#xa;uniform vec2 mouse;&#xa;uniform float sig;&#xa;uniform float stif;&#xa;uniform int halfsize;&#xa;uniform int iter;&#xa;uniform int optInit;&#xa;uniform int optSeg;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 res;&#xa;layout(location = 1) out vec4 zoomedData;&#xa;layout(location = 2) out vec4 zoomedSeg;&#xa;uniform sampler2D ndTex;&#xa;uniform vec2 mouse;&#xa;uniform float sig;&#xa;uniform float stif;&#xa;uniform int halfsize;&#xa;uniform int iter;&#xa;uniform int optInit;&#xa;uniform int optSeg;&#xa;" name="genericFragHead"/>
     <string val="// soft kmeans clustering &#xa;// see https://www.researchgate.net/publication/283327156_Lecture_Notes_on_Data_Science_Soft_k-Means_Clustering for details &#xa;&#xa;// perform a soft weighted kmeans clustering with n.x, n.y, depth and mask as input &#xa;&#xa;&#xa;in vec2 texcoord;&#xa;&#xa;vec2 ps = 1./textureSize(ndTex,0);&#xa;int hs = abs(halfsize);&#xa;&#xa;const int K = 3; // number of clusters &#xa;const float eps = 1e-10; // an epsilon for avoiding divisions by 0 &#xa;const float sigmin = .001; // min sigma for weighting data values &#xa;const float stifmin = .001; // min stiffness&#xa;const float INIT_DISP_MULT = 4.; // used for positionning first means along the max eigenvector&#xa;&#xa;vec2 remapCoord = ps*float(hs);&#xa;&#xa;float sigma = max(sig,sigmin);&#xa;float stiffness = max(stif,stifmin);&#xa;&#xa;vec3 means[K]; // centroids&#xa;&#xa;// tmp data (for the softmin step)&#xa;vec3 tmpMeans[K];&#xa;&#xa;bool valid = true; // will contain false in case something bad occurs&#xa;&#xa;&#xa;// not used here... will be usefull in another node (for taking distances into account in the clustering)&#xa;float gauss1D(in float v, in float s) {&#xa;&#x9;return exp(-((v*v)/(s*s)));&#xa;}&#xa;&#xa;vec4 getDataWeight(in vec2 center,in vec2 offset) {&#xa;&#x9;vec4 d = texture(ndTex,center+offset); // ndTex contains n.x, n.y, depth, mask&#xa;&#x9;// all the input data (coords+depth) is remapped between -1/1&#xa;&#x9;vec3 data = vec3(offset/remapCoord,d.z); &#xa;&#x9;//data.z = 1.; // to remove (do not consider depth for now - to test spatial weights)&#xa;&#x9;data.z = data.z*2-1;&#xa;&#x9;float w = d.w;&#xa;&#x9;vec2 tDisp = d.xy*hs*ps;&#xa;&#x9;w *= gauss1D(length(offset+tDisp),sigma); // faster than distance(center,center+offset+tDisp)&#xa;&#x9;return vec4(data,w); // returns x,y,depth and weight&#xa;}&#xa;&#xa;float expSift(in int k,in vec4 x) {&#xa;&#x9;vec3 v = x.xyz-means[k];&#xa;&#x9;float t = dot(v,v);&#xa;&#x9;return exp(-stiffness*t*t);&#xa;}&#xa;&#xa;vec3 softmaxFunc(in vec4 x) {&#xa;&#x9;vec3 r = vec3(expSift(0,x),expSift(1,x),expSift(2,x));&#xa;&#x9;float s = r.x+r.y+r.z;&#xa;&#x9;return r/max(s,eps); &#xa;}&#xa;&#xa;vec2 getInitMeanDisp(in mat2 covs) {&#xa;&#x9;// return the unnormalized max eigen vector of the cov matrix &#xa;&#x9;// as this is a symetric matrix, store it in a vec3 and compute values &#xa;&#x9;vec3 m = vec3(covs[0][0],covs[1][1],.5*(covs[0][1]+covs[1][0]));&#xa;&#x9;float tmp = sqrt(max(m.x*m.x+4.0*m.z*m.z-2.0*m.x*m.y+m.y*m.y,0.));&#xa;&#x9;&#xa;&#x9;// max eigenvv (for sure as the input matrix is symetric)&#xa;&#x9;float k  = 0.5*(m.x+m.y+tmp);&#xa;&#x9;return vec2(m.z,k-m.x)*INIT_DISP_MULT;&#xa;}&#xa;&#xa;// SoftMax Initialization&#xa;// single pass algorithm to compute means and covariances &#xa;// the means are initialized with means, means-var, means+var&#xa;void softmaxInit(in vec2 coord,in int opt) {&#xa;&#x9;float sum = 0.;&#xa;&#x9;mat2 covs = mat2(0.);&#xa;&#xa;&#x9;for(int i=0;i&lt;K;++i) {&#xa;&#x9;&#x9;// means set to 0 for each class&#xa;&#x9;&#x9;means[i] = vec3(0.);&#xa;&#x9;}&#xa;&#xa;&#x9;for(int i=-hs;i&lt;=hs;i+=opt) {&#xa;&#x9;&#x9;for(int j=-hs;j&lt;=hs;j+=opt) {&#xa;&#x9;&#x9;&#x9;vec2 o = vec2(float(i),float(j));&#xa;&#x9;&#x9;&#x9;if(length(o)>hs) continue; // uncomment for a circular kernel (instead of squared)&#xa;&#xa;&#x9;&#x9;&#x9;vec4 data = getDataWeight(coord,vec2(float(i),float(j))*ps); // (x,y,depth,weight)&#xa;&#xa;&#x9;&#x9;&#x9;float w = data.w;&#xa;&#xa;&#x9;&#x9;&#x9;sum += w; // sum of weights&#xa;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;means[1] += w*data.xyz; // sum of data, for the mean&#xa;&#x9;&#x9;&#x9;covs += w*outerProduct(data.xy,data.xy); // for covariance matrix &#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;if(sum>eps) {&#xa;&#x9;&#x9;means[1] /= sum; // the mean of all data&#xa;&#x9;&#x9;covs = .5*(covs/sum - outerProduct(means[1].xy,means[1].xy)); // covariance of weighted x,y data&#xa;&#x9;&#x9;vec2 disp = getInitMeanDisp(covs);&#xa;&#x9;&#x9;means[0] = vec3(means[1].xy-disp,means[1].z);&#xa;&#x9;&#x9;means[2] = vec3(means[1].xy+disp,means[1].z);&#xa;&#xa;&#x9;} else valid = false;&#xa;}&#xa;&#xa;void softmaxStep(in vec2 coord,in int opt) {&#xa;&#x9;// consider valid data (check before!)&#xa;&#x9;// init tmp data&#xa;&#x9;vec3 sum = vec3(0.);&#xa;&#x9;for(int i=0;i&lt;K;++i) {&#xa;&#x9;&#x9;tmpMeans[i] = vec3(0.);&#xa;&#x9;}&#xa;&#x9;&#xa;&#x9;for(int i=-hs;i&lt;=hs;i+=opt) {&#xa;&#x9;&#x9;for(int j=-hs;j&lt;=hs;j+=opt) {&#xa;&#x9;&#x9;&#x9;vec2 o = vec2(float(i),float(j));&#xa;&#x9;&#x9;&#x9;if(length(o)>hs) continue; // uncomment for a circular kernel (instead of squared)&#xa;&#xa;&#x9;&#x9;&#x9;vec4 data = getDataWeight(coord,vec2(float(i),float(j))*ps); // (x,y,depth,weight)&#xa;&#xa;&#x9;&#x9;&#x9;// indicator variables &#xa;&#x9;&#x9;&#x9;vec3 Zi = softmaxFunc(data);&#xa;&#xa;&#x9;&#x9;&#x9;// We handle weights there (and compute weighted indicators)&#xa;&#x9;&#x9;&#x9;vec3 WZi = data.w*Zi;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;//vec3 WZi = Zi;&#x9;&#x9;// original (without weight)&#x9;&#xa;&#xa;&#x9;&#x9;&#x9;// sum of weights for each cluster &#xa;&#x9;&#x9;&#x9;sum += WZi;&#xa;&#xa;&#x9;&#x9;&#x9;// update means &#xa;&#x9;&#x9;&#x9;tmpMeans[0] += WZi[0]*data.xyz;&#xa;&#x9;&#x9;&#x9;tmpMeans[1] += WZi[1]*data.xyz;&#xa;&#x9;&#x9;&#x9;tmpMeans[2] += WZi[2]*data.xyz;&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;// final means &#xa;&#x9;means[0] = tmpMeans[0]/max(sum[0],eps);&#xa;&#x9;means[1] = tmpMeans[1]/max(sum[1],eps);&#xa;&#x9;means[2] = tmpMeans[2]/max(sum[2],eps);&#xa;}&#xa;&#xa;// TEST func&#xa;bool nan(in mat3 m) {&#xa;&#x9;if(any(isnan(m[0])) || any(isnan(m[1])) || any(isnan(m[2]))) return true;&#xa;&#x9;return false;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 coord = texcoord;&#xa;&#x9;&#xa;&#x9;// for the test&#xa;&#x9;coord = mouse*ps;&#xa;&#xa;&#x9;// init softmax&#xa;&#x9;softmaxInit(coord,optInit);&#xa;&#xa;&#x9;// perform softmax iterations&#xa;&#x9;if(valid) {&#xa;&#x9;&#x9;for(int i=0;i&lt;iter;++i) {&#xa;&#x9;&#x9;&#x9;int l = int(mix(float(optSeg),1.,float(i+1)/float(iter)));&#xa;&#x9;&#x9;&#x9;softmaxStep(coord,l);&#xa;&#x9;&#x9;}&#xa;&#x9;} // softmax end (the rest is display stuff)&#xa;&#xa;&#x9;// tmp values &#xa;&#x9;vec2 pmin = coord-vec2(halfsize)*ps;&#xa;&#x9;vec2 pmax = coord+vec2(halfsize)*ps;&#xa;&#x9;vec2 czoomed = texcoord*(pmax-pmin)+pmin;&#xa;&#xa;&#x9;// display orig data (first output)&#xa;&#x9;vec4 dataOrig = texture(ndTex,texcoord);&#xa;&#x9;vec4 evalOrig = getDataWeight(coord,texcoord-coord);&#xa;&#xa;&#x9;res = vec4(dataOrig.xy*0.5+0.5,evalOrig.w,dataOrig.w);&#xa;&#x9;float d = 1.-smoothstep(0.,2.,abs(distance(mouse,gl_FragCoord.xy)-float(halfsize)));&#xa;&#x9;res = mix(res,vec4(1),d);&#xa;&#xa;&#x9;// display zommed data + weights + x,y mean positions&#xa;&#x9;vec4 dataZoomed = texture(ndTex,czoomed);&#xa;&#x9;vec4 evalZoomed = getDataWeight(coord,czoomed-coord);&#xa;&#xa;&#x9;vec3 r = softmaxFunc(evalZoomed);&#xa;&#x9;zoomedData = vec4(dataZoomed.xy*0.5+0.5,evalZoomed.w,dataZoomed.w);&#xa;&#x9;float d0 = distance(czoomed-coord,means[0].xy*remapCoord);&#xa;&#x9;float d1 = distance(czoomed-coord,means[1].xy*remapCoord);&#xa;&#x9;float d2 = distance(czoomed-coord,means[2].xy*remapCoord);&#xa;&#x9;zoomedData = mix(zoomedData,vec4(1,0,0,1),1.-smoothstep(0.003,0.005,d0));&#xa;&#x9;zoomedData = mix(zoomedData,vec4(0,1,0,1),1.-smoothstep(0.003,0.005,d1));&#xa;&#x9;zoomedData = mix(zoomedData,vec4(0,0,1,1),1.-smoothstep(0.003,0.005,d2));&#xa;&#xa;&#x9;// display segmentation with RGB colors &#xa;&#x9;zoomedSeg = vec4(r,dataZoomed.w);&#xa;&#xa;&#x9;// just to make display more beautiful &#xa;&#x9;float li = length(texcoord*2-1);&#xa;&#x9;float tmp = abs(li-0.95);&#xa;&#xa;&#x9;if(li>0.95) {&#xa;&#x9;&#x9;zoomedData = vec4(0,0,0,1);&#xa;&#x9;&#x9;zoomedSeg = vec4(0,0,0,1);&#xa;&#x9;}&#xa;&#xa;&#x9;zoomedData = mix(zoomedData,vec4(1),1.-smoothstep(0.,0.02,tmp));&#xa;&#x9;zoomedSeg = mix(zoomedSeg,vec4(1),1.-smoothstep(0.,0.02,tmp));&#xa;&#xa;&#xa;&#x9;// TEST nan&#xa;&#x9;if(!valid) {&#xa;&#x9;&#x9;zoomedSeg = vec4(1);&#xa;&#x9;}&#xa;&#xa;&#x9;if(any(isnan(r))) {&#xa;&#x9;&#x9;zoomedSeg = vec4(1);&#xa;&#x9;}&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D ndTex;&#xa;uniform vec2 mouse;&#xa;uniform float sig;&#xa;uniform float stif;&#xa;uniform int halfsize;&#xa;uniform int iter;&#xa;uniform int optInit;&#xa;uniform int optSeg;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform sampler2D ndTex;&#xa;uniform vec2 mouse;&#xa;uniform float sig;&#xa;uniform float stif;&#xa;uniform int halfsize;&#xa;uniform int iter;&#xa;uniform int optInit;&#xa;uniform int optSeg;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D ndTex;&#xa;uniform vec2 mouse;&#xa;uniform float sig;&#xa;uniform float stif;&#xa;uniform int halfsize;&#xa;uniform int iter;&#xa;uniform int optInit;&#xa;uniform int optSeg;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="1" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="6" name="genericNbWidgets"/>
     <int val="1" name="genericWidgetType-0"/>
     <int val="1" name="genericWidgetView-0"/>
     <string val="halfsize" name="genericWidgetName-0"/>
     <bool val="0" name="genericWidgetKeyframed-0"/>
     <int val="0" name="genericWidgetType-1"/>
     <int val="1" name="genericWidgetView-1"/>
     <string val="sig" name="genericWidgetName-1"/>
     <bool val="0" name="genericWidgetKeyframed-1"/>
     <int val="0" name="genericWidgetType-2"/>
     <int val="1" name="genericWidgetView-2"/>
     <string val="stif" name="genericWidgetName-2"/>
     <bool val="0" name="genericWidgetKeyframed-2"/>
     <int val="1" name="genericWidgetType-3"/>
     <int val="1" name="genericWidgetView-3"/>
     <string val="iter" name="genericWidgetName-3"/>
     <bool val="0" name="genericWidgetKeyframed-3"/>
     <int val="1" name="genericWidgetType-4"/>
     <int val="1" name="genericWidgetView-4"/>
     <string val="optInit" name="genericWidgetName-4"/>
     <bool val="0" name="genericWidgetKeyframed-4"/>
     <int val="1" name="genericWidgetType-5"/>
     <int val="1" name="genericWidgetView-5"/>
     <string val="optSeg" name="genericWidgetName-5"/>
     <bool val="0" name="genericWidgetKeyframed-5"/>
    </IOData>
    <IOData name="nodeWidget-20">
     <uint val="7" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="1" name="vector2iAttribKeyframed"/>
      <vector2i name="vector2iAttribMinVal">
       <int val="-10000" name="0"/>
       <int val="-10000" name="1"/>
      </vector2i>
      <vector2i name="vector2iAttribMaxVal">
       <int val="10000" name="0"/>
       <int val="10000" name="1"/>
      </vector2i>
      <IOData name="vector2iAttribCurve">
       <vector2i name="currentVal">
        <int val="286" name="0"/>
        <int val="290" name="1"/>
       </vector2i>
       <uint val="2" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="286" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="290" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool val="0" name="intAttribKeyframed"/>
      <int val="-100" name="intAttribMinVal"/>
      <int val="100" name="intAttribMaxVal"/>
      <IOData name="intAttribCurve">
       <int val="30" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="30" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool val="0" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="1" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="0.015" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="0.015" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool val="0" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="50" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="14.35" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="14.35" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool val="0" name="intAttribKeyframed"/>
      <int val="0" name="intAttribMinVal"/>
      <int val="20" name="intAttribMaxVal"/>
      <IOData name="intAttribCurve">
       <int val="3" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="3" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-5">
      <bool val="0" name="intAttribKeyframed"/>
      <int val="1" name="intAttribMinVal"/>
      <int val="30" name="intAttribMaxVal"/>
      <IOData name="intAttribCurve">
       <int val="5" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="5" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
     <IOData name="childWidget-6">
      <bool val="0" name="intAttribKeyframed"/>
      <int val="1" name="intAttribMinVal"/>
      <int val="30" name="intAttribMaxVal"/>
      <IOData name="intAttribCurve">
       <int val="15" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="15" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-20-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-20-0">
     <float val="56.32" name="0"/>
     <float val="1267.2" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-20-1">
     <float val="56.32" name="0"/>
     <float val="647.68" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-20-2">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-21"/>
    <IOData name="node-21">
     <string val="420" name="genericGlslVersion"/>
     <string val="testNan" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;if(any(isnan(texture(inBuffer0,texcoord)))) {&#xa;&#x9;&#x9;outBuffer0 = vec4(1,0,0,1);&#xa;&#x9;} else {&#xa;&#x9;&#x9;outBuffer0 = vec4(0,0,0,1);&#xa;&#x9;}&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="0" name="genericNbWidgets"/>
    </IOData>
    <IOData name="nodeWidget-21">
     <uint val="0" name="nbChildren"/>
    </IOData>
    <vector2f name="nodeInputPos-21-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-21-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <bool val="1" name="nodeHasWidget-22"/>
    <IOData name="node-22">
     <string val="420" name="genericGlslVersion"/>
     <string val="genericImage" name="genericNodeName"/>
     <bool val="0" name="genericUseVertex"/>
     <bool val="0" name="genericUseTesselation"/>
     <bool val="0" name="genericUseGeometry"/>
     <bool val="1" name="genericUseFragment"/>
     <int val="9729" name="genericOutFilter"/>
     <int val="33071" name="genericOutWrap"/>
     <bool val="0" name="genericUseDepthTest"/>
     <bool val="0" name="genericUseBlending"/>
     <uint val="513" name="genericDepthFunc"/>
     <uint val="1" name="genericBlendSrc"/>
     <uint val="0" name="genericBlendDst"/>
     <vector4f name="genericBackground">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
      <float val="0" name="2"/>
      <float val="0" name="3"/>
     </vector4f>
     <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D vectorFieldTex;&#xa;uniform sampler2D normalsTex;&#xa;uniform sampler2D positionsTex;&#xa;uniform float test;&#xa;" name="genericVertHead"/>
     <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
     <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 result;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D vectorFieldTex;&#xa;uniform sampler2D normalsTex;&#xa;uniform sampler2D positionsTex;&#xa;uniform float test;&#xa;" name="genericFragHead"/>
     <string val="in vec2 texcoord;&#xa;&#xa;vec2 ps = 1./textureSize(normalsTex,0);&#xa;const float eps = 1e-10;&#xa;&#xa;// LOAD MATRICES &#xa;vec4 m0 = &#x9;texelFetch(matrices, ivec2(0, 0), 0);&#xa;vec4 m1 = &#x9;texelFetch(matrices, ivec2(1, 0), 0);&#xa;vec4 m2 = &#x9;texelFetch(matrices, ivec2(2, 0), 0);&#xa;vec4 m3 = &#x9;texelFetch(matrices, ivec2(3, 0), 0);&#xa;&#xa;vec4 v0 = &#x9;texelFetch(matrices, ivec2(0, 1), 0);&#xa;vec4 v1 = &#x9;texelFetch(matrices, ivec2(1, 1), 0);&#xa;vec4 v2 = &#x9;texelFetch(matrices, ivec2(2, 1), 0);&#xa;vec4 v3 = &#x9;texelFetch(matrices, ivec2(3, 1), 0);&#xa;&#xa;vec4 p0 = &#x9;texelFetch(matrices, ivec2(0, 2), 0);&#xa;vec4 p1 = &#x9;texelFetch(matrices, ivec2(1, 2), 0);&#xa;vec4 p2 = &#x9;texelFetch(matrices, ivec2(2, 2), 0);&#xa;vec4 p3 = &#x9;texelFetch(matrices, ivec2(3, 2), 0);&#xa;&#xa;mat4 model = mat4(m0,m1,m2,m3);&#xa;mat4 view = mat4(v0,v1,v2,v3);&#xa;mat4 proj = mat4(p0,p1,p2,p3);&#xa;mat4 mdv = view*model;&#xa;&#xa;vec3 worldToCam(in vec3 p) {&#xa;&#x9;return (mdv*vec4(p,1.)).xyz;&#xa;}&#xa;&#xa;vec3 camToWorld(in vec3 p) {&#xa;&#x9;return (inverse(mdv)*vec4(p,1.)).xyz;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec4 d = texture(vectorFieldTex,texcoord);&#xa;&#x9;float hs = d.w;&#xa;&#x9;vec2 uv = texcoord+d.xy;&#xa;&#xa;&#x9;// get pos (world) and normal (view) at offsetted coord &#xa;&#x9;vec4 pos = texture(positionsTex,uv);&#xa;&#x9;vec3 n = texture(normalsTex,uv).xyz;&#xa;&#x9;&#xa;&#x9;if(length(n)>eps) n = normalize(n);&#xa;&#xa;&#x9;// transform position into cam space&#xa;&#x9;vec3 camP = worldToCam(pos.xyz);&#xa;&#xa;&#x9;// modify according to displacement length &#xa;&#x9;// PAS BON: on ne devrait pas avoir a utiliser test&#xa;&#x9;// TODO: PASSER EN ESPACE PROJETE DONC PLUTOT &#xa;&#x9;camP = camP+n*hs*length(ps)*test;&#x9;&#xa;&#xa;&#x9;// transform position back to world space&#xa;&#x9;vec3 worldP = camToWorld(camP);&#xa;&#xa;&#xa;&#x9;// display new pos&#xa;&#x9;result = vec4(worldP,pos.w);&#xa;&#x9;//result = texture(imgTex,texcoord+d.xy);&#xa;}&#xa;" name="genericFragBody"/>
     <string val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D vectorFieldTex;&#xa;uniform sampler2D normalsTex;&#xa;uniform sampler2D positionsTex;&#xa;uniform float test;&#xa;" name="genericTessCHead"/>
     <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
     <string val="#version 420&#xa;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D vectorFieldTex;&#xa;uniform sampler2D normalsTex;&#xa;uniform sampler2D positionsTex;&#xa;uniform float test;&#xa;" name="genericTessEHead"/>
     <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
     <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D vectorFieldTex;&#xa;uniform sampler2D normalsTex;&#xa;uniform sampler2D positionsTex;&#xa;uniform float test;&#xa;" name="genericGeomHead"/>
     <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
     <vector2f name="genericTSize">
      <float val="1" name="0"/>
      <float val="1" name="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float val="0" name="0"/>
      <float val="0" name="1"/>
     </vector2f>
     <bool val="0" name="genericNeedMouse"/>
     <bool val="0" name="genericNeedKeyboard"/>
     <uint val="1" name="genericNbWidgets"/>
     <int val="0" name="genericWidgetType-0"/>
     <int val="1" name="genericWidgetView-0"/>
     <string val="test" name="genericWidgetName-0"/>
     <bool val="0" name="genericWidgetKeyframed-0"/>
    </IOData>
    <IOData name="nodeWidget-22">
     <uint val="1" name="nbChildren"/>
     <IOData name="childWidget-0">
      <bool val="0" name="floatAttribKeyframed"/>
      <float val="0" name="floatAttribMinVal"/>
      <float val="10" name="floatAttribMaxVal"/>
      <IOData name="floatAttribCurve">
       <float val="1.03" name="currentVal"/>
       <uint val="1" name="nbCurves"/>
       <IOData name="curve-0">
        <int val="0" name="interpType"/>
        <int val="0" name="leftType"/>
        <int val="0" name="rightType"/>
        <IOData name="interpolator">
         <uint val="1" name="nbPoints"/>
         <uint val="0" name="nbTangents"/>
         <vector2f name="controlPoint-0">
          <float val="0" name="0"/>
          <float val="1.03" name="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint val="0" name="nbChildren"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-22-0">
     <float val="56.32" name="0"/>
     <float val="3745.28" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-22-1">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-22-2">
     <float val="56.32" name="0"/>
     <float val="3125.76" name="1"/>
    </vector2f>
    <vector2f name="nodeInputPos-22-3">
     <float val="56.32" name="0"/>
     <float val="1267.2" name="1"/>
    </vector2f>
    <vector2f name="nodeOutputPos-22-0">
     <float val="56.32" name="0"/>
     <float val="28.16" name="1"/>
    </vector2f>
   </IOData>
   <float val="14.3822" name="scale"/>
   <vector2f name="offset">
    <float val="1108.55" name="0"/>
    <float val="4386.84" name="1"/>
   </vector2f>
   <IOData name="animation">
    <uint val="0" name="firstFrame"/>
    <uint val="299" name="lastFrame"/>
    <uint val="0" name="currentFrame"/>
    <uint val="24" name="fps"/>
   </IOData>
  </IOData>
  <IOData name="animationWidget">
   <vector2i name="animationWidgetSize">
    <int val="1920" name="0"/>
    <int val="246" name="1"/>
   </vector2i>
   <IOData name="timelineWidget"/>
  </IOData>
  <IOData name="nodeListWidget"/>
  <IOData name="interactionWidget">
   <float val="1.11211" name="scale"/>
   <vector2f name="offset">
    <float val="616.765" name="0"/>
    <float val="235.382" name="1"/>
   </vector2f>
  </IOData>
  <IOData name="nodeInterfaceWidget"/>
 </IOData>
</Gratin>
