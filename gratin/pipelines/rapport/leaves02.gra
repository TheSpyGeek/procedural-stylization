<Gratin type="pipeline">
 <int name="majorVersion" val="0"/>
 <int name="minorVersion" val="3"/>
 <IOData name="mainWindow">
  <IOData name="graphWidget">
   <IOData name="graph">
    <uint name="nbNodes" val="37"/>
    <string name="nodeStringId-0" val="advancedGbuffers"/>
    <uint name="nodeVersion-0" val="1"/>
    <string name="nodeName-0" val="AdvancedGBuffers"/>
    <string name="nodePath-0" val="Custom/"/>
    <string name="nodeDesc-0" val="Generic node for 3D object processing"/>
    <string name="nodeHelp-0" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-0" val="0"/>
    <uint name="nodeGraphId-0" val="0"/>
    <vector2f name="nodePos-0">
     <float name="0" val="-3667.47"/>
     <float name="1" val="2695.23"/>
    </vector2f>
    <int name="nodeInputNameSize-0" val="0"/>
    <int name="nodeOutputNameSize-0" val="8"/>
    <string name="nodeOutputName-0-0" val="cameraParameters"/>
    <string name="nodeOutputName-0-1" val="normalVBuffer"/>
    <string name="nodeOutputName-0-2" val="normalWBuffer"/>
    <string name="nodeOutputName-0-3" val="tangentVBuffer"/>
    <string name="nodeOutputName-0-4" val="coordBuffer"/>
    <string name="nodeOutputName-0-5" val="positionsBuffer"/>
    <string name="nodeOutputName-0-6" val="depthBuffer"/>
    <string name="nodeOutputName-0-7" val="mask"/>
    <string name="nodeStringId-1" val="imgGenericId"/>
    <uint name="nodeVersion-1" val="1"/>
    <string name="nodeName-1" val="depthMasked"/>
    <string name="nodePath-1" val="Generic/"/>
    <string name="nodeDesc-1" val="Generic node for image processing"/>
    <string name="nodeHelp-1" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-1" val="1"/>
    <uint name="nodeGraphId-1" val="0"/>
    <vector2f name="nodePos-1">
     <float name="0" val="-223.168"/>
     <float name="1" val="3116.33"/>
    </vector2f>
    <int name="nodeInputNameSize-1" val="2"/>
    <int name="nodeOutputNameSize-1" val="1"/>
    <string name="nodeInputName-1-0" val="inBuffer0"/>
    <string name="nodeInputName-1-1" val="inBuffer1"/>
    <string name="nodeOutputName-1-0" val="outBuffer0"/>
    <string name="nodeStringId-2" val="globalMaxMinDepth"/>
    <uint name="nodeVersion-2" val="1"/>
    <string name="nodeName-2" val="globalMaxMinDepth"/>
    <string name="nodePath-2" val="Analysis/global"/>
    <string name="nodeDesc-2" val="Min/max depth"/>
    <string name="nodeHelp-2" val="Compute the maximum color of an image. The resulting color is stored in the last level of the output pyramid. It can be accessed via the following formula: vec2 s = vec2(textureSize(image,0)); float l = 1. + floor(log2(max(s.x,s.y))); vec4 color = textureLod(image,vec2(.5),l); "/>
    <uint name="nodeId-2" val="2"/>
    <uint name="nodeGraphId-2" val="0"/>
    <vector2f name="nodePos-2">
     <float name="0" val="-1973.12"/>
     <float name="1" val="3077.12"/>
    </vector2f>
    <int name="nodeInputNameSize-2" val="1"/>
    <int name="nodeOutputNameSize-2" val="1"/>
    <string name="nodeInputName-2-0" val="image"/>
    <string name="nodeOutputName-2-0" val="maxMinDepth"/>
    <string name="nodeStringId-3" val="normalizeDepth"/>
    <uint name="nodeVersion-3" val="1"/>
    <string name="nodeName-3" val="normalizeDepth"/>
    <string name="nodePath-3" val="SilhouetteExtension/"/>
    <string name="nodeDesc-3" val="Normalize depth buffer"/>
    <string name="nodeHelp-3" val="This node was designed to create custom shaders The settings widget allows to modify input, output parameters as well as the output image sizes. WARNING1: you will be able to modify the number of inputs/outputs only if the node is entirely disconnected. WARNING2: input/output names will not be modified if a custom node is created from this node because these names should be edited directly in the setting widget WARNING3: modifying the settings of a node will remove all previously defined keyframes * Special data allows to modify the output image (using a multiple of the input size, plus an offset vector Check use mouse/keyboard if you want to interact with the mouse * Input data allows to add/remove/displace input data (only if disconnected) * Output data allows to add/remove/displace output data (only if disconnected) * Param data allows to add/remove parameters that will automatically be included in your shader. For each of them you may choose a proper name, type, and min/max/default values. Check keyframes if you want your parameter to be accessible through the animation widget In the node interface itself: Source tab contains the head and body of your GLSL source (only the body is editable) Params tab contains the defined widgets according to your setting choices Log tab contains compilation errors Once your settings and source completed, click on apply to see the result "/>
    <uint name="nodeId-3" val="3"/>
    <uint name="nodeGraphId-3" val="0"/>
    <vector2f name="nodePos-3">
     <float name="0" val="-1139.25"/>
     <float name="1" val="3084.59"/>
    </vector2f>
    <int name="nodeInputNameSize-3" val="1"/>
    <int name="nodeOutputNameSize-3" val="1"/>
    <string name="nodeInputName-3-0" val="inBuffer0"/>
    <string name="nodeOutputName-3-0" val="outBuffer0"/>
    <string name="nodeStringId-4" val="imgGenericId"/>
    <uint name="nodeVersion-4" val="1"/>
    <string name="nodeName-4" val="genericImage"/>
    <string name="nodePath-4" val="Generic/"/>
    <string name="nodeDesc-4" val="Generic node for image processing"/>
    <string name="nodeHelp-4" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-4" val="4"/>
    <uint name="nodeGraphId-4" val="0"/>
    <vector2f name="nodePos-4">
     <float name="0" val="-3136.2"/>
     <float name="1" val="-4108.65"/>
    </vector2f>
    <int name="nodeInputNameSize-4" val="2"/>
    <int name="nodeOutputNameSize-4" val="1"/>
    <string name="nodeInputName-4-0" val="inBuffer0"/>
    <string name="nodeInputName-4-1" val="inBuffer1"/>
    <string name="nodeOutputName-4-0" val="outBuffer0"/>
    <string name="nodeStringId-5" val="imgGenericId"/>
    <uint name="nodeVersion-5" val="1"/>
    <string name="nodeName-5" val="curvature"/>
    <string name="nodePath-5" val="Generic/"/>
    <string name="nodeDesc-5" val="Generic node for image processing"/>
    <string name="nodeHelp-5" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-5" val="5"/>
    <uint name="nodeGraphId-5" val="0"/>
    <vector2f name="nodePos-5">
     <float name="0" val="-2293.04"/>
     <float name="1" val="-4088.25"/>
    </vector2f>
    <int name="nodeInputNameSize-5" val="1"/>
    <int name="nodeOutputNameSize-5" val="1"/>
    <string name="nodeInputName-5-0" val="normalMap"/>
    <string name="nodeOutputName-5-0" val="meanCurvatureMap"/>
    <string name="nodeStringId-6" val="3DGaborNoiseID"/>
    <uint name="nodeVersion-6" val="1"/>
    <string name="nodeName-6" val="3DGaborNoise"/>
    <string name="nodePath-6" val="Texture/"/>
    <string name="nodeDesc-6" val="Solid Gabor Noise"/>
    <string name="nodeHelp-6" val="Based on the example code for the article of Lagae, A. and Drettakis, G. 2011. Filtering Solid Gabor Noise. ACM Transactions on Graphics (Proceedings of ACM SIGGRAPH 2011) 30, 4. Copyright (C) 2011 Ares Lagae (ares.lagae@cs.kuleuven.be) and George Drettakis (george.drettakis@inria.fr). This work is licensed under a non-commercial license."/>
    <uint name="nodeId-6" val="6"/>
    <uint name="nodeGraphId-6" val="0"/>
    <vector2f name="nodePos-6">
     <float name="0" val="-2339.82"/>
     <float name="1" val="-2333.73"/>
    </vector2f>
    <int name="nodeInputNameSize-6" val="1"/>
    <int name="nodeOutputNameSize-6" val="1"/>
    <string name="nodeInputName-6-0" val="inBuffer0"/>
    <string name="nodeOutputName-6-0" val="proceduralTex"/>
    <string name="nodeStringId-7" val="3DGradientNoiseID"/>
    <uint name="nodeVersion-7" val="1"/>
    <string name="nodeName-7" val="3DWorleyNoise"/>
    <string name="nodePath-7" val="Texture/"/>
    <string name="nodeDesc-7" val="Fractal 3D procedural gradient noise"/>
    <string name="nodeHelp-7" val="Noise based on the interpolation of pseudo random gradients on a 3D grid. &#xa;The octaves allows gradient noises with different frequencies &#xa;and amplitudes to be added and create a fractal noise. &#xa;The persistence defines how the amplitude of the signal is scaled on each octave.&#xa;The ZCoord parameter allows to navigate along the third dimension. "/>
    <uint name="nodeId-7" val="7"/>
    <uint name="nodeGraphId-7" val="0"/>
    <vector2f name="nodePos-7">
     <float name="0" val="-2328.71"/>
     <float name="1" val="-3215.25"/>
    </vector2f>
    <int name="nodeInputNameSize-7" val="1"/>
    <int name="nodeOutputNameSize-7" val="1"/>
    <string name="nodeInputName-7-0" val="inBuffer0"/>
    <string name="nodeOutputName-7-0" val="proceduralTex"/>
    <string name="nodeStringId-8" val="phongShadingID"/>
    <uint name="nodeVersion-8" val="1"/>
    <string name="nodeName-8" val="phongShading"/>
    <string name="nodePath-8" val="Rendering/"/>
    <string name="nodeDesc-8" val="Phong shading"/>
    <string name="nodeHelp-8" val="Take a normal map as input and apply a simple Phong shading with a directionnal light. The view vector is approximated with pixel coords but could be obtained as an ouptut of a genericBuffers node.&#xa;&#xa;The light direction is controlled via the mouse in the interaction widget."/>
    <uint name="nodeId-8" val="8"/>
    <uint name="nodeGraphId-8" val="0"/>
    <vector2f name="nodePos-8">
     <float name="0" val="-1812.5"/>
     <float name="1" val="5786.13"/>
    </vector2f>
    <int name="nodeInputNameSize-8" val="1"/>
    <int name="nodeOutputNameSize-8" val="3"/>
    <string name="nodeInputName-8-0" val="normalMap"/>
    <string name="nodeOutputName-8-0" val="shadingMap"/>
    <string name="nodeOutputName-8-1" val="diffuseParamMap"/>
    <string name="nodeOutputName-8-2" val="specularParamMap"/>
    <string name="nodeStringId-9" val="bilateralFilterID"/>
    <uint name="nodeVersion-9" val="1"/>
    <string name="nodeName-9" val="planeFittingGradient"/>
    <string name="nodePath-9" val="Imaging/"/>
    <string name="nodeDesc-9" val="Bilateral filter [Tomasi and Manduchi ICCV 1998]"/>
    <string name="nodeHelp-9" val="Implementation of the bilateral filter from the paper &quot;Bilateral Filtering for Gray and Color Images&quot; [Tomasi and Manduchi ICCV 1998].&#xa;&#xa;sigmaS controls the spatial averaging. &#xa;sigmaL controls controls edges (how much intensity variations to stop the blur)."/>
    <uint name="nodeId-9" val="9"/>
    <uint name="nodeGraphId-9" val="0"/>
    <vector2f name="nodePos-9">
     <float name="0" val="21.1258"/>
     <float name="1" val="2228.13"/>
    </vector2f>
    <int name="nodeInputNameSize-9" val="2"/>
    <int name="nodeOutputNameSize-9" val="1"/>
    <string name="nodeInputName-9-0" val="slopeMap"/>
    <string name="nodeInputName-9-1" val="depthMap"/>
    <string name="nodeOutputName-9-0" val="gradient"/>
    <string name="nodeStringId-10" val="3DGradientNoiseID"/>
    <uint name="nodeVersion-10" val="1"/>
    <string name="nodeName-10" val="3DWorleyNoiseFractalized"/>
    <string name="nodePath-10" val="Texture/"/>
    <string name="nodeDesc-10" val="Fractal 3D procedural gradient noise"/>
    <string name="nodeHelp-10" val="Noise based on the interpolation of pseudo random gradients on a 3D grid. &#xa;The octaves allows gradient noises with different frequencies &#xa;and amplitudes to be added and create a fractal noise. &#xa;The persistence defines how the amplitude of the signal is scaled on each octave.&#xa;The ZCoord parameter allows to navigate along the third dimension. "/>
    <uint name="nodeId-10" val="10"/>
    <uint name="nodeGraphId-10" val="0"/>
    <vector2f name="nodePos-10">
     <float name="0" val="-1943.88"/>
     <float name="1" val="4013.95"/>
    </vector2f>
    <int name="nodeInputNameSize-10" val="3"/>
    <int name="nodeOutputNameSize-10" val="1"/>
    <string name="nodeInputName-10-0" val="matrices"/>
    <string name="nodeInputName-10-1" val="positionMap"/>
    <string name="nodeInputName-10-2" val="depthMap"/>
    <string name="nodeOutputName-10-0" val="proceduralTex"/>
    <string name="nodeStringId-11" val="imgGenericId"/>
    <uint name="nodeVersion-11" val="1"/>
    <string name="nodeName-11" val="genericImage"/>
    <string name="nodePath-11" val="Generic/"/>
    <string name="nodeDesc-11" val="Generic node for image processing"/>
    <string name="nodeHelp-11" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-11" val="11"/>
    <uint name="nodeGraphId-11" val="0"/>
    <vector2f name="nodePos-11">
     <float name="0" val="-802.75"/>
     <float name="1" val="4258.31"/>
    </vector2f>
    <int name="nodeInputNameSize-11" val="2"/>
    <int name="nodeOutputNameSize-11" val="1"/>
    <string name="nodeInputName-11-0" val="inBuffer0"/>
    <string name="nodeInputName-11-1" val="inBuffer1"/>
    <string name="nodeOutputName-11-0" val="outBuffer0"/>
    <string name="nodeStringId-12" val="3DGradientNoiseID"/>
    <uint name="nodeVersion-12" val="1"/>
    <string name="nodeName-12" val="3DWorleyNoise"/>
    <string name="nodePath-12" val="Texture/"/>
    <string name="nodeDesc-12" val="Fractal 3D procedural gradient noise"/>
    <string name="nodeHelp-12" val="Noise based on the interpolation of pseudo random gradients on a 3D grid. &#xa;The octaves allows gradient noises with different frequencies &#xa;and amplitudes to be added and create a fractal noise. &#xa;The persistence defines how the amplitude of the signal is scaled on each octave.&#xa;The ZCoord parameter allows to navigate along the third dimension. "/>
    <uint name="nodeId-12" val="12"/>
    <uint name="nodeGraphId-12" val="0"/>
    <vector2f name="nodePos-12">
     <float name="0" val="-2313.49"/>
     <float name="1" val="362.78"/>
    </vector2f>
    <int name="nodeInputNameSize-12" val="1"/>
    <int name="nodeOutputNameSize-12" val="1"/>
    <string name="nodeInputName-12-0" val="inBuffer0"/>
    <string name="nodeOutputName-12-0" val="proceduralTex"/>
    <string name="nodeStringId-13" val="3DGradientNoiseID"/>
    <uint name="nodeVersion-13" val="1"/>
    <string name="nodeName-13" val="3DWorleyNoise"/>
    <string name="nodePath-13" val="Texture/"/>
    <string name="nodeDesc-13" val="Fractal 3D procedural gradient noise"/>
    <string name="nodeHelp-13" val="Noise based on the interpolation of pseudo random gradients on a 3D grid. &#xa;The octaves allows gradient noises with different frequencies &#xa;and amplitudes to be added and create a fractal noise. &#xa;The persistence defines how the amplitude of the signal is scaled on each octave.&#xa;The ZCoord parameter allows to navigate along the third dimension. "/>
    <uint name="nodeId-13" val="13"/>
    <uint name="nodeGraphId-13" val="0"/>
    <vector2f name="nodePos-13">
     <float name="0" val="-2322.51"/>
     <float name="1" val="1141.45"/>
    </vector2f>
    <int name="nodeInputNameSize-13" val="1"/>
    <int name="nodeOutputNameSize-13" val="1"/>
    <string name="nodeInputName-13-0" val="inBuffer0"/>
    <string name="nodeOutputName-13-0" val="proceduralTex"/>
    <string name="nodeStringId-14" val="imgGenericId"/>
    <uint name="nodeVersion-14" val="1"/>
    <string name="nodeName-14" val="shading"/>
    <string name="nodePath-14" val="Generic/"/>
    <string name="nodeDesc-14" val="Generic node for image processing"/>
    <string name="nodeHelp-14" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-14" val="14"/>
    <uint name="nodeGraphId-14" val="0"/>
    <vector2f name="nodePos-14">
     <float name="0" val="-302.838"/>
     <float name="1" val="5709.83"/>
    </vector2f>
    <int name="nodeInputNameSize-14" val="3"/>
    <int name="nodeOutputNameSize-14" val="1"/>
    <string name="nodeInputName-14-0" val="inBuffer0"/>
    <string name="nodeInputName-14-1" val="inBuffer1"/>
    <string name="nodeInputName-14-2" val="inBuffer2"/>
    <string name="nodeOutputName-14-0" val="shadingMap"/>
    <string name="nodeStringId-15" val="imgGenericId"/>
    <uint name="nodeVersion-15" val="1"/>
    <string name="nodeName-15" val="shading"/>
    <string name="nodePath-15" val="Generic/"/>
    <string name="nodeDesc-15" val="Generic node for image processing"/>
    <string name="nodeHelp-15" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-15" val="15"/>
    <uint name="nodeGraphId-15" val="0"/>
    <vector2f name="nodePos-15">
     <float name="0" val="1465.09"/>
     <float name="1" val="5412.94"/>
    </vector2f>
    <int name="nodeInputNameSize-15" val="1"/>
    <int name="nodeOutputNameSize-15" val="1"/>
    <string name="nodeInputName-15-0" val="inBuffer0"/>
    <string name="nodeOutputName-15-0" val="shadingMap"/>
    <string name="nodeStringId-16" val="imgGenericId"/>
    <uint name="nodeVersion-16" val="1"/>
    <string name="nodeName-16" val="genericImage"/>
    <string name="nodePath-16" val="Generic/"/>
    <string name="nodeDesc-16" val="Generic node for image processing"/>
    <string name="nodeHelp-16" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-16" val="16"/>
    <uint name="nodeGraphId-16" val="0"/>
    <vector2f name="nodePos-16">
     <float name="0" val="-133.146"/>
     <float name="1" val="1238.63"/>
    </vector2f>
    <int name="nodeInputNameSize-16" val="1"/>
    <int name="nodeOutputNameSize-16" val="1"/>
    <string name="nodeInputName-16-0" val="inBuffer0"/>
    <string name="nodeOutputName-16-0" val="outBuffer0"/>
    <string name="nodeStringId-17" val="3DGradientNoiseID"/>
    <uint name="nodeVersion-17" val="1"/>
    <string name="nodeName-17" val="3DGradientNoise"/>
    <string name="nodePath-17" val="Texture/"/>
    <string name="nodeDesc-17" val="Fractal 3D procedural gradient noise"/>
    <string name="nodeHelp-17" val="Noise based on the interpolation of pseudo random gradients on a 3D grid. &#xa;The octaves allows gradient noises with different frequencies &#xa;and amplitudes to be added and create a fractal noise. &#xa;The persistence defines how the amplitude of the signal is scaled on each octave.&#xa;The ZCoord parameter allows to navigate along the third dimension. "/>
    <uint name="nodeId-17" val="17"/>
    <uint name="nodeGraphId-17" val="0"/>
    <vector2f name="nodePos-17">
     <float name="0" val="-2328.48"/>
     <float name="1" val="-500.071"/>
    </vector2f>
    <int name="nodeInputNameSize-17" val="1"/>
    <int name="nodeOutputNameSize-17" val="1"/>
    <string name="nodeInputName-17-0" val="inBuffer0"/>
    <string name="nodeOutputName-17-0" val="proceduralTex"/>
    <string name="nodeStringId-18" val="bilateralFilterID"/>
    <uint name="nodeVersion-18" val="1"/>
    <string name="nodeName-18" val="planeFittingGradient"/>
    <string name="nodePath-18" val="Imaging/"/>
    <string name="nodeDesc-18" val="Bilateral filter [Tomasi and Manduchi ICCV 1998]"/>
    <string name="nodeHelp-18" val="Implementation of the bilateral filter from the paper &quot;Bilateral Filtering for Gray and Color Images&quot; [Tomasi and Manduchi ICCV 1998].&#xa;&#xa;sigmaS controls the spatial averaging. &#xa;sigmaL controls controls edges (how much intensity variations to stop the blur)."/>
    <uint name="nodeId-18" val="18"/>
    <uint name="nodeGraphId-18" val="0"/>
    <vector2f name="nodePos-18">
     <float name="0" val="-1533.82"/>
     <float name="1" val="-452.673"/>
    </vector2f>
    <int name="nodeInputNameSize-18" val="2"/>
    <int name="nodeOutputNameSize-18" val="1"/>
    <string name="nodeInputName-18-0" val="slopeMap"/>
    <string name="nodeInputName-18-1" val="depthMap"/>
    <string name="nodeOutputName-18-0" val="gradient"/>
    <string name="nodeStringId-19" val="imgGenericId"/>
    <uint name="nodeVersion-19" val="1"/>
    <string name="nodeName-19" val="flowField"/>
    <string name="nodePath-19" val="Generic/"/>
    <string name="nodeDesc-19" val="Generic node for image processing"/>
    <string name="nodeHelp-19" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-19" val="19"/>
    <uint name="nodeGraphId-19" val="0"/>
    <vector2f name="nodePos-19">
     <float name="0" val="923.989"/>
     <float name="1" val="2105.59"/>
    </vector2f>
    <int name="nodeInputNameSize-19" val="2"/>
    <int name="nodeOutputNameSize-19" val="1"/>
    <string name="nodeInputName-19-0" val="inBuffer0"/>
    <string name="nodeInputName-19-1" val="inBuffer1"/>
    <string name="nodeOutputName-19-0" val="flowMap"/>
    <string name="nodeStringId-20" val="imgGenericId"/>
    <uint name="nodeVersion-20" val="1"/>
    <string name="nodeName-20" val="depthFlow"/>
    <string name="nodePath-20" val="Generic/"/>
    <string name="nodeDesc-20" val="Generic node for image processing"/>
    <string name="nodeHelp-20" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-20" val="20"/>
    <uint name="nodeGraphId-20" val="0"/>
    <vector2f name="nodePos-20">
     <float name="0" val="1753.48"/>
     <float name="1" val="3144.76"/>
    </vector2f>
    <int name="nodeInputNameSize-20" val="2"/>
    <int name="nodeOutputNameSize-20" val="1"/>
    <string name="nodeInputName-20-0" val="inBuffer0"/>
    <string name="nodeInputName-20-1" val="inBuffer1"/>
    <string name="nodeOutputName-20-0" val="outBuffer0"/>
    <string name="nodeStringId-21" val="imgLoaderId"/>
    <uint name="nodeVersion-21" val="1"/>
    <string name="nodeName-21" val="imageLoader"/>
    <string name="nodePath-21" val="Imaging/"/>
    <string name="nodeDesc-21" val="Image loader"/>
    <string name="nodeHelp-21" val="Load an image."/>
    <uint name="nodeId-21" val="21"/>
    <uint name="nodeGraphId-21" val="0"/>
    <vector2f name="nodePos-21">
     <float name="0" val="-208.46"/>
     <float name="1" val="-2720.78"/>
    </vector2f>
    <int name="nodeInputNameSize-21" val="0"/>
    <int name="nodeOutputNameSize-21" val="1"/>
    <string name="nodeOutputName-21-0" val="image"/>
    <string name="nodeStringId-22" val="imgGenericId"/>
    <uint name="nodeVersion-22" val="1"/>
    <string name="nodeName-22" val="genericImage"/>
    <string name="nodePath-22" val="Generic/"/>
    <string name="nodeDesc-22" val="Generic node for image processing"/>
    <string name="nodeHelp-22" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-22" val="22"/>
    <uint name="nodeGraphId-22" val="0"/>
    <vector2f name="nodePos-22">
     <float name="0" val="714.82"/>
     <float name="1" val="-2778.56"/>
    </vector2f>
    <int name="nodeInputNameSize-22" val="1"/>
    <int name="nodeOutputNameSize-22" val="1"/>
    <string name="nodeInputName-22-0" val="inBuffer0"/>
    <string name="nodeOutputName-22-0" val="outBuffer0"/>
    <string name="nodeStringId-23" val="imgGenericId"/>
    <uint name="nodeVersion-23" val="1"/>
    <string name="nodeName-23" val="genericImage"/>
    <string name="nodePath-23" val="Generic/"/>
    <string name="nodeDesc-23" val="Generic node for image processing"/>
    <string name="nodeHelp-23" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-23" val="23"/>
    <uint name="nodeGraphId-23" val="0"/>
    <vector2f name="nodePos-23">
     <float name="0" val="742.581"/>
     <float name="1" val="-1160.07"/>
    </vector2f>
    <int name="nodeInputNameSize-23" val="1"/>
    <int name="nodeOutputNameSize-23" val="1"/>
    <string name="nodeInputName-23-0" val="inBuffer0"/>
    <string name="nodeOutputName-23-0" val="outBuffer0"/>
    <string name="nodeStringId-24" val="pyramidGenericId"/>
    <uint name="nodeVersion-24" val="1"/>
    <string name="nodeName-24" val="genericPyramid"/>
    <string name="nodePath-24" val="Generic/"/>
    <string name="nodeDesc-24" val="Generic node for pyramidal image processing"/>
    <string name="nodeHelp-24" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-24" val="24"/>
    <uint name="nodeGraphId-24" val="0"/>
    <vector2f name="nodePos-24">
     <float name="0" val="1806.99"/>
     <float name="1" val="-770.824"/>
    </vector2f>
    <int name="nodeInputNameSize-24" val="1"/>
    <int name="nodeOutputNameSize-24" val="1"/>
    <string name="nodeInputName-24-0" val="inBuffer0"/>
    <string name="nodeOutputName-24-0" val="outBuffer0"/>
    <string name="nodeStringId-25" val="imgGaussianBlurId"/>
    <uint name="nodeVersion-25" val="1"/>
    <string name="nodeName-25" val="gaussianBlur"/>
    <string name="nodePath-25" val="Imaging/"/>
    <string name="nodeDesc-25" val="Gaussian blur"/>
    <string name="nodeHelp-25" val="The amount of blur is controled by the kernel size.&#xa;Increase this size to increase the blur"/>
    <uint name="nodeId-25" val="25"/>
    <uint name="nodeGraphId-25" val="0"/>
    <vector2f name="nodePos-25">
     <float name="0" val="1797.54"/>
     <float name="1" val="-1559.26"/>
    </vector2f>
    <int name="nodeInputNameSize-25" val="1"/>
    <int name="nodeOutputNameSize-25" val="1"/>
    <string name="nodeInputName-25-0" val="image"/>
    <string name="nodeOutputName-25-0" val="filtering"/>
    <string name="nodeStringId-26" val="imageGradientID"/>
    <uint name="nodeVersion-26" val="1"/>
    <string name="nodeName-26" val="imageGradient"/>
    <string name="nodePath-26" val="Analysis/"/>
    <string name="nodeDesc-26" val="Gradient of an image"/>
    <string name="nodeHelp-26" val="Compute the (centered) gradient of an image. &#xa;By default, the color average is used for estimating luminance. &#xa;This might be changed in the &quot;value&quot; function. &#xa;&#xa;Return the gradient in the 2 first output channels. "/>
    <uint name="nodeId-26" val="26"/>
    <uint name="nodeGraphId-26" val="0"/>
    <vector2f name="nodePos-26">
     <float name="0" val="2573.18"/>
     <float name="1" val="-1548.72"/>
    </vector2f>
    <int name="nodeInputNameSize-26" val="2"/>
    <int name="nodeOutputNameSize-26" val="1"/>
    <string name="nodeInputName-26-0" val="image"/>
    <string name="nodeInputName-26-1" val="inBuffer1"/>
    <string name="nodeOutputName-26-0" val="gradient"/>
    <string name="nodeStringId-27" val="pyramidGenericId"/>
    <uint name="nodeVersion-27" val="1"/>
    <string name="nodeName-27" val="genericPyramid"/>
    <string name="nodePath-27" val="Generic/"/>
    <string name="nodeDesc-27" val="Generic node for pyramidal image processing"/>
    <string name="nodeHelp-27" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-27" val="27"/>
    <uint name="nodeGraphId-27" val="0"/>
    <vector2f name="nodePos-27">
     <float name="0" val="3369.5"/>
     <float name="1" val="-1562.52"/>
    </vector2f>
    <int name="nodeInputNameSize-27" val="1"/>
    <int name="nodeOutputNameSize-27" val="1"/>
    <string name="nodeInputName-27-0" val="inBuffer0"/>
    <string name="nodeOutputName-27-0" val="outBuffer0"/>
    <string name="nodeStringId-28" val="3DGradientNoiseID"/>
    <uint name="nodeVersion-28" val="1"/>
    <string name="nodeName-28" val="3DGradientNoise"/>
    <string name="nodePath-28" val="Texture/"/>
    <string name="nodeDesc-28" val="Fractal 3D procedural gradient noise"/>
    <string name="nodeHelp-28" val="Noise based on the interpolation of pseudo random gradients on a 3D grid. &#xa;The octaves allows gradient noises with different frequencies &#xa;and amplitudes to be added and create a fractal noise. &#xa;The persistence defines how the amplitude of the signal is scaled on each octave.&#xa;The ZCoord parameter allows to navigate along the third dimension. "/>
    <uint name="nodeId-28" val="28"/>
    <uint name="nodeGraphId-28" val="0"/>
    <vector2f name="nodePos-28">
     <float name="0" val="-2277.11"/>
     <float name="1" val="-1412.41"/>
    </vector2f>
    <int name="nodeInputNameSize-28" val="1"/>
    <int name="nodeOutputNameSize-28" val="1"/>
    <string name="nodeInputName-28-0" val="inBuffer0"/>
    <string name="nodeOutputName-28-0" val="proceduralTex"/>
    <string name="nodeStringId-29" val="imgGenericId"/>
    <uint name="nodeVersion-29" val="1"/>
    <string name="nodeName-29" val="impulsesPlusSplatSize"/>
    <string name="nodePath-29" val="Generic/"/>
    <string name="nodeDesc-29" val="Generic node for image processing"/>
    <string name="nodeHelp-29" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-29" val="29"/>
    <uint name="nodeGraphId-29" val="0"/>
    <vector2f name="nodePos-29">
     <float name="0" val="-29.2897"/>
     <float name="1" val="4549.22"/>
    </vector2f>
    <int name="nodeInputNameSize-29" val="2"/>
    <int name="nodeOutputNameSize-29" val="1"/>
    <string name="nodeInputName-29-0" val="inBuffer0"/>
    <string name="nodeInputName-29-1" val="inBuffer1"/>
    <string name="nodeOutputName-29-0" val="outBuffer0"/>
    <string name="nodeStringId-30" val="imgGenericId"/>
    <uint name="nodeVersion-30" val="1"/>
    <string name="nodeName-30" val="genericImage"/>
    <string name="nodePath-30" val="Generic/"/>
    <string name="nodeDesc-30" val="Generic node for image processing"/>
    <string name="nodeHelp-30" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-30" val="30"/>
    <uint name="nodeGraphId-30" val="0"/>
    <vector2f name="nodePos-30">
     <float name="0" val="1746.7"/>
     <float name="1" val="4024.11"/>
    </vector2f>
    <int name="nodeInputNameSize-30" val="2"/>
    <int name="nodeOutputNameSize-30" val="1"/>
    <string name="nodeInputName-30-0" val="inBuffer0"/>
    <string name="nodeInputName-30-1" val="inBuffer1"/>
    <string name="nodeOutputName-30-0" val="outBuffer0"/>
    <string name="nodeStringId-31" val="stylization_v3Id"/>
    <uint name="nodeVersion-31" val="1"/>
    <string name="nodeName-31" val="stylization_v3"/>
    <string name="nodePath-31" val="stylization/"/>
    <string name="nodeDesc-31" val="procedural stylisation with image as splat"/>
    <string name="nodeHelp-31" val="procedural style.&#xa;TODO"/>
    <uint name="nodeId-31" val="31"/>
    <uint name="nodeGraphId-31" val="0"/>
    <vector2f name="nodePos-31">
     <float name="0" val="3548.73"/>
     <float name="1" val="4165.02"/>
    </vector2f>
    <int name="nodeInputNameSize-31" val="8"/>
    <int name="nodeOutputNameSize-31" val="1"/>
    <string name="nodeInputName-31-0" val="matrices"/>
    <string name="nodeInputName-31-1" val="positionWMap"/>
    <string name="nodeInputName-31-2" val="normalWMap"/>
    <string name="nodeInputName-31-3" val="colorMap"/>
    <string name="nodeInputName-31-4" val="depthMap"/>
    <string name="nodeInputName-31-5" val="noiseMap"/>
    <string name="nodeInputName-31-6" val="splatMap"/>
    <string name="nodeInputName-31-7" val="splatNormalMap"/>
    <string name="nodeOutputName-31-0" val="rendering"/>
    <string name="nodeStringId-32" val="imageGradientID"/>
    <uint name="nodeVersion-32" val="1"/>
    <string name="nodeName-32" val="imageGradient"/>
    <string name="nodePath-32" val="Analysis/"/>
    <string name="nodeDesc-32" val="Gradient of an image"/>
    <string name="nodeHelp-32" val="Compute the (centered) gradient of an image. &#xa;By default, the color average is used for estimating luminance. &#xa;This might be changed in the &quot;value&quot; function. &#xa;&#xa;Return the gradient in the 2 first output channels. "/>
    <uint name="nodeId-32" val="32"/>
    <uint name="nodeGraphId-32" val="0"/>
    <vector2f name="nodePos-32">
     <float name="0" val="2414.38"/>
     <float name="1" val="1548.77"/>
    </vector2f>
    <int name="nodeInputNameSize-32" val="1"/>
    <int name="nodeOutputNameSize-32" val="1"/>
    <string name="nodeInputName-32-0" val="image"/>
    <string name="nodeOutputName-32-0" val="gradient"/>
    <string name="nodeStringId-33" val="imgLoaderId"/>
    <uint name="nodeVersion-33" val="1"/>
    <string name="nodeName-33" val="imageLoader"/>
    <string name="nodePath-33" val="Imaging/"/>
    <string name="nodeDesc-33" val="Image loader"/>
    <string name="nodeHelp-33" val="Load an image."/>
    <uint name="nodeId-33" val="33"/>
    <uint name="nodeGraphId-33" val="1"/>
    <vector2f name="nodePos-33">
     <float name="0" val="-384.927"/>
     <float name="1" val="-1948.1"/>
    </vector2f>
    <int name="nodeInputNameSize-33" val="0"/>
    <int name="nodeOutputNameSize-33" val="1"/>
    <string name="nodeOutputName-33-0" val="image"/>
    <string name="nodeStringId-34" val="imgGenericId"/>
    <uint name="nodeVersion-34" val="1"/>
    <string name="nodeName-34" val="genericImage"/>
    <string name="nodePath-34" val="Generic/"/>
    <string name="nodeDesc-34" val="Generic node for image processing"/>
    <string name="nodeHelp-34" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-34" val="34"/>
    <uint name="nodeGraphId-34" val="1"/>
    <vector2f name="nodePos-34">
     <float name="0" val="492.608"/>
     <float name="1" val="-1944.31"/>
    </vector2f>
    <int name="nodeInputNameSize-34" val="1"/>
    <int name="nodeOutputNameSize-34" val="1"/>
    <string name="nodeInputName-34-0" val="inBuffer0"/>
    <string name="nodeOutputName-34-0" val="outBuffer0"/>
    <string name="nodeStringId-35" val="imgGenericId"/>
    <uint name="nodeVersion-35" val="1"/>
    <string name="nodeName-35" val="imgGeneric"/>
    <string name="nodePath-35" val="Generic/"/>
    <string name="nodeDesc-35" val="Generic node for image processing"/>
    <string name="nodeHelp-35" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-35" val="35"/>
    <uint name="nodeGraphId-35" val="2"/>
    <vector2f name="nodePos-35">
     <float name="0" val="-114.233"/>
     <float name="1" val="-1177.85"/>
    </vector2f>
    <int name="nodeInputNameSize-35" val="0"/>
    <int name="nodeOutputNameSize-35" val="1"/>
    <string name="nodeOutputName-35-0" val="ridge"/>
    <string name="nodeStringId-36" val="imgGenericId"/>
    <uint name="nodeVersion-36" val="1"/>
    <string name="nodeName-36" val="genericImage"/>
    <string name="nodePath-36" val="Generic/"/>
    <string name="nodeDesc-36" val="Generic node for image processing"/>
    <string name="nodeHelp-36" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-36" val="36"/>
    <uint name="nodeGraphId-36" val="3"/>
    <vector2f name="nodePos-36">
     <float name="0" val="-217.613"/>
     <float name="1" val="-359.071"/>
    </vector2f>
    <int name="nodeInputNameSize-36" val="0"/>
    <int name="nodeOutputNameSize-36" val="1"/>
    <string name="nodeOutputName-36-0" val="img"/>
    <uint name="nbConnections-0-1" val="2"/>
    <vector2u name="connection-0-1-0">
     <uint name="0" val="6"/>
     <uint name="1" val="0"/>
    </vector2u>
    <vector2u name="connection-0-1-1">
     <uint name="0" val="7"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-0-2" val="0"/>
    <uint name="nbConnections-0-3" val="0"/>
    <uint name="nbConnections-0-4" val="1"/>
    <vector2u name="connection-0-4-0">
     <uint name="0" val="1"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-0-5" val="0"/>
    <uint name="nbConnections-0-6" val="1"/>
    <vector2u name="connection-0-6-0">
     <uint name="0" val="5"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-0-7" val="1"/>
    <vector2u name="connection-0-7-0">
     <uint name="0" val="5"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-0-8" val="1"/>
    <vector2u name="connection-0-8-0">
     <uint name="0" val="1"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-0-9" val="0"/>
    <uint name="nbConnections-0-10" val="3"/>
    <vector2u name="connection-0-10-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <vector2u name="connection-0-10-1">
     <uint name="0" val="5"/>
     <uint name="1" val="1"/>
    </vector2u>
    <vector2u name="connection-0-10-2">
     <uint name="0" val="6"/>
     <uint name="1" val="2"/>
    </vector2u>
    <uint name="nbConnections-0-11" val="1"/>
    <vector2u name="connection-0-11-0">
     <uint name="0" val="1"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-0-12" val="1"/>
    <vector2u name="connection-0-12-0">
     <uint name="0" val="5"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-0-13" val="1"/>
    <vector2u name="connection-0-13-0">
     <uint name="0" val="5"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-0-14" val="0"/>
    <uint name="nbConnections-0-15" val="0"/>
    <uint name="nbConnections-0-16" val="1"/>
    <vector2u name="connection-0-16-0">
     <uint name="0" val="1"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-0-17" val="1"/>
    <vector2u name="connection-0-17-0">
     <uint name="0" val="5"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-0-18" val="0"/>
    <uint name="nbConnections-0-19" val="0"/>
    <uint name="nbConnections-0-20" val="0"/>
    <uint name="nbConnections-0-21" val="0"/>
    <uint name="nbConnections-0-22" val="0"/>
    <uint name="nbConnections-0-23" val="0"/>
    <uint name="nbConnections-0-24" val="0"/>
    <uint name="nbConnections-0-25" val="0"/>
    <uint name="nbConnections-0-26" val="0"/>
    <uint name="nbConnections-0-27" val="0"/>
    <uint name="nbConnections-0-28" val="1"/>
    <vector2u name="connection-0-28-0">
     <uint name="0" val="5"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-0-29" val="0"/>
    <uint name="nbConnections-0-30" val="0"/>
    <uint name="nbConnections-0-31" val="3"/>
    <vector2u name="connection-0-31-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <vector2u name="connection-0-31-1">
     <uint name="0" val="2"/>
     <uint name="1" val="2"/>
    </vector2u>
    <vector2u name="connection-0-31-2">
     <uint name="0" val="5"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-0-32" val="0"/>
    <uint name="nbConnections-0-33" val="0"/>
    <uint name="nbConnections-0-34" val="0"/>
    <uint name="nbConnections-0-35" val="0"/>
    <uint name="nbConnections-0-36" val="0"/>
    <uint name="nbConnections-1-2" val="1"/>
    <vector2u name="connection-1-2-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-1-3" val="0"/>
    <uint name="nbConnections-1-4" val="0"/>
    <uint name="nbConnections-1-5" val="0"/>
    <uint name="nbConnections-1-6" val="0"/>
    <uint name="nbConnections-1-7" val="0"/>
    <uint name="nbConnections-1-8" val="0"/>
    <uint name="nbConnections-1-9" val="0"/>
    <uint name="nbConnections-1-10" val="0"/>
    <uint name="nbConnections-1-11" val="0"/>
    <uint name="nbConnections-1-12" val="0"/>
    <uint name="nbConnections-1-13" val="0"/>
    <uint name="nbConnections-1-14" val="0"/>
    <uint name="nbConnections-1-15" val="0"/>
    <uint name="nbConnections-1-16" val="0"/>
    <uint name="nbConnections-1-17" val="0"/>
    <uint name="nbConnections-1-18" val="0"/>
    <uint name="nbConnections-1-19" val="0"/>
    <uint name="nbConnections-1-20" val="0"/>
    <uint name="nbConnections-1-21" val="0"/>
    <uint name="nbConnections-1-22" val="0"/>
    <uint name="nbConnections-1-23" val="0"/>
    <uint name="nbConnections-1-24" val="0"/>
    <uint name="nbConnections-1-25" val="0"/>
    <uint name="nbConnections-1-26" val="0"/>
    <uint name="nbConnections-1-27" val="0"/>
    <uint name="nbConnections-1-28" val="0"/>
    <uint name="nbConnections-1-29" val="0"/>
    <uint name="nbConnections-1-30" val="0"/>
    <uint name="nbConnections-1-31" val="0"/>
    <uint name="nbConnections-1-32" val="0"/>
    <uint name="nbConnections-1-33" val="0"/>
    <uint name="nbConnections-1-34" val="0"/>
    <uint name="nbConnections-1-35" val="0"/>
    <uint name="nbConnections-1-36" val="0"/>
    <uint name="nbConnections-2-3" val="1"/>
    <vector2u name="connection-2-3-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-2-4" val="0"/>
    <uint name="nbConnections-2-5" val="0"/>
    <uint name="nbConnections-2-6" val="0"/>
    <uint name="nbConnections-2-7" val="0"/>
    <uint name="nbConnections-2-8" val="0"/>
    <uint name="nbConnections-2-9" val="0"/>
    <uint name="nbConnections-2-10" val="0"/>
    <uint name="nbConnections-2-11" val="0"/>
    <uint name="nbConnections-2-12" val="0"/>
    <uint name="nbConnections-2-13" val="0"/>
    <uint name="nbConnections-2-14" val="0"/>
    <uint name="nbConnections-2-15" val="0"/>
    <uint name="nbConnections-2-16" val="0"/>
    <uint name="nbConnections-2-17" val="0"/>
    <uint name="nbConnections-2-18" val="0"/>
    <uint name="nbConnections-2-19" val="0"/>
    <uint name="nbConnections-2-20" val="0"/>
    <uint name="nbConnections-2-21" val="0"/>
    <uint name="nbConnections-2-22" val="0"/>
    <uint name="nbConnections-2-23" val="0"/>
    <uint name="nbConnections-2-24" val="0"/>
    <uint name="nbConnections-2-25" val="0"/>
    <uint name="nbConnections-2-26" val="0"/>
    <uint name="nbConnections-2-27" val="0"/>
    <uint name="nbConnections-2-28" val="0"/>
    <uint name="nbConnections-2-29" val="0"/>
    <uint name="nbConnections-2-30" val="0"/>
    <uint name="nbConnections-2-31" val="0"/>
    <uint name="nbConnections-2-32" val="0"/>
    <uint name="nbConnections-2-33" val="0"/>
    <uint name="nbConnections-2-34" val="0"/>
    <uint name="nbConnections-2-35" val="0"/>
    <uint name="nbConnections-2-36" val="0"/>
    <uint name="nbConnections-3-4" val="1"/>
    <vector2u name="connection-3-4-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-3-5" val="0"/>
    <uint name="nbConnections-3-6" val="0"/>
    <uint name="nbConnections-3-7" val="0"/>
    <uint name="nbConnections-3-8" val="0"/>
    <uint name="nbConnections-3-9" val="1"/>
    <vector2u name="connection-3-9-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-3-10" val="0"/>
    <uint name="nbConnections-3-11" val="0"/>
    <uint name="nbConnections-3-12" val="0"/>
    <uint name="nbConnections-3-13" val="0"/>
    <uint name="nbConnections-3-14" val="0"/>
    <uint name="nbConnections-3-15" val="0"/>
    <uint name="nbConnections-3-16" val="0"/>
    <uint name="nbConnections-3-17" val="0"/>
    <uint name="nbConnections-3-18" val="1"/>
    <vector2u name="connection-3-18-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-3-19" val="0"/>
    <uint name="nbConnections-3-20" val="1"/>
    <vector2u name="connection-3-20-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-3-21" val="0"/>
    <uint name="nbConnections-3-22" val="0"/>
    <uint name="nbConnections-3-23" val="0"/>
    <uint name="nbConnections-3-24" val="0"/>
    <uint name="nbConnections-3-25" val="0"/>
    <uint name="nbConnections-3-26" val="0"/>
    <uint name="nbConnections-3-27" val="0"/>
    <uint name="nbConnections-3-28" val="0"/>
    <uint name="nbConnections-3-29" val="0"/>
    <uint name="nbConnections-3-30" val="0"/>
    <uint name="nbConnections-3-31" val="0"/>
    <uint name="nbConnections-3-32" val="0"/>
    <uint name="nbConnections-3-33" val="0"/>
    <uint name="nbConnections-3-34" val="0"/>
    <uint name="nbConnections-3-35" val="0"/>
    <uint name="nbConnections-3-36" val="0"/>
    <uint name="nbConnections-4-5" val="1"/>
    <vector2u name="connection-4-5-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-4-6" val="0"/>
    <uint name="nbConnections-4-7" val="0"/>
    <uint name="nbConnections-4-8" val="0"/>
    <uint name="nbConnections-4-9" val="0"/>
    <uint name="nbConnections-4-10" val="0"/>
    <uint name="nbConnections-4-11" val="0"/>
    <uint name="nbConnections-4-12" val="0"/>
    <uint name="nbConnections-4-13" val="0"/>
    <uint name="nbConnections-4-14" val="0"/>
    <uint name="nbConnections-4-15" val="0"/>
    <uint name="nbConnections-4-16" val="0"/>
    <uint name="nbConnections-4-17" val="0"/>
    <uint name="nbConnections-4-18" val="0"/>
    <uint name="nbConnections-4-19" val="0"/>
    <uint name="nbConnections-4-20" val="0"/>
    <uint name="nbConnections-4-21" val="0"/>
    <uint name="nbConnections-4-22" val="0"/>
    <uint name="nbConnections-4-23" val="0"/>
    <uint name="nbConnections-4-24" val="0"/>
    <uint name="nbConnections-4-25" val="0"/>
    <uint name="nbConnections-4-26" val="0"/>
    <uint name="nbConnections-4-27" val="0"/>
    <uint name="nbConnections-4-28" val="0"/>
    <uint name="nbConnections-4-29" val="0"/>
    <uint name="nbConnections-4-30" val="0"/>
    <uint name="nbConnections-4-31" val="0"/>
    <uint name="nbConnections-4-32" val="0"/>
    <uint name="nbConnections-4-33" val="0"/>
    <uint name="nbConnections-4-34" val="0"/>
    <uint name="nbConnections-4-35" val="0"/>
    <uint name="nbConnections-4-36" val="0"/>
    <uint name="nbConnections-5-6" val="0"/>
    <uint name="nbConnections-5-7" val="0"/>
    <uint name="nbConnections-5-8" val="0"/>
    <uint name="nbConnections-5-9" val="0"/>
    <uint name="nbConnections-5-10" val="0"/>
    <uint name="nbConnections-5-11" val="0"/>
    <uint name="nbConnections-5-12" val="0"/>
    <uint name="nbConnections-5-13" val="0"/>
    <uint name="nbConnections-5-14" val="0"/>
    <uint name="nbConnections-5-15" val="0"/>
    <uint name="nbConnections-5-16" val="0"/>
    <uint name="nbConnections-5-17" val="0"/>
    <uint name="nbConnections-5-18" val="0"/>
    <uint name="nbConnections-5-19" val="0"/>
    <uint name="nbConnections-5-20" val="0"/>
    <uint name="nbConnections-5-21" val="0"/>
    <uint name="nbConnections-5-22" val="0"/>
    <uint name="nbConnections-5-23" val="0"/>
    <uint name="nbConnections-5-24" val="0"/>
    <uint name="nbConnections-5-25" val="0"/>
    <uint name="nbConnections-5-26" val="0"/>
    <uint name="nbConnections-5-27" val="0"/>
    <uint name="nbConnections-5-28" val="0"/>
    <uint name="nbConnections-5-29" val="0"/>
    <uint name="nbConnections-5-30" val="0"/>
    <uint name="nbConnections-5-31" val="0"/>
    <uint name="nbConnections-5-32" val="0"/>
    <uint name="nbConnections-5-33" val="0"/>
    <uint name="nbConnections-5-34" val="0"/>
    <uint name="nbConnections-5-35" val="0"/>
    <uint name="nbConnections-5-36" val="0"/>
    <uint name="nbConnections-6-7" val="0"/>
    <uint name="nbConnections-6-8" val="0"/>
    <uint name="nbConnections-6-9" val="0"/>
    <uint name="nbConnections-6-10" val="0"/>
    <uint name="nbConnections-6-11" val="0"/>
    <uint name="nbConnections-6-12" val="0"/>
    <uint name="nbConnections-6-13" val="0"/>
    <uint name="nbConnections-6-14" val="0"/>
    <uint name="nbConnections-6-15" val="0"/>
    <uint name="nbConnections-6-16" val="0"/>
    <uint name="nbConnections-6-17" val="0"/>
    <uint name="nbConnections-6-18" val="0"/>
    <uint name="nbConnections-6-19" val="0"/>
    <uint name="nbConnections-6-20" val="0"/>
    <uint name="nbConnections-6-21" val="0"/>
    <uint name="nbConnections-6-22" val="0"/>
    <uint name="nbConnections-6-23" val="0"/>
    <uint name="nbConnections-6-24" val="0"/>
    <uint name="nbConnections-6-25" val="0"/>
    <uint name="nbConnections-6-26" val="0"/>
    <uint name="nbConnections-6-27" val="0"/>
    <uint name="nbConnections-6-28" val="0"/>
    <uint name="nbConnections-6-29" val="0"/>
    <uint name="nbConnections-6-30" val="0"/>
    <uint name="nbConnections-6-31" val="0"/>
    <uint name="nbConnections-6-32" val="0"/>
    <uint name="nbConnections-6-33" val="0"/>
    <uint name="nbConnections-6-34" val="0"/>
    <uint name="nbConnections-6-35" val="0"/>
    <uint name="nbConnections-6-36" val="0"/>
    <uint name="nbConnections-7-8" val="0"/>
    <uint name="nbConnections-7-9" val="0"/>
    <uint name="nbConnections-7-10" val="0"/>
    <uint name="nbConnections-7-11" val="0"/>
    <uint name="nbConnections-7-12" val="0"/>
    <uint name="nbConnections-7-13" val="0"/>
    <uint name="nbConnections-7-14" val="0"/>
    <uint name="nbConnections-7-15" val="0"/>
    <uint name="nbConnections-7-16" val="0"/>
    <uint name="nbConnections-7-17" val="0"/>
    <uint name="nbConnections-7-18" val="0"/>
    <uint name="nbConnections-7-19" val="0"/>
    <uint name="nbConnections-7-20" val="0"/>
    <uint name="nbConnections-7-21" val="0"/>
    <uint name="nbConnections-7-22" val="0"/>
    <uint name="nbConnections-7-23" val="0"/>
    <uint name="nbConnections-7-24" val="0"/>
    <uint name="nbConnections-7-25" val="0"/>
    <uint name="nbConnections-7-26" val="0"/>
    <uint name="nbConnections-7-27" val="0"/>
    <uint name="nbConnections-7-28" val="0"/>
    <uint name="nbConnections-7-29" val="0"/>
    <uint name="nbConnections-7-30" val="0"/>
    <uint name="nbConnections-7-31" val="0"/>
    <uint name="nbConnections-7-32" val="0"/>
    <uint name="nbConnections-7-33" val="0"/>
    <uint name="nbConnections-7-34" val="0"/>
    <uint name="nbConnections-7-35" val="0"/>
    <uint name="nbConnections-7-36" val="0"/>
    <uint name="nbConnections-8-9" val="1"/>
    <vector2u name="connection-8-9-0">
     <uint name="0" val="2"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-8-10" val="0"/>
    <uint name="nbConnections-8-11" val="0"/>
    <uint name="nbConnections-8-12" val="0"/>
    <uint name="nbConnections-8-13" val="0"/>
    <uint name="nbConnections-8-14" val="1"/>
    <vector2u name="connection-8-14-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-8-15" val="0"/>
    <uint name="nbConnections-8-16" val="0"/>
    <uint name="nbConnections-8-17" val="0"/>
    <uint name="nbConnections-8-18" val="0"/>
    <uint name="nbConnections-8-19" val="0"/>
    <uint name="nbConnections-8-20" val="0"/>
    <uint name="nbConnections-8-21" val="0"/>
    <uint name="nbConnections-8-22" val="0"/>
    <uint name="nbConnections-8-23" val="0"/>
    <uint name="nbConnections-8-24" val="0"/>
    <uint name="nbConnections-8-25" val="0"/>
    <uint name="nbConnections-8-26" val="0"/>
    <uint name="nbConnections-8-27" val="0"/>
    <uint name="nbConnections-8-28" val="0"/>
    <uint name="nbConnections-8-29" val="0"/>
    <uint name="nbConnections-8-30" val="0"/>
    <uint name="nbConnections-8-31" val="0"/>
    <uint name="nbConnections-8-32" val="1"/>
    <vector2u name="connection-8-32-0">
     <uint name="0" val="1"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-8-33" val="0"/>
    <uint name="nbConnections-8-34" val="0"/>
    <uint name="nbConnections-8-35" val="0"/>
    <uint name="nbConnections-8-36" val="0"/>
    <uint name="nbConnections-9-10" val="0"/>
    <uint name="nbConnections-9-11" val="0"/>
    <uint name="nbConnections-9-12" val="0"/>
    <uint name="nbConnections-9-13" val="0"/>
    <uint name="nbConnections-9-14" val="0"/>
    <uint name="nbConnections-9-15" val="0"/>
    <uint name="nbConnections-9-16" val="0"/>
    <uint name="nbConnections-9-17" val="0"/>
    <uint name="nbConnections-9-18" val="0"/>
    <uint name="nbConnections-9-19" val="0"/>
    <uint name="nbConnections-9-20" val="0"/>
    <uint name="nbConnections-9-21" val="0"/>
    <uint name="nbConnections-9-22" val="0"/>
    <uint name="nbConnections-9-23" val="0"/>
    <uint name="nbConnections-9-24" val="0"/>
    <uint name="nbConnections-9-25" val="0"/>
    <uint name="nbConnections-9-26" val="0"/>
    <uint name="nbConnections-9-27" val="0"/>
    <uint name="nbConnections-9-28" val="0"/>
    <uint name="nbConnections-9-29" val="0"/>
    <uint name="nbConnections-9-30" val="0"/>
    <uint name="nbConnections-9-31" val="0"/>
    <uint name="nbConnections-9-32" val="0"/>
    <uint name="nbConnections-9-33" val="0"/>
    <uint name="nbConnections-9-34" val="0"/>
    <uint name="nbConnections-9-35" val="0"/>
    <uint name="nbConnections-9-36" val="0"/>
    <uint name="nbConnections-10-11" val="1"/>
    <vector2u name="connection-10-11-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-10-12" val="0"/>
    <uint name="nbConnections-10-13" val="0"/>
    <uint name="nbConnections-10-14" val="0"/>
    <uint name="nbConnections-10-15" val="0"/>
    <uint name="nbConnections-10-16" val="0"/>
    <uint name="nbConnections-10-17" val="0"/>
    <uint name="nbConnections-10-18" val="0"/>
    <uint name="nbConnections-10-19" val="0"/>
    <uint name="nbConnections-10-20" val="0"/>
    <uint name="nbConnections-10-21" val="0"/>
    <uint name="nbConnections-10-22" val="0"/>
    <uint name="nbConnections-10-23" val="0"/>
    <uint name="nbConnections-10-24" val="0"/>
    <uint name="nbConnections-10-25" val="0"/>
    <uint name="nbConnections-10-26" val="0"/>
    <uint name="nbConnections-10-27" val="0"/>
    <uint name="nbConnections-10-28" val="0"/>
    <uint name="nbConnections-10-29" val="0"/>
    <uint name="nbConnections-10-30" val="0"/>
    <uint name="nbConnections-10-31" val="0"/>
    <uint name="nbConnections-10-32" val="0"/>
    <uint name="nbConnections-10-33" val="0"/>
    <uint name="nbConnections-10-34" val="0"/>
    <uint name="nbConnections-10-35" val="0"/>
    <uint name="nbConnections-10-36" val="0"/>
    <uint name="nbConnections-11-12" val="0"/>
    <uint name="nbConnections-11-13" val="0"/>
    <uint name="nbConnections-11-14" val="0"/>
    <uint name="nbConnections-11-15" val="0"/>
    <uint name="nbConnections-11-16" val="0"/>
    <uint name="nbConnections-11-17" val="0"/>
    <uint name="nbConnections-11-18" val="0"/>
    <uint name="nbConnections-11-19" val="0"/>
    <uint name="nbConnections-11-20" val="0"/>
    <uint name="nbConnections-11-21" val="0"/>
    <uint name="nbConnections-11-22" val="0"/>
    <uint name="nbConnections-11-23" val="0"/>
    <uint name="nbConnections-11-24" val="0"/>
    <uint name="nbConnections-11-25" val="0"/>
    <uint name="nbConnections-11-26" val="0"/>
    <uint name="nbConnections-11-27" val="0"/>
    <uint name="nbConnections-11-28" val="0"/>
    <uint name="nbConnections-11-29" val="0"/>
    <uint name="nbConnections-11-30" val="0"/>
    <uint name="nbConnections-11-31" val="0"/>
    <uint name="nbConnections-11-32" val="0"/>
    <uint name="nbConnections-11-33" val="0"/>
    <uint name="nbConnections-11-34" val="0"/>
    <uint name="nbConnections-11-35" val="0"/>
    <uint name="nbConnections-11-36" val="0"/>
    <uint name="nbConnections-12-13" val="0"/>
    <uint name="nbConnections-12-14" val="1"/>
    <vector2u name="connection-12-14-0">
     <uint name="0" val="0"/>
     <uint name="1" val="2"/>
    </vector2u>
    <uint name="nbConnections-12-15" val="0"/>
    <uint name="nbConnections-12-16" val="0"/>
    <uint name="nbConnections-12-17" val="0"/>
    <uint name="nbConnections-12-18" val="0"/>
    <uint name="nbConnections-12-19" val="0"/>
    <uint name="nbConnections-12-20" val="0"/>
    <uint name="nbConnections-12-21" val="0"/>
    <uint name="nbConnections-12-22" val="0"/>
    <uint name="nbConnections-12-23" val="0"/>
    <uint name="nbConnections-12-24" val="0"/>
    <uint name="nbConnections-12-25" val="0"/>
    <uint name="nbConnections-12-26" val="0"/>
    <uint name="nbConnections-12-27" val="0"/>
    <uint name="nbConnections-12-28" val="0"/>
    <uint name="nbConnections-12-29" val="0"/>
    <uint name="nbConnections-12-30" val="0"/>
    <uint name="nbConnections-12-31" val="0"/>
    <uint name="nbConnections-12-32" val="0"/>
    <uint name="nbConnections-12-33" val="0"/>
    <uint name="nbConnections-12-34" val="0"/>
    <uint name="nbConnections-12-35" val="0"/>
    <uint name="nbConnections-12-36" val="0"/>
    <uint name="nbConnections-13-14" val="1"/>
    <vector2u name="connection-13-14-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-13-15" val="0"/>
    <uint name="nbConnections-13-16" val="0"/>
    <uint name="nbConnections-13-17" val="0"/>
    <uint name="nbConnections-13-18" val="0"/>
    <uint name="nbConnections-13-19" val="0"/>
    <uint name="nbConnections-13-20" val="0"/>
    <uint name="nbConnections-13-21" val="0"/>
    <uint name="nbConnections-13-22" val="0"/>
    <uint name="nbConnections-13-23" val="0"/>
    <uint name="nbConnections-13-24" val="0"/>
    <uint name="nbConnections-13-25" val="0"/>
    <uint name="nbConnections-13-26" val="0"/>
    <uint name="nbConnections-13-27" val="0"/>
    <uint name="nbConnections-13-28" val="0"/>
    <uint name="nbConnections-13-29" val="0"/>
    <uint name="nbConnections-13-30" val="0"/>
    <uint name="nbConnections-13-31" val="0"/>
    <uint name="nbConnections-13-32" val="0"/>
    <uint name="nbConnections-13-33" val="0"/>
    <uint name="nbConnections-13-34" val="0"/>
    <uint name="nbConnections-13-35" val="0"/>
    <uint name="nbConnections-13-36" val="0"/>
    <uint name="nbConnections-14-15" val="1"/>
    <vector2u name="connection-14-15-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-14-16" val="0"/>
    <uint name="nbConnections-14-17" val="0"/>
    <uint name="nbConnections-14-18" val="0"/>
    <uint name="nbConnections-14-19" val="0"/>
    <uint name="nbConnections-14-20" val="0"/>
    <uint name="nbConnections-14-21" val="0"/>
    <uint name="nbConnections-14-22" val="0"/>
    <uint name="nbConnections-14-23" val="0"/>
    <uint name="nbConnections-14-24" val="0"/>
    <uint name="nbConnections-14-25" val="0"/>
    <uint name="nbConnections-14-26" val="0"/>
    <uint name="nbConnections-14-27" val="0"/>
    <uint name="nbConnections-14-28" val="0"/>
    <uint name="nbConnections-14-29" val="0"/>
    <uint name="nbConnections-14-30" val="0"/>
    <uint name="nbConnections-14-31" val="0"/>
    <uint name="nbConnections-14-32" val="0"/>
    <uint name="nbConnections-14-33" val="0"/>
    <uint name="nbConnections-14-34" val="0"/>
    <uint name="nbConnections-14-35" val="0"/>
    <uint name="nbConnections-14-36" val="0"/>
    <uint name="nbConnections-15-16" val="0"/>
    <uint name="nbConnections-15-17" val="0"/>
    <uint name="nbConnections-15-18" val="0"/>
    <uint name="nbConnections-15-19" val="0"/>
    <uint name="nbConnections-15-20" val="0"/>
    <uint name="nbConnections-15-21" val="0"/>
    <uint name="nbConnections-15-22" val="0"/>
    <uint name="nbConnections-15-23" val="0"/>
    <uint name="nbConnections-15-24" val="0"/>
    <uint name="nbConnections-15-25" val="0"/>
    <uint name="nbConnections-15-26" val="0"/>
    <uint name="nbConnections-15-27" val="0"/>
    <uint name="nbConnections-15-28" val="0"/>
    <uint name="nbConnections-15-29" val="0"/>
    <uint name="nbConnections-15-30" val="0"/>
    <uint name="nbConnections-15-31" val="1"/>
    <vector2u name="connection-15-31-0">
     <uint name="0" val="0"/>
     <uint name="1" val="3"/>
    </vector2u>
    <uint name="nbConnections-15-32" val="0"/>
    <uint name="nbConnections-15-33" val="0"/>
    <uint name="nbConnections-15-34" val="0"/>
    <uint name="nbConnections-15-35" val="0"/>
    <uint name="nbConnections-15-36" val="0"/>
    <uint name="nbConnections-16-17" val="0"/>
    <uint name="nbConnections-16-18" val="0"/>
    <uint name="nbConnections-16-19" val="1"/>
    <vector2u name="connection-16-19-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-16-20" val="0"/>
    <uint name="nbConnections-16-21" val="0"/>
    <uint name="nbConnections-16-22" val="0"/>
    <uint name="nbConnections-16-23" val="0"/>
    <uint name="nbConnections-16-24" val="0"/>
    <uint name="nbConnections-16-25" val="0"/>
    <uint name="nbConnections-16-26" val="0"/>
    <uint name="nbConnections-16-27" val="0"/>
    <uint name="nbConnections-16-28" val="0"/>
    <uint name="nbConnections-16-29" val="0"/>
    <uint name="nbConnections-16-30" val="0"/>
    <uint name="nbConnections-16-31" val="0"/>
    <uint name="nbConnections-16-32" val="0"/>
    <uint name="nbConnections-16-33" val="0"/>
    <uint name="nbConnections-16-34" val="0"/>
    <uint name="nbConnections-16-35" val="0"/>
    <uint name="nbConnections-16-36" val="0"/>
    <uint name="nbConnections-17-18" val="1"/>
    <vector2u name="connection-17-18-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-17-19" val="0"/>
    <uint name="nbConnections-17-20" val="0"/>
    <uint name="nbConnections-17-21" val="0"/>
    <uint name="nbConnections-17-22" val="0"/>
    <uint name="nbConnections-17-23" val="0"/>
    <uint name="nbConnections-17-24" val="0"/>
    <uint name="nbConnections-17-25" val="0"/>
    <uint name="nbConnections-17-26" val="0"/>
    <uint name="nbConnections-17-27" val="0"/>
    <uint name="nbConnections-17-28" val="0"/>
    <uint name="nbConnections-17-29" val="0"/>
    <uint name="nbConnections-17-30" val="0"/>
    <uint name="nbConnections-17-31" val="0"/>
    <uint name="nbConnections-17-32" val="0"/>
    <uint name="nbConnections-17-33" val="0"/>
    <uint name="nbConnections-17-34" val="0"/>
    <uint name="nbConnections-17-35" val="0"/>
    <uint name="nbConnections-17-36" val="0"/>
    <uint name="nbConnections-18-19" val="1"/>
    <vector2u name="connection-18-19-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-18-20" val="0"/>
    <uint name="nbConnections-18-21" val="0"/>
    <uint name="nbConnections-18-22" val="0"/>
    <uint name="nbConnections-18-23" val="0"/>
    <uint name="nbConnections-18-24" val="0"/>
    <uint name="nbConnections-18-25" val="0"/>
    <uint name="nbConnections-18-26" val="0"/>
    <uint name="nbConnections-18-27" val="0"/>
    <uint name="nbConnections-18-28" val="0"/>
    <uint name="nbConnections-18-29" val="0"/>
    <uint name="nbConnections-18-30" val="0"/>
    <uint name="nbConnections-18-31" val="0"/>
    <uint name="nbConnections-18-32" val="0"/>
    <uint name="nbConnections-18-33" val="0"/>
    <uint name="nbConnections-18-34" val="0"/>
    <uint name="nbConnections-18-35" val="0"/>
    <uint name="nbConnections-18-36" val="0"/>
    <uint name="nbConnections-19-20" val="1"/>
    <vector2u name="connection-19-20-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-19-21" val="0"/>
    <uint name="nbConnections-19-22" val="0"/>
    <uint name="nbConnections-19-23" val="0"/>
    <uint name="nbConnections-19-24" val="0"/>
    <uint name="nbConnections-19-25" val="0"/>
    <uint name="nbConnections-19-26" val="0"/>
    <uint name="nbConnections-19-27" val="0"/>
    <uint name="nbConnections-19-28" val="0"/>
    <uint name="nbConnections-19-29" val="0"/>
    <uint name="nbConnections-19-30" val="0"/>
    <uint name="nbConnections-19-31" val="0"/>
    <uint name="nbConnections-19-32" val="0"/>
    <uint name="nbConnections-19-33" val="0"/>
    <uint name="nbConnections-19-34" val="0"/>
    <uint name="nbConnections-19-35" val="0"/>
    <uint name="nbConnections-19-36" val="0"/>
    <uint name="nbConnections-20-21" val="0"/>
    <uint name="nbConnections-20-22" val="0"/>
    <uint name="nbConnections-20-23" val="0"/>
    <uint name="nbConnections-20-24" val="0"/>
    <uint name="nbConnections-20-25" val="0"/>
    <uint name="nbConnections-20-26" val="0"/>
    <uint name="nbConnections-20-27" val="0"/>
    <uint name="nbConnections-20-28" val="0"/>
    <uint name="nbConnections-20-29" val="0"/>
    <uint name="nbConnections-20-30" val="1"/>
    <vector2u name="connection-20-30-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-20-31" val="1"/>
    <vector2u name="connection-20-31-0">
     <uint name="0" val="0"/>
     <uint name="1" val="4"/>
    </vector2u>
    <uint name="nbConnections-20-32" val="0"/>
    <uint name="nbConnections-20-33" val="0"/>
    <uint name="nbConnections-20-34" val="0"/>
    <uint name="nbConnections-20-35" val="0"/>
    <uint name="nbConnections-20-36" val="0"/>
    <uint name="nbConnections-21-22" val="1"/>
    <vector2u name="connection-21-22-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-21-23" val="0"/>
    <uint name="nbConnections-21-24" val="0"/>
    <uint name="nbConnections-21-25" val="0"/>
    <uint name="nbConnections-21-26" val="0"/>
    <uint name="nbConnections-21-27" val="0"/>
    <uint name="nbConnections-21-28" val="0"/>
    <uint name="nbConnections-21-29" val="0"/>
    <uint name="nbConnections-21-30" val="0"/>
    <uint name="nbConnections-21-31" val="0"/>
    <uint name="nbConnections-21-32" val="0"/>
    <uint name="nbConnections-21-33" val="0"/>
    <uint name="nbConnections-21-34" val="0"/>
    <uint name="nbConnections-21-35" val="0"/>
    <uint name="nbConnections-21-36" val="0"/>
    <uint name="nbConnections-22-23" val="1"/>
    <vector2u name="connection-22-23-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-22-24" val="0"/>
    <uint name="nbConnections-22-25" val="0"/>
    <uint name="nbConnections-22-26" val="0"/>
    <uint name="nbConnections-22-27" val="0"/>
    <uint name="nbConnections-22-28" val="0"/>
    <uint name="nbConnections-22-29" val="0"/>
    <uint name="nbConnections-22-30" val="0"/>
    <uint name="nbConnections-22-31" val="0"/>
    <uint name="nbConnections-22-32" val="0"/>
    <uint name="nbConnections-22-33" val="0"/>
    <uint name="nbConnections-22-34" val="0"/>
    <uint name="nbConnections-22-35" val="0"/>
    <uint name="nbConnections-22-36" val="0"/>
    <uint name="nbConnections-23-24" val="1"/>
    <vector2u name="connection-23-24-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-23-25" val="1"/>
    <vector2u name="connection-23-25-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-23-26" val="1"/>
    <vector2u name="connection-23-26-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-23-27" val="0"/>
    <uint name="nbConnections-23-28" val="0"/>
    <uint name="nbConnections-23-29" val="0"/>
    <uint name="nbConnections-23-30" val="0"/>
    <uint name="nbConnections-23-31" val="0"/>
    <uint name="nbConnections-23-32" val="0"/>
    <uint name="nbConnections-23-33" val="0"/>
    <uint name="nbConnections-23-34" val="0"/>
    <uint name="nbConnections-23-35" val="0"/>
    <uint name="nbConnections-23-36" val="0"/>
    <uint name="nbConnections-24-25" val="0"/>
    <uint name="nbConnections-24-26" val="0"/>
    <uint name="nbConnections-24-27" val="0"/>
    <uint name="nbConnections-24-28" val="0"/>
    <uint name="nbConnections-24-29" val="0"/>
    <uint name="nbConnections-24-30" val="0"/>
    <uint name="nbConnections-24-31" val="1"/>
    <vector2u name="connection-24-31-0">
     <uint name="0" val="0"/>
     <uint name="1" val="6"/>
    </vector2u>
    <uint name="nbConnections-24-32" val="0"/>
    <uint name="nbConnections-24-33" val="0"/>
    <uint name="nbConnections-24-34" val="0"/>
    <uint name="nbConnections-24-35" val="0"/>
    <uint name="nbConnections-24-36" val="0"/>
    <uint name="nbConnections-25-26" val="1"/>
    <vector2u name="connection-25-26-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-25-27" val="0"/>
    <uint name="nbConnections-25-28" val="0"/>
    <uint name="nbConnections-25-29" val="0"/>
    <uint name="nbConnections-25-30" val="0"/>
    <uint name="nbConnections-25-31" val="0"/>
    <uint name="nbConnections-25-32" val="0"/>
    <uint name="nbConnections-25-33" val="0"/>
    <uint name="nbConnections-25-34" val="0"/>
    <uint name="nbConnections-25-35" val="0"/>
    <uint name="nbConnections-25-36" val="0"/>
    <uint name="nbConnections-26-27" val="1"/>
    <vector2u name="connection-26-27-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-26-28" val="0"/>
    <uint name="nbConnections-26-29" val="0"/>
    <uint name="nbConnections-26-30" val="0"/>
    <uint name="nbConnections-26-31" val="0"/>
    <uint name="nbConnections-26-32" val="0"/>
    <uint name="nbConnections-26-33" val="0"/>
    <uint name="nbConnections-26-34" val="0"/>
    <uint name="nbConnections-26-35" val="0"/>
    <uint name="nbConnections-26-36" val="0"/>
    <uint name="nbConnections-27-28" val="0"/>
    <uint name="nbConnections-27-29" val="0"/>
    <uint name="nbConnections-27-30" val="0"/>
    <uint name="nbConnections-27-31" val="1"/>
    <vector2u name="connection-27-31-0">
     <uint name="0" val="0"/>
     <uint name="1" val="7"/>
    </vector2u>
    <uint name="nbConnections-27-32" val="0"/>
    <uint name="nbConnections-27-33" val="0"/>
    <uint name="nbConnections-27-34" val="0"/>
    <uint name="nbConnections-27-35" val="0"/>
    <uint name="nbConnections-27-36" val="0"/>
    <uint name="nbConnections-28-29" val="1"/>
    <vector2u name="connection-28-29-0">
     <uint name="0" val="0"/>
     <uint name="1" val="1"/>
    </vector2u>
    <uint name="nbConnections-28-30" val="0"/>
    <uint name="nbConnections-28-31" val="0"/>
    <uint name="nbConnections-28-32" val="0"/>
    <uint name="nbConnections-28-33" val="0"/>
    <uint name="nbConnections-28-34" val="0"/>
    <uint name="nbConnections-28-35" val="0"/>
    <uint name="nbConnections-28-36" val="0"/>
    <uint name="nbConnections-29-30" val="1"/>
    <vector2u name="connection-29-30-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-29-31" val="0"/>
    <uint name="nbConnections-29-32" val="0"/>
    <uint name="nbConnections-29-33" val="0"/>
    <uint name="nbConnections-29-34" val="0"/>
    <uint name="nbConnections-29-35" val="0"/>
    <uint name="nbConnections-29-36" val="0"/>
    <uint name="nbConnections-30-31" val="1"/>
    <vector2u name="connection-30-31-0">
     <uint name="0" val="0"/>
     <uint name="1" val="5"/>
    </vector2u>
    <uint name="nbConnections-30-32" val="0"/>
    <uint name="nbConnections-30-33" val="0"/>
    <uint name="nbConnections-30-34" val="0"/>
    <uint name="nbConnections-30-35" val="0"/>
    <uint name="nbConnections-30-36" val="0"/>
    <uint name="nbConnections-31-32" val="0"/>
    <uint name="nbConnections-31-33" val="0"/>
    <uint name="nbConnections-31-34" val="0"/>
    <uint name="nbConnections-31-35" val="0"/>
    <uint name="nbConnections-31-36" val="0"/>
    <uint name="nbConnections-32-33" val="0"/>
    <uint name="nbConnections-32-34" val="0"/>
    <uint name="nbConnections-32-35" val="0"/>
    <uint name="nbConnections-32-36" val="0"/>
    <uint name="nbConnections-33-34" val="1"/>
    <vector2u name="connection-33-34-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-33-35" val="0"/>
    <uint name="nbConnections-33-36" val="0"/>
    <uint name="nbConnections-34-35" val="0"/>
    <uint name="nbConnections-34-36" val="0"/>
    <uint name="nbConnections-35-36" val="0"/>
    <bool name="nodeHasWidget-0" val="1"/>
    <IOData name="node-0">
     <string name="filename" val="../../data/models/taurus.obj"/>
     <IOData name="camera">
      <int name="projType" val="0"/>
      <int name="rotType" val="1"/>
      <vector2i name="viewport">
       <int name="0" val="512"/>
       <int name="1" val="512"/>
      </vector2i>
      <vector3f name="sceneCenter">
       <float name="0" val="0.743156"/>
       <float name="1" val="1.00008"/>
       <float name="2" val="0.803253"/>
      </vector3f>
      <float name="sceneRadius" val="1.24395"/>
      <float name="fovy" val="45"/>
      <vector3f name="shift">
       <float name="0" val="-0.106326"/>
       <float name="1" val="0.00209975"/>
       <float name="2" val="1.5185"/>
      </vector3f>
      <IOData name="trackball">
       <quaternionf name="rotation">
        <float name="0" val="0.938501"/>
        <float name="1" val="-0.0074704"/>
        <float name="2" val="0.344082"/>
        <float name="3" val="-0.0277232"/>
       </quaternionf>
       <vector2f name="screenCenter">
        <float name="0" val="256"/>
        <float name="1" val="256"/>
       </vector2f>
       <float name="screenRadius" val="512"/>
      </IOData>
     </IOData>
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="AdvancedGBuffers"/>
     <bool name="genericUseVertex" val="1"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="1"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec3 inVertex;&#xa;layout(location = 1) in vec3 inNormal;&#xa;layout(location = 2) in vec3 inTangent;&#xa;layout(location = 3) in vec2 inTexcoord;&#xa;uniform float rotate;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;"/>
     <string name="genericVertBody" val="layout(location = 0) out vec3 vfNormal;&#xa;layout(location = 1) out vec3 vfTangent;&#xa;layout(location = 2) out vec2 vfTexcoord;&#xa;layout(location = 3) out float  vfDepthV;&#xa;layout(location = 4) out vec3 pos;&#xa;layout(location = 5) out float matID;&#xa;layout(location = 6) out vec3 wfNormal;&#xa;&#xa;#define PI 3.1415926535898&#xa;&#xa;vec2 rotate2D(in vec2 v,in float angle,in vec2 c) {&#xa;  // rotation of v around c with a particular angle&#xa;  vec2 T = v-c;&#xa;  return vec2(cos(angle)*T.x-sin(angle)*T.y,&#xa;&#x9;      sin(angle)*T.x+cos(angle)*T.y) + c;&#xa;}&#xa;&#xa;mat3 rotMat(in float angle) {&#xa;&#x9;return mat3(&#xa;&#x9;vec3(cos(angle),0.,-sin(angle)),&#xa;&#x9;vec3(0.,1.,0.),&#xa;&#x9;vec3(sin(angle),0.,cos(angle)));&#xa;}&#xa;&#xa;&#xa;void main() {&#xa;&#x9;mat4 mdv    = view*model;&#xa;&#x9;mat4 mvp    = proj*mdv;&#xa;&#xa;&#x9;vec3 p = inVertex;&#xa;&#x9;p = rotMat(rotate)*p;&#xa;&#xa;&#x9;pos = p;&#xa;&#x9;vfNormal = (mdv*vec4(inNormal,0)).xyz;&#xa;&#x9;wfNormal = inNormal;&#xa;&#x9;vfTangent = (mdv*vec4(inTangent,0)).xyz;&#xa;&#x9;vfTexcoord = inTexcoord;&#xa;&#x9;vfDepthV = -(mdv*vec4(p,1)).z;&#xa;&#xa;&#x9;gl_Position = mvp*vec4(p,1);&#xa;&#x9;matID = float(objectID+1);&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 cameraParameters;&#xa;layout(location = 1) out vec4 normalVBuffer;&#xa;layout(location = 2) out vec4 normalWBuffer;&#xa;layout(location = 3) out vec4 tangentVBuffer;&#xa;layout(location = 4) out vec4 coordBuffer;&#xa;layout(location = 5) out vec4 positionsBuffer;&#xa;layout(location = 6) out vec4 depthBuffer;&#xa;layout(location = 7) out vec4 mask;&#xa;uniform float rotate;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;"/>
     <string name="genericFragBody" val="layout(location = 0) in vec3 vfNormal;&#xa;layout(location = 1) in vec3 vfTangent;&#xa;layout(location = 2) in vec2 vfTexcoord;&#xa;layout(location = 3) in float vfDepthV;&#xa;layout(location = 4) in vec3 pos;&#xa;layout(location = 5) in float matID;&#xa;layout(location = 6) in vec3 wfNormal;&#xa;&#xa;void main() {&#xa;&#x9;vec3 n = normalize(vfNormal);&#xa;&#x9;vec3 t = normalize(vfTangent);&#xa;&#x9;vec2 uv = vfTexcoord;&#xa;&#x9;float d = vfDepthV;&#xa;&#xa;&#xa;&#x9;tangentVBuffer = vec4(t,1.0);&#xa;&#x9;coordBuffer = vec4(uv, 0.0, 1.0);&#xa;&#x9;normalVBuffer = vec4(n,1.);&#xa;&#x9;normalWBuffer = vec4(normalize(wfNormal),1.);&#xa;&#x9;cameraParameters = vec4(0.);&#xa;&#x9;positionsBuffer = vec4(pos,1);&#xa;&#x9;depthBuffer = vec4(d,d,d,1.);&#xa;&#x9;mask = vec4(vec3(objectID+1),1.0f);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 3) out;&#xa;uniform float rotate;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform float rotate;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;"/>
     <string name="genericTessEBody" val="layout(triangles,equal_spacing,ccw) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = gl_TessCoord.x*gl_in[0].gl_Position;&#xa;&#x9;vec4 p2 = gl_TessCoord.y*gl_in[1].gl_Position;&#xa;&#x9;vec4 p3 = gl_TessCoord.z*gl_in[2].gl_Position;&#xa;&#x9;gl_Position = p1+p2+p3;&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform float rotate;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform mat4 prevModel;&#xa;uniform mat4 prevView;&#xa;uniform mat4 prevProj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;uniform vec3 modelAABBMin;&#xa;uniform vec3 modelAABBMax;&#xa;uniform int objectID;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}&#xa;"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="1"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="rotate"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
    </IOData>
    <IOData name="nodeWidget-0">
     <uint name="nbChildren" val="5"/>
     <IOData name="childWidget-0">
      <bool name="trackballCameraKeyframed" val="1"/>
      <IOData name="trackballCameraAttribCurveQ">
       <quaternionf name="currentVal">
        <float name="0" val="0.938501"/>
        <float name="1" val="-0.0074704"/>
        <float name="2" val="0.344082"/>
        <float name="3" val="-0.0277232"/>
       </quaternionf>
       <uint name="nbCurves" val="4"/>
       <IOData name="curve-0">
        <int name="interpType" val="2"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="2"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.9385"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float name="0" val="109"/>
          <float name="1" val="0.938501"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="3"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="2"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="-0.0074704"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float name="0" val="109"/>
          <float name="1" val="-0.0074704"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="2"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="2"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.344081"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float name="0" val="109"/>
          <float name="1" val="0.344082"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-3">
        <int name="interpType" val="4"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="2"/>
         <uint name="nbTangents" val="2"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="-0.0277232"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float name="0" val="109"/>
          <float name="1" val="-0.0277232"/>
         </vector2f>
         <vector4f name="controlTangent-0">
          <float name="0" val="2"/>
          <float name="1" val="0"/>
          <float name="2" val="-2"/>
          <float name="3" val="0"/>
         </vector4f>
         <vector4f name="controlTangent-1">
          <float name="0" val="2"/>
          <float name="1" val="0"/>
          <float name="2" val="-2"/>
          <float name="3" val="0"/>
         </vector4f>
        </IOData>
       </IOData>
      </IOData>
      <IOData name="trackballCameraAttribCurveS">
       <vector3f name="currentVal">
        <float name="0" val="-0.106326"/>
        <float name="1" val="0.00209975"/>
        <float name="2" val="1.5185"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="4"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float name="0" val="109"/>
          <float name="1" val="-0.0853129"/>
         </vector2f>
         <vector2f name="controlPoint-2">
          <float name="0" val="145.145"/>
          <float name="1" val="-0.113603"/>
         </vector2f>
         <vector2f name="controlPoint-3">
          <float name="0" val="299"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="2"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.00209975"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float name="0" val="109"/>
          <float name="1" val="0.00209975"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="2"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="3.02374"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float name="0" val="111.509"/>
          <float name="1" val="1.5185"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <int name="projection" val="0"/>
      <int name="rotation" val="1"/>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="6.28319"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="2"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float name="0" val="109"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="6.28319"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="1.59044"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="2"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.76682"/>
         </vector2f>
         <vector2f name="controlPoint-1">
          <float name="0" val="109"/>
          <float name="1" val="1.59044"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="6.28319"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="2.17273e-8"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeOutputPos-0-0">
     <float name="0" val="56.32"/>
     <float name="1" val="4364.8"/>
    </vector2f>
    <vector2f name="nodeOutputPos-0-1">
     <float name="0" val="56.32"/>
     <float name="1" val="3745.28"/>
    </vector2f>
    <vector2f name="nodeOutputPos-0-2">
     <float name="0" val="56.32"/>
     <float name="1" val="3125.76"/>
    </vector2f>
    <vector2f name="nodeOutputPos-0-3">
     <float name="0" val="56.32"/>
     <float name="1" val="2506.24"/>
    </vector2f>
    <vector2f name="nodeOutputPos-0-4">
     <float name="0" val="56.32"/>
     <float name="1" val="1886.72"/>
    </vector2f>
    <vector2f name="nodeOutputPos-0-5">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeOutputPos-0-6">
     <float name="0" val="56.32"/>
     <float name="1" val="647.68"/>
    </vector2f>
    <vector2f name="nodeOutputPos-0-7">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-1" val="1"/>
    <IOData name="node-1">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="depthMasked"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord)*texture(inBuffer1,texcoord).x;&#xa;&#x9;//outBuffer0.a = texture(inBuffer1,texcoord).x;&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-1">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-1-0">
     <float name="0" val="56.32"/>
     <float name="1" val="647.68"/>
    </vector2f>
    <vector2f name="nodeInputPos-1-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-1-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-2" val="1"/>
    <IOData name="node-2">
     <int name="processMode" val="0"/>
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="globalMaxMinDepth"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 maxMinDepth;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;if(isFinest)&#xa;&#x9;&#x9;maxMinDepth = texture(image,texcoord);&#xa;&#x9;else {&#xa;&#x9;&#x9;vec2 ps = .5/vec2(textureSize(prevLevel0,0));&#xa;&#x9;&#x9;&#xa;&#x9;&#x9;vec4 c[4];&#xa;&#x9;&#x9;c[0] = texture(prevLevel0,texcoord+ps);&#xa;&#x9;&#x9;c[1] = texture(prevLevel0,texcoord-ps);&#xa;&#x9;&#x9;c[2] = texture(prevLevel0,texcoord+vec2(ps.x,-ps.y));&#xa;&#x9;&#x9;c[3] = texture(prevLevel0,texcoord+vec2(-ps.x,ps.y));&#xa;&#xa;&#x9;&#x9;const float T = .9;&#xa;&#x9;&#x9;float cmin = 1e+10;&#xa;&#x9;&#x9;float cmax = 0.;&#xa;&#x9;&#x9;float alpha = 0.;&#xa;&#xa;&#x9;&#x9;for(int i=0;i&lt;4;++i) {&#xa;&#x9;&#x9;&#x9;if(c[i].a>T) {&#xa;&#x9;&#x9;&#x9;&#x9;cmin = min(cmin,c[i].y);&#xa;&#x9;&#x9;&#x9;&#x9;cmax = max(cmax,c[i].x);&#xa;&#x9;&#x9;&#x9;&#x9;alpha = c[i].a;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;&#x9;}&#xa;&#xa;&#x9;&#x9;maxMinDepth = vec4(cmax,cmin,0.,alpha);&#xa;&#x9;}&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D image;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-2">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-2-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-2-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-3" val="1"/>
    <IOData name="node-3">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="normalizeDepth"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;vec2 s = textureSize(inBuffer0,0);&#xa;&#x9;float l = 1.+floor(log2(max(s.x,s.y)));&#xa;&#x9;vec4 dl = textureLod(inBuffer0,vec2(.5),l);&#xa;&#x9;vec4 d = texture(inBuffer0,texcoord);&#xa;&#xa;&#x9;float nd = (d.x-dl.y)/((dl.x-dl.y));&#xa;&#xa;&#x9;outBuffer0 = vec4(nd,nd,nd,d.w);&#xa;&#x9;if(d.w&lt;0.5) outBuffer0 = vec4(2,2,2,0.0);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-3">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-3-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-3-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-4" val="1"/>
    <IOData name="node-4">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = vec4(texture(inBuffer0,texcoord).xyz,texture(inBuffer1,texcoord).x);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-4">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-4-0">
     <float name="0" val="56.32"/>
     <float name="1" val="3745.28"/>
    </vector2f>
    <vector2f name="nodeInputPos-4-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-4-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-5" val="1"/>
    <IOData name="node-5">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="curvature"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D normalMap;&#xa;uniform float sigma;&#xa;uniform float scale;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 meanCurvatureMap;&#xa;uniform sampler2D normalMap;&#xa;uniform float sigma;&#xa;uniform float scale;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord; // current pixel coord&#xa;&#xa;#define F 3.0 // used to define the window size (sigma*F)&#xa;#define RESOL 2.0 // multisampling (increase resolution)&#xa;#define PI 3.14159265359&#xa;#define PI2 6.28318531&#xa;&#xa;float halfsize = ceil(F*sigma); // kernel halfsize&#xa;const float iresol = 1.0/RESOL; // step for sampling&#xa;const float eps = 1e-15;&#xa;&#xa;vec2 ps = 1./vec2(textureSize(normalMap,0)); // pixel size &#xa;&#xa;vec2 grad(in vec4 n) {&#xa;&#x9;const float f = 0.5; // forshortening in [0,1]. 1=a lot (true gradient), 0 = no forshortening. &#xa;&#x9;float d = -1./mix(1.,max(n.z,eps),f);&#xa;&#x9;return  vec2(n.x,n.y)*d;&#xa;}&#xa;&#xa;float weight(in vec4 cn,in vec4 on) {&#xa;&#x9;// the alpha value&#xa;&#x9;const float sd = 0.1; // sigma for checking differences in depth&#xa;&#x9;float d = on.w-cn.w;&#xa;&#x9;return min(length(cn.xyz),exp(-(d*d)/(2.*sd*sd)));&#xa;}&#xa;&#xa;vec2 mixedGrad(in vec2 gCenter,in vec2 gCurrent,in float w) {&#xa;&#x9;// takes weight into account to compute current value&#xa;&#x9;return mix(gCenter,gCurrent,w);&#xa;}&#xa;&#xa;vec3 hessianMatrix(in vec4 pixel) {&#xa;&#x9;// precompute gaussian data (factor/denom)&#xa;&#x9;float sigma2 = sigma*sigma;&#xa;&#x9;float sigma4 = sigma2*sigma2;&#xa;&#x9;float f = -1./(PI2*sigma4);&#xa;&#x9;float d = 2.0*sigma2;&#xa;&#xa;&#x9;vec3 H = vec3(0.);&#xa;&#x9;vec2 pg = grad(pixel); // gradient of the current pixel&#xa;&#x9;float pw = weight(pixel,pixel); // weight of the current pixel&#xa;&#xa;&#x9;for(float i=-halfsize;i&lt;=halfsize;i+=iresol) {&#xa;&#x9;&#x9;for(float j=-halfsize;j&lt;=halfsize;j+=iresol) {&#xa;&#x9;&#x9;&#x9;vec2 pos = vec2(i,j);&#xa;&#x9;&#x9;&#x9;vec4 n = texture(normalMap,texcoord+pos*ps);&#xa;&#x9;&#xa;&#x9;&#x9;&#x9;// current value (possibly mixed with the pixel)&#xa;&#x9;&#x9;&#x9;vec2 v = mixedGrad(pg,grad(n),weight(n,pixel));&#xa;&#x9;&#x9;&#x9;vec2 e = v*exp(-(pos.x*pos.x+pos.y*pos.y)/d);&#xa;&#xa;&#x9;&#x9;&#x9;// update Hessian&#xa;&#x9;&#x9;&#x9;H.x = H.x + pos.x*f*e.x; // gxx&#xa;&#x9;&#x9;&#x9;H.y = H.y + pos.y*f*e.y; // gyy&#xa;&#x9;&#x9;&#x9;H.z = H.z + .5*(pos.x*f*e.y + pos.y*f*e.x); // gxy (=gyx)&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;return H*pw;&#xa;}&#xa;&#xa;vec4 eigenValues(in vec3 m) {&#xa;&#x9;float tmp = max(sqrt(m.x*m.x+4.0*m.z*m.z-2.0*m.x*m.y+m.y*m.y),0.);&#xa;&#x9;float k1  = 0.5*(m.x+m.y+tmp);&#xa;&#x9;float k2  = 0.5*(m.x+m.y-tmp);&#xa;&#x9;vec2  d1  = vec2(m.z,k1-m.x);&#xa;  &#x9;vec2  d2  = vec2(k1-m.x,-m.z);&#xa;&#x9;&#xa;&#x9;d1 = length(d1)&lt;eps ? vec2(0.) : normalize(d1);&#xa;&#x9;d2 = length(d2)&lt;eps ? vec2(0.) : normalize(d2);&#xa;&#xa;&#x9;// return max dir, max eigen-val, min eigen-val&#xa;&#x9;return k1>k2 ? vec4(d1.x,d1.y,k1,k2) : vec4(d2.x,d2.y,k2,k1);&#xa;}&#xa;&#xa;&#xa;void main() {&#xa;&#x9;vec4 pix = texture(normalMap,texcoord);&#xa;&#x9;vec3 H = hessianMatrix(pix);&#xa;&#x9;vec4 ee = eigenValues(H);&#xa;&#x9;float mc = .5*(ee.z+ee.w);&#xa;&#xa;&#x9;float c = tanh(mc*scale);&#xa;&#x9;meanCurvatureMap = vec4(c,c,c,length(pix.xyz));&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D normalMap;&#xa;uniform float sigma;&#xa;uniform float scale;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D normalMap;&#xa;uniform float sigma;&#xa;uniform float scale;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D normalMap;&#xa;uniform float sigma;&#xa;uniform float scale;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="2"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="sigma"/>
     <bool name="genericWidgetKeyframed-0" val="0"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="scale"/>
     <bool name="genericWidgetKeyframed-1" val="0"/>
    </IOData>
    <IOData name="nodeWidget-5">
     <uint name="nbChildren" val="2"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0.1"/>
      <float name="floatAttribMaxVal" val="3"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="1.3818"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1.3818"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="20"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-5-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-5-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-6" val="1"/>
    <IOData name="node-6">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="3DGaborNoise"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float bandwidth;&#xa;uniform float truncate;&#xa;uniform float impulses;&#xa;uniform float scaling;&#xa;uniform float threshold;&#xa;uniform int type;&#xa;uniform int seed;&#xa;uniform vec3 orientation;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 proceduralTex;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float bandwidth;&#xa;uniform float truncate;&#xa;uniform float impulses;&#xa;uniform float scaling;&#xa;uniform float threshold;&#xa;uniform int type;&#xa;uniform int seed;&#xa;uniform vec3 orientation;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;/*&#xa; * Filtering Solid Gabor Noise&#xa; * &#xa; * Example code for the article&#xa; * Lagae, A. and Drettakis, G. 2011. Filtering Solid Gabor Noise.&#xa; * ACM Transactions on Graphics (Proceedings of ACM SIGGRAPH 2011) 30, 4.&#xa; * &#xa; * Copyright (C) 2011 Ares Lagae (ares.lagae@cs.kuleuven.be) and George&#xa; * Drettakis (george.drettakis@inria.fr)&#xa; * &#xa; * This work is licensed under a non-commercial license (see LICENSE.txt).&#xa; *&#xa; * Permissions beyond the scope of this license are be available from the&#xa; * authors.&#xa; *&#xa; * If you use this software, you must site the article.&#xa; */&#xa;&#xa;// -----------------------------------------------------------------------------&#xa;&#xa;const float pi = 3.14159265358979323846;&#xa;&#xa;// -----------------------------------------------------------------------------&#xa;&#xa;struct noise_prng&#xa;{&#xa;  uint x_;&#xa;};&#xa;&#xa;void noise_prng_srand(inout noise_prng this_, const in uint s)&#xa;{&#xa;  this_.x_ = s;&#xa;}&#xa;&#xa;uint noise_prng_rand(inout noise_prng this_)&#xa;{&#xa;  return this_.x_ *= 3039177861u;&#xa;}&#xa;      &#xa;float noise_prng_uniform_0_1(inout noise_prng this_)&#xa;{&#xa;  return float(noise_prng_rand(this_)) / float(4294967295u);&#xa;}&#xa;&#xa;float noise_prng_uniform(inout noise_prng this_, const in float min_, const in float max_)&#xa;{&#xa;  return min_ + (noise_prng_uniform_0_1(this_) * (max_ - min_));&#xa;}&#xa;&#xa;uint noise_prng_poisson(inout noise_prng this_, const in float mean)&#xa;{&#xa;  return uint(mean);&#xa;}&#xa;&#xa;// -----------------------------------------------------------------------------&#xa;&#xa;float noise_gabor_kernel_2d(const in float w, const in vec2 f, const in float phi, const in float a, const in vec2 x)&#xa;{&#xa;  // see Eqn. 1&#xa;  float g = exp(-pi * (a * a) * dot(x, x));&#xa;  float h = cos((2.0 * pi * dot(f, x)) + phi);&#xa;  return w * g * h;&#xa;}&#xa;&#xa;float noise_gabor_kernel_3d(const in float w, const in vec3 f, const in float phi, const in float a, const in vec3 x)&#xa;{&#xa;  // see Eqn. 1&#xa;  float g = exp(-pi * (a * a) * dot(x, x));&#xa;  float h = cos((2.0 * pi * dot(f, x)) + phi);&#xa;  return w * g * h;&#xa;}&#xa;&#xa;void noise_transform_gabor_kernel_3d(const in mat3 m, const in float w, const in float a, const in vec3 omega, const in float phi, out float w_t, out float a_t, out vec3 omega_t, out float phi_t)&#xa;{&#xa;  // see Sec. 5 (Transforming the Phase-Augmented Gabor kernel)&#xa;  w_t = w;&#xa;  a_t = a;&#xa;  omega_t = m * omega;&#xa;  phi_t = phi;&#xa;}&#xa;&#xa;void noise_slice_gabor_kernel_3d(float d, const in float w, const in float a, const in vec3 omega, const in float phi, out float w_s, out float a_s, out vec2 omega_s, out float phi_s)&#xa;{&#xa;  // see Eqn. 6&#xa;  w_s = w * exp(-(pi * (a * a) * (d * d)));&#xa;  a_s = a;&#xa;  omega_s = omega.xy;&#xa;  phi_s = phi - (2 * pi * d * omega.z);  &#xa;}&#xa;&#xa;void noise_filter_gabor_kernel_2d(const in mat2 filterMat, const in float w, const in float a, const in vec2 omega, const in float phi, out float w_f, out float a_f, out vec2 omega_f, out float phi_f)&#xa;{&#xa;  // see Eqn. 10&#xa;  mat2 Sigma_f = filterMat;&#xa;  float c_G = w;&#xa;  vec2 mu_G = omega;&#xa;  mat2 Sigma_G = ((a * a) / (2.0 * pi)) * mat2(1.0);&#xa;  float c_F = 1.0 / (2.0 * pi * sqrt(determinant(Sigma_f)));&#xa;  mat2 Sigma_F = (1.0 / (4.0 * (pi * pi))) * inverse(Sigma_f);&#xa;  mat2 Sigma_G_Sigma_F = Sigma_G + Sigma_F;&#xa;  float c_GF = c_F * c_G * ((1.0 / (2.0 * pi * sqrt(determinant(Sigma_G_Sigma_F)))) * exp(-((1.0 / 2.0) * (dot(mu_G * inverse(Sigma_G_Sigma_F), mu_G)))));&#xa;  mat2 Sigma_GF = inverse(inverse(Sigma_G) + inverse(Sigma_F));&#xa;  vec2 mu_GF = Sigma_GF * inverse(Sigma_G) * mu_G;&#xa;  w_f = c_GF;&#xa;  a_f = sqrt(2.0 * pi * sqrt(determinant(Sigma_GF)));&#xa;  omega_f = mu_GF;&#xa;  phi_f = phi;&#xa;}&#xa;&#xa;// -----------------------------------------------------------------------------&#xa;&#xa;struct noise&#xa;{&#xa;  float lambda_;&#xa;  float r_;&#xa;  uint seed_;&#xa;  vec3 omega_;&#xa;  float a_;&#xa;  int type_;&#xa;  bool filter_;&#xa;};&#xa;&#xa;void noise_constructor(out noise this_, const in float lambda, const in float r, const in uint seed, const in vec3 omega, const in float a, const in int type, const in bool filtered)&#xa;{&#xa;  this_.lambda_ = lambda;&#xa;  this_.r_ = r;&#xa;  this_.seed_ = seed;&#xa;  this_.omega_ = omega;&#xa;  this_.a_ = a;&#xa;  this_.type_ = type;&#xa;  this_.filter_ = filtered;&#xa;}&#xa;&#xa;void noise_sample(const in noise this_, inout noise_prng prng, out float w, out vec3 omega, out float phi, out float a)&#xa;{&#xa;  // see Sec. 3.3 (Different Kinds of Solid Random-Phase Gabor Noise)&#xa;  w = 1.0;&#xa;  if (this_.type_ == 0) {&#xa;    // anisotropic&#xa;    omega = this_.omega_;&#xa;  }&#xa;  else if (this_.type_ == 1) {&#xa;     // isotropic&#xa;    float f = length(this_.omega_);&#xa;    float omega_r = f;&#xa;    float omega_t = noise_prng_uniform(prng, 0.0, 2.0 * pi);&#xa;    float omega_p = acos(noise_prng_uniform(prng, -1.0, +1.0));&#xa;    omega = omega_r * vec3(cos(omega_t) * sin(omega_p), sin(omega_t) * sin(omega_p), cos(omega_p));&#xa;  }&#xa;  else {&#xa;    // hybrid&#xa;    float f = length(this_.omega_);&#xa;    float omega_r = f;&#xa;    float omega_t = noise_prng_uniform(prng, 0.0, 2.0 * pi);&#xa;    omega = omega_r * vec3(cos(omega_t), sin(omega_t), 0.0);&#xa;  }&#xa;  phi = noise_prng_uniform(prng, 0.0, 2.0 * pi);&#xa;  a = this_.a_;&#xa;}&#xa;&#xa;float noise_cell(const in noise this_, const in ivec3 c, const in vec3 x_c, const in vec3 n, const in vec3 t, const in vec3 b, const in mat2 filterMat)&#xa;{&#xa;  const uint period = 256u;&#xa;  uint seed = (((((uint(c[2]) % period) * period) + (uint(c[1]) % period)) * period) + (uint(c[0]) % period)) + this_.seed_;&#xa;  if (seed == 0u) seed = 1u;&#xa;  noise_prng prng;&#xa;  noise_prng_srand(prng, seed);&#xa;  uint number_of_impulses = noise_prng_poisson(prng, this_.lambda_ * this_.r_ * this_.r_ * this_.r_);&#xa;  float sum = 0.0;&#xa;  for (uint i = 0u; i &lt; number_of_impulses; ++i) {&#xa;    vec3 x_i_c = vec3(noise_prng_uniform_0_1(prng), noise_prng_uniform_0_1(prng), noise_prng_uniform_0_1(prng));&#xa;    vec3 x_k_i = this_.r_ * (x_c - x_i_c);&#xa;    float w_i; vec3 omega_i; float phi_i, a_i;&#xa;    noise_sample(this_, prng, w_i, omega_i, phi_i, a_i);&#xa;    if (dot(x_k_i, x_k_i) &lt; (this_.r_ * this_.r_)) {&#xa;      if (this_.filter_ == false) {&#xa;        sum += noise_gabor_kernel_3d(w_i, omega_i, phi_i, a_i, x_k_i);&#xa;      }&#xa;      else {&#xa;        float d_i = -dot(n, x_k_i);&#xa;        mat3 m = transpose(mat3(t, b, n));&#xa;        float w_i_t; float a_i_t; vec3 omega_i_t; float phi_i_t;&#xa;        noise_transform_gabor_kernel_3d(m, w_i, a_i, omega_i, phi_i, w_i_t, a_i_t, omega_i_t, phi_i_t);        &#xa;        float w_i_t_s; float a_i_t_s; vec2 omega_i_t_s; float phi_i_t_s;&#xa;        noise_slice_gabor_kernel_3d(d_i, 1.0, a_i_t, omega_i_t, phi_i_t, w_i_t_s, a_i_t_s, omega_i_t_s, phi_i_t_s);&#xa;        float w_i_t_s_f; float a_i_t_s_f; vec2 omega_i_t_s_f; float phi_i_t_s_f;&#xa;        noise_filter_gabor_kernel_2d(filterMat, w_i_t_s, a_i_t_s, omega_i_t_s, phi_i_t_s, w_i_t_s_f, a_i_t_s_f, omega_i_t_s_f, phi_i_t_s_f);&#xa;        sum += noise_gabor_kernel_2d(w_i_t_s_f, omega_i_t_s_f, phi_i_t_s_f, a_i_t_s_f, (m * x_k_i).xy);&#xa;      }&#xa;    }&#xa;  }&#xa;  return sum;&#xa;}&#xa;&#xa;float noise_grid(const in noise this_, const in vec3 x_g, const in vec3 n, const in vec3 t, const in vec3 b, const in mat2 filterMat)&#xa;{&#xa;  vec3 int_x_g = floor(x_g);&#xa;  ivec3 c = ivec3(int_x_g);&#xa;  vec3 x_c = x_g - int_x_g;&#xa;  float sum = 0.0;&#xa;  ivec3 i;&#xa;  for (i[2] = -1; i[2] &lt;= +1; ++i[2]) {&#xa;    for (i[1] = -1; i[1] &lt;= +1; ++i[1]) {&#xa;      for (i[0] = -1; i[0] &lt;= +1; ++i[0]) {&#xa;        ivec3 c_i = c + i;&#xa;        vec3 x_c_i = x_c - i;&#xa;        sum += noise_cell(this_, c_i, x_c_i, n, t, b, filterMat);&#xa;      }&#xa;    }&#xa;  }&#xa;  return sum / sqrt(this_.lambda_);&#xa;}&#xa;&#xa;float noise_evaluate(const in noise this_, const in vec3 x, const in vec3 n, const in vec3 t, const in vec3 b, const in mat2 filterMat)&#xa;{&#xa;  vec3 x_g = x / this_.r_;&#xa;  return noise_grid(this_, x_g, n, t, b, filterMat);&#xa;}&#xa;&#xa;float noise_variance(const in noise this_)&#xa;{&#xa;  return (1.0 / (4.0 * sqrt(2.0) * (this_.a_ * this_.a_ * this_.a_)));&#xa;}&#xa;&#xa;// -----------------------------------------------------------------------------    &#xa;&#xa;vec3 perp(in vec3 v)&#xa;{&#xa;  vec3 abs_v = abs(v);&#xa;  if ((abs_v.x &lt;= abs_v.y) &amp;&amp; (abs_v.x &lt;= abs_v.z)) {&#xa;    return vec3(0, -v.z, v.y);&#xa;  }&#xa;  else if (abs_v.y &lt;= abs_v.z) {&#xa;    return vec3(-v.z, 0, v.x);&#xa;  }&#xa;  else {&#xa;    return vec3(-v.y, v.x, 0);&#xa;  }&#xa;}&#xa;&#xa;void main()&#xa;{  &#xa;&#x9;vec4 data = texture(inBuffer0,texcoord);&#xa;  noise n;&#xa;  vec3 omega = frequency * orientation;&#xa;  float a = (frequency * ((pow(2.0f, bandwidth) - 1.0f) / (pow(2.0f, bandwidth) + 1.0f))) * sqrt(pi / log(2.0f));&#xa;  float r = sqrt(-log(truncate) / pi) / a;&#xa;  float lambda = impulses / ((4.0f / 3.0f) * pi * (r * r * r));&#xa;  noise_constructor(n, lambda, r, seed, omega, a, type, false);&#xa;  vec3 n_tex = vec3(0,0,1);&#xa;&#xa;  vec3 x_tex = scaling*data.xyz;&#xa;&#xa;  // see Sec. 5 (Continuity of the Local Coordinate System)&#xa;  vec3 t_tex = vec3(1,0,0);&#xa;  vec3 b_tex = cross(n_tex, t_tex);&#xa;&#xa;  // see Sec. 5 (Definition of the Filtering Gaussian)&#xa;  mat2 M_scr_tan = mat2(transpose(mat3(t_tex, b_tex, n_tex)) * mat2x3(dFdx(x_tex), dFdy(x_tex)));&#xa;  float sigma_f_scr = 0.5;&#xa;  mat2 Sigma_f_scr = (sigma_f_scr * sigma_f_scr) * mat2(1.0);&#xa;  mat2 Sigma_f_tan = M_scr_tan * Sigma_f_scr * transpose(M_scr_tan);&#xa;&#xa;  float noise_e = noise_evaluate(n, x_tex, n_tex, t_tex, b_tex, Sigma_f_tan);&#xa;&#xa;  float scale = 0.5 / (3.0 * sqrt(noise_variance(n)));&#xa;  float bias = 0.5;&#xa;  float color = bias + (scale * noise_e);&#xa;&#xa;&#x9;color = smoothstep(0.5-threshold,0.5+threshold,color);&#xa;&#xa;  proceduralTex =  vec4(vec3(color),data.w);&#x9;&#xa;}"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float bandwidth;&#xa;uniform float truncate;&#xa;uniform float impulses;&#xa;uniform float scaling;&#xa;uniform float threshold;&#xa;uniform int type;&#xa;uniform int seed;&#xa;uniform vec3 orientation;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float bandwidth;&#xa;uniform float truncate;&#xa;uniform float impulses;&#xa;uniform float scaling;&#xa;uniform float threshold;&#xa;uniform int type;&#xa;uniform int seed;&#xa;uniform vec3 orientation;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float bandwidth;&#xa;uniform float truncate;&#xa;uniform float impulses;&#xa;uniform float scaling;&#xa;uniform float threshold;&#xa;uniform int type;&#xa;uniform int seed;&#xa;uniform vec3 orientation;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="9"/>
     <int name="genericWidgetType-0" val="1"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="type"/>
     <bool name="genericWidgetKeyframed-0" val="0"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="frequency"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="4"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="orientation"/>
     <bool name="genericWidgetKeyframed-2" val="0"/>
     <int name="genericWidgetType-3" val="0"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="bandwidth"/>
     <bool name="genericWidgetKeyframed-3" val="1"/>
     <int name="genericWidgetType-4" val="0"/>
     <int name="genericWidgetView-4" val="1"/>
     <string name="genericWidgetName-4" val="truncate"/>
     <bool name="genericWidgetKeyframed-4" val="1"/>
     <int name="genericWidgetType-5" val="0"/>
     <int name="genericWidgetView-5" val="1"/>
     <string name="genericWidgetName-5" val="impulses"/>
     <bool name="genericWidgetKeyframed-5" val="0"/>
     <int name="genericWidgetType-6" val="1"/>
     <int name="genericWidgetView-6" val="1"/>
     <string name="genericWidgetName-6" val="seed"/>
     <bool name="genericWidgetKeyframed-6" val="0"/>
     <int name="genericWidgetType-7" val="0"/>
     <int name="genericWidgetView-7" val="1"/>
     <string name="genericWidgetName-7" val="scaling"/>
     <bool name="genericWidgetKeyframed-7" val="0"/>
     <int name="genericWidgetType-8" val="0"/>
     <int name="genericWidgetView-8" val="1"/>
     <string name="genericWidgetName-8" val="threshold"/>
     <bool name="genericWidgetKeyframed-8" val="1"/>
    </IOData>
    <IOData name="nodeWidget-6">
     <uint name="nbChildren" val="9"/>
     <IOData name="childWidget-0">
      <bool name="intAttribKeyframed" val="0"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="2"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="0.5"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.034"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.034"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="vector3fAttribKeyframed" val="0"/>
      <vector3f name="vector3fAttribMinVal">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
       <float name="2" val="1"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float name="0" val="1"/>
        <float name="1" val="1"/>
        <float name="2" val="1"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="4"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="2.94"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="2.94"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="0.1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.0611"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.0611"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-5">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="1"/>
      <float name="floatAttribMaxVal" val="256"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="86.17"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="86.17"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-6">
      <bool name="intAttribKeyframed" val="0"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="10000"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="3926"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="3926"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-7">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="1"/>
      <float name="floatAttribMaxVal" val="2048"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="226.17"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="226.17"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-8">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.159"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.159"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-6-0">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeOutputPos-6-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-7" val="1"/>
    <IOData name="node-7">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="3DWorleyNoise"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 proceduralTex;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;#define EPS 1e-5&#xa;&#xa;vec3 hash33(vec3 p) {&#xa;&#x9;vec3 q = vec3(&#x9;dot(p,vec3(127.1,311.7,74.7)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(269.5,183.3,246.1)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(113.5,271.9,124.6)));&#xa;&#x9;return fract(sin(q)*43758.5453123);&#xa;}&#xa;&#xa;float wnoise(in vec3 x) {&#xa;&#x9;vec3 p = floor(x);&#xa;&#x9;vec3 f = fract(x);&#xa;&#x9;&#xa;&#x9;float id = 0.0;&#xa;&#x9;vec2 res = vec2( 100.0 );&#xa;&#xa;&#x9;for( int k=-1; k&lt;=1; k++ )&#xa;&#x9;&#x9;for( int j=-1; j&lt;=1; j++ )&#xa;&#x9;&#x9;&#x9;for( int i=-1; i&lt;=1; i++ ) {&#xa;&#x9;&#x9;&#x9;&#x9;vec3 b = vec3( float(i), float(j), float(k) );&#xa;&#x9;&#x9;&#x9;&#x9;vec3 r = vec3( b ) - f + hash33( p + b );&#xa;&#x9;&#x9;&#x9;&#x9;float d = dot( r, r );&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;if( d &lt; res.x ) {&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;id = dot( p+b, vec3(1.0,57.0,113.0 ) );&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;res = vec2( d, res.x );&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;} else if( d &lt; res.y ) {&#xa;            res.y = d;&#xa;        }&#xa;    }&#xa;&#xa;    return sqrt(res.x);&#xa;}&#xa;&#xa;float fnoise(in vec3 p,in float amplitude,in float frequency,in float persistence, in int nboctaves) {&#xa;&#x9;float a = amplitude;&#xa;&#x9;float f = frequency;&#xa;&#x9;float n = 0.0;&#xa;&#xa;&#x9;for(int i=0;i&lt;nboctaves;++i) {&#xa;&#x9;&#x9;n = n+a*wnoise(p*f);&#xa;&#x9;&#x9;f = f*2.;&#xa;&#x9;&#x9;a = a*persistence;&#xa;&#x9;}&#xa;&#x9;&#xa;&#x9;return n;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;if(texture(inBuffer0,texcoord).w&lt;EPS) {&#xa;&#x9;&#x9;proceduralTex =  vec4(0.);&#xa;&#x9;&#x9;return;&#xa;&#x9;}&#xa;&#xa;&#x9;vec2 ps = .5*(1./textureSize(inBuffer0,0).xy); // half pixel size &#xa;&#x9;vec2 psStep  = ps/float(nbSamples+1);&#xa;&#x9;float n = 0.;&#xa;&#x9;float nb = 0.;&#xa;&#x9;float a = 0.;&#xa;&#x9;vec3 offset = vec3(10.);&#xa;&#x9;for(int i=-nbSamples;i&lt;=nbSamples;++i) {&#xa;&#x9;&#x9;&#x9;for(int j=-nbSamples;j&lt;=nbSamples;++j) {&#xa;&#x9;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*psStep;&#xa;&#x9;&#x9;&#x9;&#x9;vec4 data = texture(inBuffer0,coord);&#xa;&#x9;&#x9;&#x9;&#x9;//n += smoothstep(0.5-style,0.5+style,1.-fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves));&#xa;&#x9;&#x9;&#x9;&#x9;//n += fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves);&#xa;&#x9;&#x9;&#x9;&#x9;//n +=  step(0.5,1.-smoothstep(0.,style,fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves)));&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;n +=  1.-smoothstep(0.,style,fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves));&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;a += data.w;&#xa;&#x9;&#x9;&#x9;&#x9;nb += 1.;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;float finalA = a/nb;&#xa;&#x9;float finalN = n/nb;&#xa;&#xa;&#x9;//finalN = 1.-smoothstep(0.,style,finalN);&#xa;&#xa;&#x9;//finalN = step(0.5,finalN);&#xa;&#xa;&#x9;proceduralTex =  vec4(vec3(finalN),finalA);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="6"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="frequency"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="amplitude"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="persistence"/>
     <bool name="genericWidgetKeyframed-2" val="1"/>
     <int name="genericWidgetType-3" val="1"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="nboctaves"/>
     <bool name="genericWidgetKeyframed-3" val="1"/>
     <int name="genericWidgetType-4" val="1"/>
     <int name="genericWidgetView-4" val="1"/>
     <string name="genericWidgetName-4" val="nbSamples"/>
     <bool name="genericWidgetKeyframed-4" val="0"/>
     <int name="genericWidgetType-5" val="0"/>
     <int name="genericWidgetView-5" val="1"/>
     <string name="genericWidgetName-5" val="style"/>
     <bool name="genericWidgetKeyframed-5" val="0"/>
    </IOData>
    <IOData name="nodeWidget-7">
     <uint name="nbChildren" val="6"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="100"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="2.1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="2.1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.124"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.124"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.48"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.48"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="1"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="intAttribKeyframed" val="0"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="6"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="6"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-5">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.094"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.094"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-7-0">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeOutputPos-7-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-8" val="1"/>
    <IOData name="node-8">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="phongShading"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 shadingMap;&#xa;layout(location = 1) out vec4 diffuseParamMap;&#xa;layout(location = 2) out vec4 specularParamMap;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;vec2 m = mouse/vec2(textureSize(normalMap,0))-vec2(.5);&#xa;&#x9;vec3 l = normalize(vec3(m,.5));&#xa;&#x9;vec3 n = texture(normalMap,texcoord).xyz;&#xa;&#xa;&#x9;// hack for computing the view direction&#xa;&#x9;// the true view could be obtained in &#xa;&#x9;// another buffer of a genericBuffer node&#xa;&#x9;vec3 v = normalize(vec3(texcoord*2.-1.,-30.));&#xa;&#xa;&#x9;float ndl = dot(n,l);&#xa;&#x9;float rdv = dot(reflect(l,n),v);&#xa;&#xa;&#x9;float d = max(ndl,0.);&#xa;&#x9;float s = pow(max(rdv,0.),shininess);&#xa;&#x9;float a = length(n);&#xa;&#xa;&#x9;shadingMap.xyz = Ka + Kd*d + Ks*s*0.5;&#xa;&#x9;shadingMap.w = a;&#xa;&#xa;&#x9;diffuseParamMap = vec4(vec3(ndl*0.5+0.5),a);&#xa;&#x9;specularParamMap = vec4(vec3(rdv*0.5+0.5),a);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D normalMap;&#xa;uniform vec2 mouse;&#xa;uniform float shininess;&#xa;uniform vec3 Ka;&#xa;uniform vec3 Kd;&#xa;uniform vec3 Ks;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="1"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="4"/>
     <int name="genericWidgetType-0" val="4"/>
     <int name="genericWidgetView-0" val="2"/>
     <string name="genericWidgetName-0" val="Ka"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="4"/>
     <int name="genericWidgetView-1" val="2"/>
     <string name="genericWidgetName-1" val="Kd"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="4"/>
     <int name="genericWidgetView-2" val="2"/>
     <string name="genericWidgetName-2" val="Ks"/>
     <bool name="genericWidgetKeyframed-2" val="1"/>
     <int name="genericWidgetType-3" val="0"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="shininess"/>
     <bool name="genericWidgetKeyframed-3" val="1"/>
    </IOData>
    <IOData name="nodeWidget-8">
     <uint name="nbChildren" val="5"/>
     <IOData name="childWidget-0">
      <bool name="vector2iAttribKeyframed" val="1"/>
      <vector2i name="vector2iAttribMinVal">
       <int name="0" val="-10000"/>
       <int name="1" val="-10000"/>
      </vector2i>
      <vector2i name="vector2iAttribMaxVal">
       <int name="0" val="10000"/>
       <int name="1" val="10000"/>
      </vector2i>
      <IOData name="vector2iAttribCurve">
       <vector2i name="currentVal">
        <int name="0" val="75"/>
        <int name="1" val="437"/>
       </vector2i>
       <uint name="nbCurves" val="2"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="75"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="437"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="vector3fAttribKeyframed" val="1"/>
      <vector3f name="vector3fAttribMinVal">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
       <float name="2" val="1"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float name="0" val="0.1"/>
        <float name="1" val="0.1"/>
        <float name="2" val="0.1"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.1"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="vector3fAttribKeyframed" val="1"/>
      <vector3f name="vector3fAttribMinVal">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
       <float name="2" val="1"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float name="0" val="0.196078"/>
        <float name="1" val="0.490196"/>
        <float name="2" val="0.105882"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.196078"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.490196"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.105882"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="vector3fAttribKeyframed" val="1"/>
      <vector3f name="vector3fAttribMinVal">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
      </vector3f>
      <vector3f name="vector3fAttribMaxVal">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
       <float name="2" val="1"/>
      </vector3f>
      <IOData name="vector3fAttribCurve">
       <vector3f name="currentVal">
        <float name="0" val="0.180392"/>
        <float name="1" val="0.203922"/>
        <float name="2" val="0.211765"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.180392"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.203922"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.211765"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="1"/>
      <float name="floatAttribMaxVal" val="1000"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="14.986"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="14.986"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-8-0">
     <float name="0" val="56.32"/>
     <float name="1" val="3745.28"/>
    </vector2f>
    <vector2f name="nodeOutputPos-8-0">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeOutputPos-8-1">
     <float name="0" val="56.32"/>
     <float name="1" val="647.68"/>
    </vector2f>
    <vector2f name="nodeOutputPos-8-2">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-9" val="1"/>
    <IOData name="node-9">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="planeFittingGradient"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 gradient;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericFragBody" val="// fit 2 planes: one on gx values, one on gy values&#xa;// this is to get second order derivatives by still taking weight&#xa;// into account (bilateral weights in that case)&#xa;&#xa;#define F 0.619928135&#xa;&#xa;in vec2 texcoord;&#xa;&#xa;float scaleDepth(in vec4 c) {&#xa;&#x9;return c.x;&#xa;}&#xa;&#xa;float val(in vec4 c) {&#xa;&#x9;return length(c.xyz);&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;const float eps = 1e-10;&#xa;&#xa;&#x9;float sigS = max(sigmaS,eps);&#xa;&#x9;float halfsize = ceil(sigS/F);&#xa;&#x9;vec2 pixelSize = 1.0/vec2(textureSize(slopeMap,0));&#xa;&#xa;&#x9;float facS = -1./(2.*sigS*sigS);&#xa;&#x9;float facL = -1./(2.*sigmaL*sigmaL);&#xa;&#xa;&#x9;float sumW = 0.;&#xa;&#xa;&#x9;float d = scaleDepth(texture(depthMap,texcoord));&#xa;&#x9;float a = texture(depthMap,texcoord).w;&#xa;&#xa;&#x9;mat3 ATWA = mat3(0.);&#xa;&#xa;&#x9;vec3 ATB = vec3(0.);&#xa;&#xa;&#x9;for(float i=-halfsize;i&lt;=halfsize;++i) {&#xa;&#x9;&#x9;for(float j=-halfsize;j&lt;=halfsize;++j) {&#xa;&#x9;&#x9;&#x9;vec2 pos = vec2(i,j);&#xa;&#x9;&#x9;&#x9;vec4 col = texture(slopeMap,texcoord+pos*pixelSize);&#xa;&#x9;&#x9;&#x9;vec4 dep = texture(depthMap,texcoord+pos*pixelSize);&#xa;&#xa;&#x9;&#x9;&#x9;float distS = length(pos);&#xa;&#x9;&#x9;&#x9;float distL = (scaleDepth(dep)-d)*a;&#xa;&#xa;&#x9;&#x9;&#x9;float wS = exp(facS*float(distS*distS));&#xa;&#x9;&#x9;&#x9;float wL = exp(facL*float(distL*distL));&#xa;&#x9;&#x9;&#x9;float w = wS*wL;&#xa;&#xa;&#x9;&#x9;&#x9;// normalized version&#xa;&#x9;&#x9;&#x9;//col.xy = length(col.xy)>eps ? normalize(col.xy) : col.xy;&#xa;&#xa;&#x9;&#x9;&#x9;float x = pos.x;&#xa;&#x9;&#x9;&#x9;float y = pos.y;&#xa;&#x9;&#x9;&#x9;float z = val(col);&#xa;&#xa;&#x9;&#x9;&#x9;ATWA[0][0] += w*x*x;&#xa;&#x9;&#x9;&#x9;ATWA[0][1] += w*x*y;&#xa;&#x9;&#x9;&#x9;ATWA[0][2] += w*x;&#xa;&#x9;&#x9;&#x9;ATWA[1][1] += w*y*y;&#xa;&#x9;&#x9;&#x9;ATWA[1][2] += w*y;&#xa;&#x9;&#x9;&#x9;ATWA[2][2] += w;&#xa;&#xa;&#x9;&#x9;&#x9;ATB += vec3(w*x*z,w*y*z,w*z);&#xa;&#xa;&#x9;&#x9;&#x9;sumW += w;&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;ATWA[1][0] = ATWA[0][1];&#xa;&#x9;ATWA[2][0] = ATWA[0][2];&#xa;&#x9;ATWA[2][1] = ATWA[1][2];&#xa;&#xa;&#x9;if(sumW>eps) {&#xa;&#x9;&#x9;ATWA /= sumW;&#xa;&#x9;&#x9;ATB /= sumW;&#xa;&#x9;}&#xa;&#xa;&#x9;mat3 ATWAINV = inverse(ATWA);&#xa;&#x9;vec3 P = ATWAINV*ATB;&#xa;&#xa;&#x9;vec3 G = -vec3(P.x,P.y,0.)*scale*10;&#xa;&#x9;G.z = 1.;//-tanh(length(G.xy));&#xa;&#x9;G = length(G.xy) >eps ? normalize(G) : G;&#xa;&#xa;&#x9;gradient = vec4(G,a);&#xa;}"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="3"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="sigmaS"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="sigmaL"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="scale"/>
     <bool name="genericWidgetKeyframed-2" val="0"/>
    </IOData>
    <IOData name="nodeWidget-9">
     <uint name="nbChildren" val="3"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="100"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="4.5"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="4.5"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.027"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.027"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="50"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="38.05"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="38.05"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-9-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-9-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-9-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-10" val="1"/>
    <IOData name="node-10">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="3DWorleyNoiseFractalized"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 proceduralTex;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;#define EPS 1e-5&#xa;#define NBLEVELS 2&#xa;&#xa;// LOAD MATRICES&#xa;vec4 m0 = texelFetch(matrices, ivec2(0, 0), 0);&#xa;vec4 m1 = texelFetch(matrices, ivec2(1, 0), 0);&#xa;vec4 m2 = texelFetch(matrices, ivec2(2, 0), 0);&#xa;vec4 m3 = texelFetch(matrices, ivec2(3, 0), 0);&#xa;&#xa;vec4 v0 = texelFetch(matrices, ivec2(0, 1), 0);&#xa;vec4 v1 = texelFetch(matrices, ivec2(1, 1), 0);&#xa;vec4 v2 = texelFetch(matrices, ivec2(2, 1), 0);&#xa;vec4 v3 = texelFetch(matrices, ivec2(3, 1), 0);&#xa;&#xa;vec4 p0 = texelFetch(matrices, ivec2(0, 2), 0);&#xa;vec4 p1 = texelFetch(matrices, ivec2(1, 2), 0);&#xa;vec4 p2 = texelFetch(matrices, ivec2(2, 2), 0);&#xa;vec4 p3 = texelFetch(matrices, ivec2(3, 2), 0);&#xa;&#xa;// model, view, projection and normal matrices&#xa;mat4 model = mat4(m0,m1,m2,m3);&#xa;mat4 view = mat4(v0,v1,v2,v3);&#xa;mat4 proj = mat4(p0,p1,p2,p3);&#xa;mat4 mvp = proj*view*model;&#xa;&#xa;vec3 hash33(vec3 p) {&#xa;//return vec3(.5);&#xa;&#x9;vec3 q = vec3(&#x9;dot(p,vec3(127.1,311.7,74.7)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(269.5,183.3,246.1)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(113.5,271.9,124.6)));&#xa;&#x9;return fract(sin(q)*43758.5453123);&#xa;}&#xa;&#xa;vec3 project(in vec3 p) {&#xa;&#x9;vec4 tmp = mvp*vec4(p,1.);&#xa;&#x9;return tmp.xyz/tmp.w;&#xa;}&#xa;&#xa;vec4 wnoise(in vec3 x,in float freq) {&#xa;&#x9;// x: 3D position &#xa;&#x9;// f: frequency&#xa;&#x9;// return: closest 3D rand position + 3D dist between x and this position &#xa;&#xa;&#x9;vec3 p = floor(x*freq);&#xa;&#x9;vec3 f = fract(x*freq);&#xa;&#x9;//vec3 xp = project(x);&#xa;&#xa;&#x9;float id = 0.0;&#xa;&#x9;vec4 res = vec4(1e+10);&#xa;&#x9;for( int k=-1; k&lt;=1; k++ )&#xa;&#x9;&#x9;for( int j=-1; j&lt;=1; j++ )&#xa;&#x9;&#x9;&#x9;for( int i=-1; i&lt;=1; i++ ) {&#xa;&#x9;&#x9;&#x9;&#x9;vec3 b = vec3( float(i), float(j), float(k) );&#xa;&#x9;&#x9;&#x9;&#x9;vec3 r = (p+b+hash33( p + b ))/freq;&#xa;&#x9;&#x9;&#x9;&#x9;//vec3 rp = r-dot(n,r-x)*n;&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;float d = distance(r,x);&#xa;&#x9;&#x9;&#x9;&#x9;//float d = distance(project(r).xy,xp.xy);&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;if(d&lt;res.w) {&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;res = vec4(r,d);&#xa;&#x9;&#x9;&#x9;&#x9;} &#xa;    }&#xa;&#xa;    return res;&#xa;}&#xa;&#xa;vec4 dist(in vec3 p,in vec4 n) {&#xa;&#x9;// 3D distance &#xa;&#x9;//return vec3(n.w,vec2(0.));&#xa;&#xa;&#x9;// 2D (projected) distance  + offset to splat position &#xa;&#x9;vec3 p1 = project(p);&#xa;&#x9;vec3 p2 = project(n.xyz);&#xa;&#xa;&#x9;//return vec4(n.w,p2.xy-p1.xy,n.w);&#xa;&#xa;&#x9;return vec4(distance(p1.xy,p2.xy),p2.xy-p1.xy,n.w);&#xa;}&#xa;&#xa;vec4 fnoise(in vec3 p,in float amplitude,in float frequency,in float persistence, in int nboctaves) {&#xa;&#x9;float a = amplitude;&#xa;&#x9;float f = frequency;&#xa;&#x9;vec4 n = vec4(0.);&#xa;&#xa;&#x9;for(int i=0;i&lt;nboctaves;++i) {&#xa;&#x9;&#x9;vec4 d = dist(p,wnoise(p,f));&#xa;&#x9;&#x9;n = n+a*d;&#xa;&#x9;&#x9;f = f*2.;&#xa;&#x9;&#x9;a = a*persistence;&#xa;&#x9;}&#xa;&#xa;&#x9;float d3 = 1.-smoothstep(0.0,0.03,n.w);&#xa;&#x9;n.x = (1.-smoothstep(0.,style,n.x));//*d3;&#xa;&#x9;n.yz *= offset;&#xa;&#xa;&#x9;return n;&#xa;}&#xa;&#xa;vec4 dnoise(in vec3 p,in float amplitude,in float frequency,in float persistence, in int nboctaves,in float depth,in int nblevels) {&#xa;&#x9;float z = log2(depth);&#xa;&#x9;float zflo = floor(z);&#xa;&#x9;float zfra = fract(z);&#xa;&#x9;float W = 0.;&#xa;&#x9;vec4 n = vec4(0.);&#xa;&#x9;float sig = float(nblevels)/3.;&#xa;&#xa;&#x9;for(int i=-nblevels;i&lt;nblevels;++i) {&#xa;&#x9;&#x9;float currentZ = zflo+float(i+1);&#xa;&#x9;&#x9;float freq = frequency/pow(2.,currentZ); // current frequency&#xa;&#x9;&#x9;float dist = abs(currentZ-z);&#xa;&#x9;&#x9;//float w = nblevels-dist;&#x9;&#x9;&#xa;&#x9;&#x9;float w = exp(-(dist*dist)/(2.*sig*sig));&#xa;&#x9;&#x9;n = n+w*fnoise(p,amplitude,freq,persistence,nboctaves);&#xa;&#x9;&#x9;W += w;&#xa;&#x9;}&#xa;&#xa;&#x9;n /= W;&#xa;&#xa;&#x9;return n;&#xa;&#xa;&#x9;//float freq = frequency/pow(2.,zflo);&#xa;&#x9;//float w = 1.-zfra;&#xa;&#x9;//return w*fnoise(p,amplitude,freq,persistence,nboctaves);&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;if(texture(positionMap,texcoord).w&lt;EPS) {&#xa;&#x9;&#x9;proceduralTex =  vec4(0.);&#xa;&#x9;&#x9;return;&#xa;&#x9;}&#xa;&#xa;&#x9;vec2 ps = .5*(1./textureSize(positionMap,0).xy); // half pixel size &#xa;&#x9;vec2 psStep  = ps/float(nbSamples+1);&#xa;&#x9;vec4 n = vec4(0.);&#xa;&#x9;float nb = 0.;&#xa;&#x9;float a = 0.;&#xa;&#xa;&#x9;for(int i=-nbSamples;i&lt;=nbSamples;++i) {&#xa;&#x9;&#x9;&#x9;for(int j=-nbSamples;j&lt;=nbSamples;++j) {&#xa;&#x9;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*psStep;&#xa;&#x9;&#x9;&#x9;&#x9;vec4 data = texture(positionMap,coord);&#xa;&#x9;&#x9;&#x9;&#x9;vec4 depth = texture(depthMap,coord);&#xa;&#x9;&#x9;&#x9;&#x9;n += dnoise(data.xyz,amplitude,frequency,persistence,nboctaves,depth.x,NBLEVELS);&#xa;&#x9;&#x9;&#x9;&#x9;//n.x +=  1.-smoothstep(0.,style,t.x);&#xa;&#x9;&#x9;&#x9;&#x9;//n.yz += t.yz*offset;&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;a += data.w;&#xa;&#x9;&#x9;&#x9;&#x9;nb += 1.;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;float finalA = a/nb;&#xa;&#x9;vec4 finalN = n/nb;&#xa;&#xa;&#x9;proceduralTex =  vec4(finalN.xyz,finalA);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D matrices;&#xa;uniform sampler2D positionMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform float offset;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="7"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="frequency"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="amplitude"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="persistence"/>
     <bool name="genericWidgetKeyframed-2" val="1"/>
     <int name="genericWidgetType-3" val="1"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="nboctaves"/>
     <bool name="genericWidgetKeyframed-3" val="1"/>
     <int name="genericWidgetType-4" val="1"/>
     <int name="genericWidgetView-4" val="1"/>
     <string name="genericWidgetName-4" val="nbSamples"/>
     <bool name="genericWidgetKeyframed-4" val="0"/>
     <int name="genericWidgetType-5" val="0"/>
     <int name="genericWidgetView-5" val="1"/>
     <string name="genericWidgetName-5" val="style"/>
     <bool name="genericWidgetKeyframed-5" val="0"/>
     <int name="genericWidgetType-6" val="0"/>
     <int name="genericWidgetView-6" val="1"/>
     <string name="genericWidgetName-6" val="offset"/>
     <bool name="genericWidgetKeyframed-6" val="0"/>
    </IOData>
    <IOData name="nodeWidget-10">
     <uint name="nbChildren" val="7"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="200"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="37"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="37"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.997"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.997"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.48"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.48"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="1"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="intAttribKeyframed" val="0"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="6"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="6"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-5">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="0.1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.0095"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.0095"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-6">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-10-0">
     <float name="0" val="56.32"/>
     <float name="1" val="4364.8"/>
    </vector2f>
    <vector2f name="nodeInputPos-10-1">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeInputPos-10-2">
     <float name="0" val="56.32"/>
     <float name="1" val="647.68"/>
    </vector2f>
    <vector2f name="nodeOutputPos-10-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-11" val="1"/>
    <IOData name="node-11">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float slant;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float slant;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 d1 = texture(inBuffer0,texcoord);&#xa;&#x9;vec4 d2 = texture(inBuffer1,texcoord);&#xa;&#x9;&#xa;&#x9;float s = smoothstep(0.,1.,pow(d2.z,1.3));&#xa;&#x9;d1.x *= mix(1.,s,slant);&#xa;&#x9;outBuffer0 = d1;&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float slant;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float slant;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float slant;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="1"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="slant"/>
     <bool name="genericWidgetKeyframed-0" val="0"/>
    </IOData>
    <IOData name="nodeWidget-11">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.688"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.688"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-11-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-11-1">
     <float name="0" val="56.32"/>
     <float name="1" val="3745.28"/>
    </vector2f>
    <vector2f name="nodeOutputPos-11-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-12" val="1"/>
    <IOData name="node-12">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="3DWorleyNoise"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 proceduralTex;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;#define EPS 1e-5&#xa;&#xa;vec3 hash33(vec3 p) {&#xa;&#x9;vec3 q = vec3(&#x9;dot(p,vec3(127.1,311.7,74.7)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(269.5,183.3,246.1)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(113.5,271.9,124.6)));&#xa;&#x9;return fract(sin(q)*43758.5453123);&#xa;}&#xa;&#xa;float wnoise(in vec3 x) {&#xa;&#x9;vec3 p = floor(x);&#xa;&#x9;vec3 f = fract(x);&#xa;&#x9;&#xa;&#x9;float id = 0.0;&#xa;&#x9;vec2 res = vec2( 100.0 );&#xa;&#xa;&#x9;for( int k=-1; k&lt;=1; k++ )&#xa;&#x9;&#x9;for( int j=-1; j&lt;=1; j++ )&#xa;&#x9;&#x9;&#x9;for( int i=-1; i&lt;=1; i++ ) {&#xa;&#x9;&#x9;&#x9;&#x9;vec3 b = vec3( float(i), float(j), float(k) );&#xa;&#x9;&#x9;&#x9;&#x9;vec3 r = vec3( b ) - f + hash33( p + b );&#xa;&#x9;&#x9;&#x9;&#x9;float d = dot( r, r );&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;if( d &lt; res.x ) {&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;id = dot( p+b, vec3(1.0,57.0,113.0 ) );&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;res = vec2( d, res.x );&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;} else if( d &lt; res.y ) {&#xa;            res.y = d;&#xa;        }&#xa;    }&#xa;&#xa;    return sqrt(res.x);&#xa;}&#xa;&#xa;float fnoise(in vec3 p,in float amplitude,in float frequency,in float persistence, in int nboctaves) {&#xa;&#x9;float a = amplitude;&#xa;&#x9;float f = frequency;&#xa;&#x9;float n = 0.0;&#xa;&#xa;&#x9;for(int i=0;i&lt;nboctaves;++i) {&#xa;&#x9;&#x9;n = n+a*wnoise(p*f);&#xa;&#x9;&#x9;f = f*2.;&#xa;&#x9;&#x9;a = a*persistence;&#xa;&#x9;}&#xa;&#x9;&#xa;&#x9;return n;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;if(texture(inBuffer0,texcoord).w&lt;EPS) {&#xa;&#x9;&#x9;proceduralTex =  vec4(0.);&#xa;&#x9;&#x9;return;&#xa;&#x9;}&#xa;&#xa;&#x9;vec2 ps = .5*(1./textureSize(inBuffer0,0).xy); // half pixel size &#xa;&#x9;vec2 psStep  = ps/float(nbSamples+1);&#xa;&#x9;float n = 0.;&#xa;&#x9;float nb = 0.;&#xa;&#x9;float a = 0.;&#xa;&#x9;vec3 offset = vec3(10.);&#xa;&#x9;for(int i=-nbSamples;i&lt;=nbSamples;++i) {&#xa;&#x9;&#x9;&#x9;for(int j=-nbSamples;j&lt;=nbSamples;++j) {&#xa;&#x9;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*psStep;&#xa;&#x9;&#x9;&#x9;&#x9;vec4 data = texture(inBuffer0,coord);&#xa;&#x9;&#x9;&#x9;&#x9;//n += smoothstep(0.5-style,0.5+style,1.-fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves));&#xa;&#x9;&#x9;&#x9;&#x9;//n += fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves);&#xa;&#x9;&#x9;&#x9;&#x9;//n +=  step(0.5,1.-smoothstep(0.,style,fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves)));&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;n +=  1.-smoothstep(0.,style,fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves));&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;a += data.w;&#xa;&#x9;&#x9;&#x9;&#x9;nb += 1.;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;float finalA = a/nb;&#xa;&#x9;float finalN = n/nb;&#xa;&#xa;&#x9;//finalN = 1.-smoothstep(0.,style,finalN);&#xa;&#xa;&#x9;//finalN = step(0.5,finalN);&#xa;&#xa;&#x9;proceduralTex =  vec4(vec3(finalN),finalA);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="6"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="frequency"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="amplitude"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="persistence"/>
     <bool name="genericWidgetKeyframed-2" val="1"/>
     <int name="genericWidgetType-3" val="1"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="nboctaves"/>
     <bool name="genericWidgetKeyframed-3" val="1"/>
     <int name="genericWidgetType-4" val="1"/>
     <int name="genericWidgetView-4" val="1"/>
     <string name="genericWidgetName-4" val="nbSamples"/>
     <bool name="genericWidgetKeyframed-4" val="0"/>
     <int name="genericWidgetType-5" val="0"/>
     <int name="genericWidgetView-5" val="1"/>
     <string name="genericWidgetName-5" val="style"/>
     <bool name="genericWidgetKeyframed-5" val="0"/>
    </IOData>
    <IOData name="nodeWidget-12">
     <uint name="nbChildren" val="6"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="100"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="8.8"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="8.8"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.232"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.232"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.48"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.48"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="1"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="intAttribKeyframed" val="0"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="6"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="6"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-5">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.085"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.085"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-12-0">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeOutputPos-12-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-13" val="1"/>
    <IOData name="node-13">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="3DWorleyNoise"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 proceduralTex;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;#define EPS 1e-5&#xa;&#xa;vec3 hash33(vec3 p) {&#xa;&#x9;vec3 q = vec3(&#x9;dot(p,vec3(127.1,311.7,74.7)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(269.5,183.3,246.1)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(113.5,271.9,124.6)));&#xa;&#x9;return fract(sin(q)*43758.5453123);&#xa;}&#xa;&#xa;float wnoise(in vec3 x) {&#xa;&#x9;vec3 p = floor(x);&#xa;&#x9;vec3 f = fract(x);&#xa;&#x9;&#xa;&#x9;float id = 0.0;&#xa;&#x9;vec2 res = vec2( 100.0 );&#xa;&#xa;&#x9;for( int k=-1; k&lt;=1; k++ )&#xa;&#x9;&#x9;for( int j=-1; j&lt;=1; j++ )&#xa;&#x9;&#x9;&#x9;for( int i=-1; i&lt;=1; i++ ) {&#xa;&#x9;&#x9;&#x9;&#x9;vec3 b = vec3( float(i), float(j), float(k) );&#xa;&#x9;&#x9;&#x9;&#x9;vec3 r = vec3( b ) - f + hash33( p + b );&#xa;&#x9;&#x9;&#x9;&#x9;float d = dot( r, r );&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;if( d &lt; res.x ) {&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;id = dot( p+b, vec3(1.0,57.0,113.0 ) );&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;res = vec2( d, res.x );&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;} else if( d &lt; res.y ) {&#xa;            res.y = d;&#xa;        }&#xa;    }&#xa;&#xa;    return sqrt(res.x);&#xa;}&#xa;&#xa;float fnoise(in vec3 p,in float amplitude,in float frequency,in float persistence, in int nboctaves) {&#xa;&#x9;float a = amplitude;&#xa;&#x9;float f = frequency;&#xa;&#x9;float n = 0.0;&#xa;&#xa;&#x9;for(int i=0;i&lt;nboctaves;++i) {&#xa;&#x9;&#x9;n = n+a*wnoise(p*f);&#xa;&#x9;&#x9;f = f*2.;&#xa;&#x9;&#x9;a = a*persistence;&#xa;&#x9;}&#xa;&#x9;&#xa;&#x9;return n;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;if(texture(inBuffer0,texcoord).w&lt;EPS) {&#xa;&#x9;&#x9;proceduralTex =  vec4(0.);&#xa;&#x9;&#x9;return;&#xa;&#x9;}&#xa;&#xa;&#x9;vec2 ps = .5*(1./textureSize(inBuffer0,0).xy); // half pixel size &#xa;&#x9;vec2 psStep  = ps/float(nbSamples+1);&#xa;&#x9;float n = 0.;&#xa;&#x9;float nb = 0.;&#xa;&#x9;float a = 0.;&#xa;&#x9;vec3 offset = vec3(10.);&#xa;&#x9;for(int i=-nbSamples;i&lt;=nbSamples;++i) {&#xa;&#x9;&#x9;&#x9;for(int j=-nbSamples;j&lt;=nbSamples;++j) {&#xa;&#x9;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*psStep;&#xa;&#x9;&#x9;&#x9;&#x9;vec4 data = texture(inBuffer0,coord);&#xa;&#x9;&#x9;&#x9;&#x9;//n += smoothstep(0.5-style,0.5+style,1.-fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves));&#xa;&#x9;&#x9;&#x9;&#x9;//n += fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves);&#xa;&#x9;&#x9;&#x9;&#x9;//n +=  step(0.5,1.-smoothstep(0.,style,fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves)));&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;n +=  1.-smoothstep(0.,style,fnoise((data.xyz+vec3(10))*frequency,amplitude,frequency,persistence,nboctaves));&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;a += data.w;&#xa;&#x9;&#x9;&#x9;&#x9;nb += 1.;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;float finalA = a/nb;&#xa;&#x9;float finalN = n/nb;&#xa;&#xa;&#x9;//finalN = 1.-smoothstep(0.,style,finalN);&#xa;&#xa;&#x9;//finalN = step(0.5,finalN);&#xa;&#xa;&#x9;proceduralTex =  vec4(vec3(finalN),finalA);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="6"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="frequency"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="amplitude"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="persistence"/>
     <bool name="genericWidgetKeyframed-2" val="1"/>
     <int name="genericWidgetType-3" val="1"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="nboctaves"/>
     <bool name="genericWidgetKeyframed-3" val="1"/>
     <int name="genericWidgetType-4" val="1"/>
     <int name="genericWidgetView-4" val="1"/>
     <string name="genericWidgetName-4" val="nbSamples"/>
     <bool name="genericWidgetKeyframed-4" val="0"/>
     <int name="genericWidgetType-5" val="0"/>
     <int name="genericWidgetView-5" val="1"/>
     <string name="genericWidgetName-5" val="style"/>
     <bool name="genericWidgetKeyframed-5" val="0"/>
    </IOData>
    <IOData name="nodeWidget-13">
     <uint name="nbChildren" val="6"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="100"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="5.3"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="5.3"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.113"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.113"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.48"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.48"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="1"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="intAttribKeyframed" val="0"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="6"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="6"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-5">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.045"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.045"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-13-0">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeOutputPos-13-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-14" val="1"/>
    <IOData name="node-14">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="shading"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 shadingMap;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;vec3 rgbToHsv(in float r,in float g,in float b) {&#xa;&#x9;const float eps = 1e-15;&#xa;&#xa;&#x9;float h,s,v;&#xa;&#xa;&#x9;v = max(max(r,g),b);&#xa;&#x9;float delta = v-min(min(r,g),b);&#xa;  &#xa;&#x9;if(delta&lt;eps) {&#xa;&#x9;&#x9;s = 0.0;&#xa;&#x9;&#x9;h = 0.0;&#xa;&#x9;} else {&#xa;&#x9;&#x9;s = delta/v;&#xa;    &#xa;&#x9;&#x9;if(r==v)&#x9;&#x9;&#x9;h = (g-b)/delta;&#xa;&#x9;&#x9;else if(g==v)&#x9;&#x9;h = 2.0 + (b-r)/delta;&#xa;&#x9;&#x9;else&#x9;&#x9;&#x9;&#x9;&#x9;h = 4.0 + (r-g)/delta;&#xa;&#xa;&#x9;&#x9;h *= 60.0;&#xa;&#x9;&#x9;if(h&lt;0.0)&#xa;&#x9;&#x9;&#x9;h += 360;&#xa;&#x9;}&#xa;  &#xa;&#x9;return vec3(h,s,v);&#xa;}&#xa;&#xa;vec3 hsvToRgb(in float h,in float s,in float v) {&#xa;&#x9;vec3 rgb;&#xa;&#x9;int hi = int(floor(h/60.0))%6;&#xa;&#x9;float f = h/60.0 - floor(h/60.0);&#xa;&#x9;float p = v*(1.0-s);&#xa;&#x9;float q = v*(1.0-f*s);&#xa;&#x9;float t = v*(1.0-(1.0-f)*s);&#xa;&#xa;&#x9;if(hi==0) rgb = vec3(v,t,p);&#xa;&#x9;else if(hi==1) rgb = vec3(q,v,p);&#xa;&#x9;else if(hi==2) rgb = vec3(p,v,t);&#xa;&#x9;else if(hi==3) rgb = vec3(p,q,v);&#xa;&#x9;else if(hi==4) rgb = vec3(t,p,v);&#xa;&#x9;else rgb = vec3(v,p,q);&#xa;&#xa;&#x9;return rgb;&#xa;}&#xa;&#xa;&#xa;void main() {&#xa;&#x9;vec4 S = texture(inBuffer0,texcoord);&#xa;&#x9;float n1 = texture(inBuffer1,texcoord).x;&#xa;&#x9;float n2 = texture(inBuffer2,texcoord).x;&#xa;&#xa;&#x9;S.xyz = clamp(S.xyz,vec3(0.),vec3(1.));&#xa;&#xa;&#x9;vec3 hsv = rgbToHsv(S.x,S.y,S.z);&#xa;&#xa;&#x9;//hsv.y = min(hsv.y + n1,1.);&#xa;&#x9;//hsv.y = max(hsv.y - n2,0.);&#xa;&#xa;&#x9;hsv.z = min(hsv.z + n1,1.);&#xa;&#x9;hsv.z = max(hsv.z - n2/2.,0.);&#xa;&#xa;&#x9;vec3 rgb = hsvToRgb(hsv.x,hsv.y,hsv.z);&#xa;&#xa;&#x9;shadingMap = vec4(rgb,S.w);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-14">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-14-0">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeInputPos-14-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-14-2">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-14-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-15" val="1"/>
    <IOData name="node-15">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="shading"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 shadingMap;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;shadingMap = texture(inBuffer0,texcoord);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-15">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-15-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-15-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-16" val="1"/>
    <IOData name="node-16">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-16">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-16-0">
     <float name="0" val="56.32"/>
     <float name="1" val="3745.28"/>
    </vector2f>
    <vector2f name="nodeOutputPos-16-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-17" val="1"/>
    <IOData name="node-17">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="3DGradientNoise"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 proceduralTex;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;vec3 hash33(vec3 p) {&#xa;&#x9;vec3 q = vec3(&#x9;dot(p,vec3(127.1,311.7,74.7)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(269.5,183.3,246.1)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(113.5,271.9,124.6)));&#xa;&#x9;return fract(sin(q)*43758.5453123)*2.-1.;&#xa;}&#xa;&#xa;float gnoise(in vec3 x) {&#xa;&#x9;vec3 p = floor(x);&#xa;&#x9;vec3 f = fract(x);&#xa;    vec3 m = f*f*(3.-2.*f);&#xa;&#xa;&#x9;return mix(&#xa;&#x9;&#x9;&#x9;&#x9;mix(mix(dot(hash33(p+vec3(0.,0.,0.)),f-vec3(0.,0.,0.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,0.,0.)),f-vec3(1.,0.,0.)),m.x),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;  mix(dot(hash33(p+vec3(0.,1.,0.)),f-vec3(0.,1.,0.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,1.,0.)),f-vec3(1.,1.,0.)),m.x),m.y),&#xa;&#x9;&#x9;&#x9;&#x9;mix(mix(dot(hash33(p+vec3(0.,0.,1.)),f-vec3(0.,0.,1.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,0.,1.)),f-vec3(1.,0.,1.)),m.x),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;  mix(dot(hash33(p+vec3(0.,1.,1.)),f-vec3(0.,1.,1.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,1.,1.)),f-vec3(1.,1.,1.)),m.x),m.y),m.z)*.5+.5;&#xa;}&#xa;&#xa;float fnoise(in vec3 p,in float amplitude,in float frequency,in float persistence, in int nboctaves) {&#xa;&#x9;float a = amplitude;&#xa;&#x9;float f = frequency;&#xa;&#x9;float n = 0.0;&#xa;&#xa;&#x9;for(int i=0;i&lt;nboctaves;++i) {&#xa;&#x9;&#x9;n = n+a*gnoise(p*f);&#xa;&#x9;&#x9;f = f*2.;&#xa;&#x9;&#x9;a = a*persistence;&#xa;&#x9;}&#xa;&#x9;&#xa;&#x9;return n;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 ps = .5*(1./textureSize(inBuffer0,0).xy); // half pixel size &#xa;&#x9;vec2 psStep  = ps/float(nbSamples+1);&#xa;&#x9;float n1 = 0.;&#xa;&#x9;float n2 = 0.;&#xa;&#x9;float n3 = 0.;&#xa;&#xa;&#x9;float nb = 0.;&#xa;&#x9;float a = 0.;&#xa;&#x9;vec3 offset = vec3(10.);&#xa;&#x9;for(int i=-nbSamples;i&lt;=nbSamples;++i) {&#xa;&#x9;&#x9;&#x9;for(int j=-nbSamples;j&lt;=nbSamples;++j) {&#xa;&#x9;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*psStep;&#xa;&#x9;&#x9;&#x9;&#x9;vec4 data = texture(inBuffer0,coord);&#xa;&#x9;&#x9;&#x9;&#x9;n1 += smoothstep(0.5-style,0.5+style,fnoise(data.xyz*frequency,amplitude,frequency,persistence,nboctaves));&#xa;&#x9;&#x9;&#x9;&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;a += data.w;&#xa;&#x9;&#x9;&#x9;&#x9;nb += 1.;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;proceduralTex =  vec4(vec3(n1/nb),a/nb);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="7"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="frequency"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="amplitude"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="persistence"/>
     <bool name="genericWidgetKeyframed-2" val="1"/>
     <int name="genericWidgetType-3" val="1"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="nboctaves"/>
     <bool name="genericWidgetKeyframed-3" val="1"/>
     <int name="genericWidgetType-4" val="0"/>
     <int name="genericWidgetView-4" val="1"/>
     <string name="genericWidgetName-4" val="ZCoord"/>
     <bool name="genericWidgetKeyframed-4" val="1"/>
     <int name="genericWidgetType-5" val="1"/>
     <int name="genericWidgetView-5" val="1"/>
     <string name="genericWidgetName-5" val="nbSamples"/>
     <bool name="genericWidgetKeyframed-5" val="0"/>
     <int name="genericWidgetType-6" val="0"/>
     <int name="genericWidgetView-6" val="1"/>
     <string name="genericWidgetName-6" val="style"/>
     <bool name="genericWidgetKeyframed-6" val="0"/>
    </IOData>
    <IOData name="nodeWidget-17">
     <uint name="nbChildren" val="7"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="100"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="2.4"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="2.4"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.883"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.883"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.619"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.619"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="1"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-5">
      <bool name="intAttribKeyframed" val="0"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="4"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="4"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-6">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.146"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.146"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-17-0">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeOutputPos-17-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-18" val="1"/>
    <IOData name="node-18">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="planeFittingGradient"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 gradient;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericFragBody" val="// fit 2 planes: one on gx values, one on gy values&#xa;// this is to get second order derivatives by still taking weight&#xa;// into account (bilateral weights in that case)&#xa;&#xa;#define F 0.619928135&#xa;&#xa;in vec2 texcoord;&#xa;&#xa;float scaleDepth(in vec4 c) {&#xa;&#x9;return c.x;&#xa;}&#xa;&#xa;float val(in vec4 c) {&#xa;&#x9;return length(c.xyz);&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;const float eps = 1e-10;&#xa;&#xa;&#x9;float sigS = max(sigmaS,eps);&#xa;&#x9;float halfsize = ceil(sigS/F);&#xa;&#x9;vec2 pixelSize = 1.0/vec2(textureSize(slopeMap,0));&#xa;&#xa;&#x9;float facS = -1./(2.*sigS*sigS);&#xa;&#x9;float facL = -1./(2.*sigmaL*sigmaL);&#xa;&#xa;&#x9;float sumW = 0.;&#xa;&#xa;&#x9;float d = scaleDepth(texture(depthMap,texcoord));&#xa;&#x9;float a = texture(depthMap,texcoord).w;&#xa;&#xa;&#x9;mat3 ATWA = mat3(0.);&#xa;&#xa;&#x9;vec3 ATB = vec3(0.);&#xa;&#xa;&#x9;for(float i=-halfsize;i&lt;=halfsize;++i) {&#xa;&#x9;&#x9;for(float j=-halfsize;j&lt;=halfsize;++j) {&#xa;&#x9;&#x9;&#x9;vec2 pos = vec2(i,j);&#xa;&#x9;&#x9;&#x9;vec4 col = texture(slopeMap,texcoord+pos*pixelSize);&#xa;&#x9;&#x9;&#x9;vec4 dep = texture(depthMap,texcoord+pos*pixelSize);&#xa;&#xa;&#x9;&#x9;&#x9;float distS = length(pos);&#xa;&#x9;&#x9;&#x9;float distL = (scaleDepth(dep)-d)*a;&#xa;&#xa;&#x9;&#x9;&#x9;float wS = exp(facS*float(distS*distS));&#xa;&#x9;&#x9;&#x9;float wL = exp(facL*float(distL*distL));&#xa;&#x9;&#x9;&#x9;float w = wS*wL;&#xa;&#xa;&#x9;&#x9;&#x9;// normalized version&#xa;&#x9;&#x9;&#x9;//col.xy = length(col.xy)>eps ? normalize(col.xy) : col.xy;&#xa;&#xa;&#x9;&#x9;&#x9;float x = pos.x;&#xa;&#x9;&#x9;&#x9;float y = pos.y;&#xa;&#x9;&#x9;&#x9;float z = val(col);&#xa;&#xa;&#x9;&#x9;&#x9;ATWA[0][0] += w*x*x;&#xa;&#x9;&#x9;&#x9;ATWA[0][1] += w*x*y;&#xa;&#x9;&#x9;&#x9;ATWA[0][2] += w*x;&#xa;&#x9;&#x9;&#x9;ATWA[1][1] += w*y*y;&#xa;&#x9;&#x9;&#x9;ATWA[1][2] += w*y;&#xa;&#x9;&#x9;&#x9;ATWA[2][2] += w;&#xa;&#xa;&#x9;&#x9;&#x9;ATB += vec3(w*x*z,w*y*z,w*z);&#xa;&#xa;&#x9;&#x9;&#x9;sumW += w;&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;ATWA[1][0] = ATWA[0][1];&#xa;&#x9;ATWA[2][0] = ATWA[0][2];&#xa;&#x9;ATWA[2][1] = ATWA[1][2];&#xa;&#xa;&#x9;if(sumW>eps) {&#xa;&#x9;&#x9;ATWA /= sumW;&#xa;&#x9;&#x9;ATB /= sumW;&#xa;&#x9;}&#xa;&#xa;&#x9;mat3 ATWAINV = inverse(ATWA);&#xa;&#x9;vec3 P = ATWAINV*ATB;&#xa;&#xa;&#x9;vec3 G = -vec3(P.x,P.y,0.)*scale*10;&#xa;&#x9;G.z = 1.;//-tanh(length(G.xy));&#xa;&#x9;G = length(G.xy) >eps ? normalize(G) : G;&#xa;&#xa;&#x9;gradient = vec4(G,a);&#xa;}"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D slopeMap;&#xa;uniform sampler2D depthMap;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;uniform float scale;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="3"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="sigmaS"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="sigmaL"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="scale"/>
     <bool name="genericWidgetKeyframed-2" val="0"/>
    </IOData>
    <IOData name="nodeWidget-18">
     <uint name="nbChildren" val="3"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="100"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="7.3"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="7.3"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.027"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.027"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="50"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="3.65"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="3.65"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-18-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-18-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-18-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-19" val="1"/>
    <IOData name="node-19">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="flowField"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float screenRotate;&#xa;uniform float depthRotate;&#xa;uniform float mixFlows;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 flowMap;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float screenRotate;&#xa;uniform float depthRotate;&#xa;uniform float mixFlows;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;#define PI 3.1415926535898&#xa;&#xa;vec2 rotate2D(in vec2 v,in float angle,in vec2 c) {&#xa;  // rotation of v around c with a particular angle&#xa;  vec2 T = v-c;&#xa;  return vec2(cos(angle)*T.x-sin(angle)*T.y,&#xa;&#x9;      sin(angle)*T.x+cos(angle)*T.y) + c;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec4 d = texture(inBuffer0,texcoord);&#xa;&#x9;d.xy = rotate2D(d.xy,screenRotate,vec2(0.));&#xa;&#x9;//d.z *= depthRotate;&#xa;&#xa;&#x9;d.z = smoothstep(0.9,1.,d.z)*depthRotate;&#xa;&#xa;&#x9;vec4 nf = texture(inBuffer1,texcoord);&#xa;&#x9;//d.xy = mix(d.xy,nf.xy,mixFlows);&#xa;&#x9;d.xyz = mix(d.xyz,nf.xyz,mixFlows);&#xa;&#xa;&#x9;flowMap = d;&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float screenRotate;&#xa;uniform float depthRotate;&#xa;uniform float mixFlows;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float screenRotate;&#xa;uniform float depthRotate;&#xa;uniform float mixFlows;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float screenRotate;&#xa;uniform float depthRotate;&#xa;uniform float mixFlows;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="3"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="screenRotate"/>
     <bool name="genericWidgetKeyframed-0" val="0"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="depthRotate"/>
     <bool name="genericWidgetKeyframed-1" val="0"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="mixFlows"/>
     <bool name="genericWidgetKeyframed-2" val="0"/>
    </IOData>
    <IOData name="nodeWidget-19">
     <uint name="nbChildren" val="3"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="6.28319"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.494"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.494"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.094"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.094"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-19-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-19-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-19-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-20" val="1"/>
    <IOData name="node-20">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="depthFlow"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 d1 = texture(inBuffer0,texcoord);&#xa;&#x9;vec4 d2 = texture(inBuffer1,texcoord);&#xa;&#x9;outBuffer0 = vec4(d1.x,d2.xyz);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-20">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-20-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-20-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-20-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-21" val="1"/>
    <IOData name="node-21">
     <string name="filename" val="../../data/imgs/leaves3.png"/>
     <vector2i name="size">
      <int name="0" val="512"/>
      <int name="1" val="512"/>
     </vector2i>
    </IOData>
    <IOData name="nodeWidget-21">
     <bool name="keepAspectRatio" val="0"/>
     <bool name="keepSize" val="0"/>
    </IOData>
    <vector2f name="nodeOutputPos-21-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-22" val="1"/>
    <IOData name="node-22">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 d = texture(inBuffer0,texcoord);&#xa;&#x9;outBuffer0 = vec4(1, 0,0,d.a);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-22">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-22-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-22-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-23" val="1"/>
    <IOData name="node-23">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-23">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-23-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-23-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-24" val="1"/>
    <IOData name="node-24">
     <int name="processMode" val="0"/>
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericPyramid"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;if(isFinest)&#xa;&#x9;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;&#x9;else {&#xa;&#x9;&#x9;vec2 ps = .5*(1./vec2(textureSize(prevLevel0,0)));&#xa;&#x9;&#x9;vec4 c1 = texture(prevLevel0,texcoord+ps);&#xa;&#x9;&#x9;vec4 c2 = texture(prevLevel0,texcoord-ps);&#xa;&#x9;&#x9;vec4 c3 = texture(prevLevel0,texcoord+vec2(ps.x,-ps.y));&#xa;&#x9;&#x9;vec4 c4 = texture(prevLevel0,texcoord+vec2(-ps.x,ps.y));&#xa;&#x9;&#x9;outBuffer0 = 0.25*(c1+c2+c3+c4);&#xa;&#x9;}&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-24">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-24-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-24-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-25" val="1"/>
    <IOData name="node-25"/>
    <IOData name="nodeWidget-25">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="500"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="4"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="4"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-25-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-25-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-26" val="1"/>
    <IOData name="node-26">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="imageGradient"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="10497"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D image;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float scale;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 gradient;&#xa;uniform sampler2D image;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float scale;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;float value(in vec4 c) {&#xa;&#x9;// gradient of what:&#xa;&#x9;return 1.- .9*(c.x+c.y+c.z)/3.;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 ps = 1./vec2(textureSize(image,0));&#xa;&#x9;&#xa;&#x9;vec2 g = vec2(&#x9;value(texture(image,texcoord+vec2(ps.x,0.))) -&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value(texture(image,texcoord-vec2(ps.x,0.))),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value(texture(image,texcoord+vec2(0.,ps.y))) -&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value(texture(image,texcoord-vec2(0.,ps.y))))/2.;&#xa;&#x9;&#xa;&#x9;vec3 n1 = vec3(1.,0.,g.x*scale);&#xa;&#x9;vec3 n2 = vec3(0.,1.,-g.y*scale);&#xa;&#x9;vec3 n = normalize(cross(n1,n2));&#xa;&#xa;&#x9;gradient = vec4(n,texture(inBuffer1,texcoord).w);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D image;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float scale;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D image;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float scale;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D image;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float scale;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="1"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="scale"/>
     <bool name="genericWidgetKeyframed-0" val="0"/>
    </IOData>
    <IOData name="nodeWidget-26">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="1"/>
      <float name="floatAttribMaxVal" val="500"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="24.952"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="24.952"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-26-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-26-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-26-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-27" val="1"/>
    <IOData name="node-27">
     <int name="processMode" val="0"/>
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericPyramid"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;if(isFinest)&#xa;&#x9;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;&#x9;else {&#xa;&#x9;&#x9;vec2 ps = .5*(1./vec2(textureSize(prevLevel0,0)));&#xa;&#x9;&#x9;vec4 c1 = texture(prevLevel0,texcoord+ps);&#xa;&#x9;&#x9;vec4 c2 = texture(prevLevel0,texcoord-ps);&#xa;&#x9;&#x9;vec4 c3 = texture(prevLevel0,texcoord+vec2(ps.x,-ps.y));&#xa;&#x9;&#x9;vec4 c4 = texture(prevLevel0,texcoord+vec2(-ps.x,ps.y));&#xa;&#x9;&#x9;outBuffer0 = 0.25*(c1+c2+c3+c4);&#xa;&#x9;}&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D prevLevel0;&#xa;uniform int nbLevels;&#xa;uniform int numLevel;&#xa;uniform bool isFinest;&#xa;uniform bool isCoarsest;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-27">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-27-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-27-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-28" val="1"/>
    <IOData name="node-28">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="3DGradientNoise"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 proceduralTex;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;vec3 hash33(vec3 p) {&#xa;&#x9;vec3 q = vec3(&#x9;dot(p,vec3(127.1,311.7,74.7)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(269.5,183.3,246.1)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(p,vec3(113.5,271.9,124.6)));&#xa;&#x9;return fract(sin(q)*43758.5453123)*2.-1.;&#xa;}&#xa;&#xa;float gnoise(in vec3 x) {&#xa;&#x9;vec3 p = floor(x);&#xa;&#x9;vec3 f = fract(x);&#xa;    vec3 m = f*f*(3.-2.*f);&#xa;&#xa;&#x9;return mix(&#xa;&#x9;&#x9;&#x9;&#x9;mix(mix(dot(hash33(p+vec3(0.,0.,0.)),f-vec3(0.,0.,0.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,0.,0.)),f-vec3(1.,0.,0.)),m.x),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;  mix(dot(hash33(p+vec3(0.,1.,0.)),f-vec3(0.,1.,0.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,1.,0.)),f-vec3(1.,1.,0.)),m.x),m.y),&#xa;&#x9;&#x9;&#x9;&#x9;mix(mix(dot(hash33(p+vec3(0.,0.,1.)),f-vec3(0.,0.,1.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,0.,1.)),f-vec3(1.,0.,1.)),m.x),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;  mix(dot(hash33(p+vec3(0.,1.,1.)),f-vec3(0.,1.,1.)),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dot(hash33(p+vec3(1.,1.,1.)),f-vec3(1.,1.,1.)),m.x),m.y),m.z)*.5+.5;&#xa;}&#xa;&#xa;float fnoise(in vec3 p,in float amplitude,in float frequency,in float persistence, in int nboctaves) {&#xa;&#x9;float a = amplitude;&#xa;&#x9;float f = frequency;&#xa;&#x9;float n = 0.0;&#xa;&#xa;&#x9;for(int i=0;i&lt;nboctaves;++i) {&#xa;&#x9;&#x9;n = n+a*gnoise(p*f);&#xa;&#x9;&#x9;f = f*2.;&#xa;&#x9;&#x9;a = a*persistence;&#xa;&#x9;}&#xa;&#x9;&#xa;&#x9;return n;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 ps = .5*(1./textureSize(inBuffer0,0).xy); // half pixel size &#xa;&#x9;vec2 psStep  = ps/float(nbSamples+1);&#xa;&#x9;float n2 = 0.;&#xa;&#xa;&#x9;float nb = 0.;&#xa;&#x9;float a = 0.;&#xa;&#x9;vec3 offset = vec3(10.);&#xa;&#x9;for(int i=-nbSamples;i&lt;=nbSamples;++i) {&#xa;&#x9;&#x9;&#x9;for(int j=-nbSamples;j&lt;=nbSamples;++j) {&#xa;&#x9;&#x9;&#x9;&#x9;vec2 coord = texcoord+vec2(float(i),float(j))*psStep;&#xa;&#x9;&#x9;&#x9;&#x9;vec4 data = texture(inBuffer0,coord);&#xa;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;n2 += smoothstep(0.5-style,0.5+style,fnoise((data.xyz+offset)*frequency,amplitude,frequency,persistence,nboctaves));&#xa;&#x9;&#x9;&#x9;&#x9;&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;a += data.w;&#xa;&#x9;&#x9;&#x9;&#x9;nb += 1.;&#xa;&#x9;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;proceduralTex =  vec4(vec3(n2/nb),a/nb);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform float frequency;&#xa;uniform float amplitude;&#xa;uniform float persistence;&#xa;uniform float ZCoord;&#xa;uniform float style;&#xa;uniform int nboctaves;&#xa;uniform int nbSamples;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="7"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="frequency"/>
     <bool name="genericWidgetKeyframed-0" val="1"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="amplitude"/>
     <bool name="genericWidgetKeyframed-1" val="1"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="persistence"/>
     <bool name="genericWidgetKeyframed-2" val="1"/>
     <int name="genericWidgetType-3" val="1"/>
     <int name="genericWidgetView-3" val="1"/>
     <string name="genericWidgetName-3" val="nboctaves"/>
     <bool name="genericWidgetKeyframed-3" val="1"/>
     <int name="genericWidgetType-4" val="0"/>
     <int name="genericWidgetView-4" val="1"/>
     <string name="genericWidgetName-4" val="ZCoord"/>
     <bool name="genericWidgetKeyframed-4" val="1"/>
     <int name="genericWidgetType-5" val="1"/>
     <int name="genericWidgetView-5" val="1"/>
     <string name="genericWidgetName-5" val="nbSamples"/>
     <bool name="genericWidgetKeyframed-5" val="0"/>
     <int name="genericWidgetType-6" val="0"/>
     <int name="genericWidgetView-6" val="1"/>
     <string name="genericWidgetName-6" val="style"/>
     <bool name="genericWidgetKeyframed-6" val="0"/>
    </IOData>
    <IOData name="nodeWidget-28">
     <uint name="nbChildren" val="7"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="100"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="2.5"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="2.5"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.413"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.413"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.619"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.619"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-3">
      <bool name="intAttribKeyframed" val="1"/>
      <int name="intAttribMinVal" val="1"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="5"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="5"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-4">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-5">
      <bool name="intAttribKeyframed" val="0"/>
      <int name="intAttribMinVal" val="0"/>
      <int name="intAttribMaxVal" val="10"/>
      <IOData name="intAttribCurve">
       <int name="currentVal" val="4"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="4"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-6">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.154"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.154"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-28-0">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeOutputPos-28-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-29" val="1"/>
    <IOData name="node-29">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="impulsesPlusSplatSize"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float addSizeVariation;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float addSizeVariation;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 d1 = texture(inBuffer0,texcoord);&#xa;&#x9;vec4 d2 = texture(inBuffer1,texcoord);&#xa;&#x9;float v = mix(1.,d2.x,addSizeVariation);&#xa;&#x9;outBuffer0 = vec4(d1.xyz,v);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float addSizeVariation;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float addSizeVariation;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform float addSizeVariation;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="1"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="addSizeVariation"/>
     <bool name="genericWidgetKeyframed-0" val="0"/>
    </IOData>
    <IOData name="nodeWidget-29">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.8"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.8"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-29-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-29-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-29-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-30" val="1"/>
    <IOData name="node-30">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 d1 = texture(inBuffer0,texcoord);&#xa;&#x9;vec4 d2 = texture(inBuffer1,texcoord);&#xa;&#x9;&#xa;&#x9;d1.w *= (1.-d2.w*0.3);&#xa;&#x9;outBuffer0 = d1;&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-30">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-30-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-30-1">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-30-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-31" val="1"/>
    <IOData name="node-31"/>
    <IOData name="nodeWidget-31">
     <uint name="nbChildren" val="3"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.13"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.13"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0.01"/>
      <float name="floatAttribMaxVal" val="10"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="1"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="1"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="1"/>
      <float name="floatAttribMinVal" val="0.01"/>
      <float name="floatAttribMaxVal" val="8"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.83297"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.83297"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-31-0">
     <float name="0" val="56.32"/>
     <float name="1" val="4364.8"/>
    </vector2f>
    <vector2f name="nodeInputPos-31-1">
     <float name="0" val="56.32"/>
     <float name="1" val="1267.2"/>
    </vector2f>
    <vector2f name="nodeInputPos-31-2">
     <float name="0" val="56.32"/>
     <float name="1" val="3125.76"/>
    </vector2f>
    <vector2f name="nodeInputPos-31-3">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-31-4">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-31-5">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-31-6">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeInputPos-31-7">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-31-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-32" val="1"/>
    <IOData name="node-32">
     <string name="genericGlslVersion" val="410"/>
     <string name="genericNodeName" val="imageGradient"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 gradient;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;float value(in vec4 c) {&#xa;&#x9;// gradient of what:&#xa;&#x9;return (c.x+c.y+c.z)/3.;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 ps = 1./vec2(textureSize(image,0));&#xa;&#x9;&#xa;&#x9;vec2 g = vec2(&#x9;value(texture(image,texcoord+vec2(ps.x,0.))) -&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value(texture(image,texcoord-vec2(ps.x,0.))),&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value(texture(image,texcoord+vec2(0.,ps.y))) -&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;value(texture(image,texcoord-vec2(0.,ps.y))))/2.;&#xa;&#x9;&#xa;&#x9;gradient = vec4(-g*500,0.,texture(image,texcoord).w);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D image;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-32">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-32-0">
     <float name="0" val="56.32"/>
     <float name="1" val="647.68"/>
    </vector2f>
    <vector2f name="nodeOutputPos-32-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-33" val="1"/>
    <IOData name="node-33">
     <string name="filename" val="../../data/imgs/leaves1_centered.png"/>
     <vector2i name="size">
      <int name="0" val="512"/>
      <int name="1" val="512"/>
     </vector2i>
    </IOData>
    <IOData name="nodeWidget-33">
     <bool name="keepAspectRatio" val="0"/>
     <bool name="keepSize" val="0"/>
    </IOData>
    <vector2f name="nodeOutputPos-33-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-34" val="1"/>
    <IOData name="node-34">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 d = texture(inBuffer0,texcoord);&#xa;&#x9;outBuffer0 = vec4(1, 0,0,d.a);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="1"/>
      <float name="1" val="1"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-34">
     <uint name="nbChildren" val="0"/>
    </IOData>
    <vector2f name="nodeInputPos-34-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-34-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-35" val="1"/>
    <IOData name="node-35">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="imgGeneric"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform float S;&#xa;uniform float D;&#xa;uniform float O;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 ridge;&#xa;uniform float S;&#xa;uniform float D;&#xa;uniform float O;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;float distToSegment(in vec2 p1,in vec2 p2, in vec2 p) {&#xa;&#x9;float l = length(p2-p1);&#xa;&#x9;float l2 = l*l;&#xa;&#x9;if(l2==0.0) return distance(p1,p);&#xa;&#x9;&#xa;&#x9;float t = dot(p-p1,p2-p1)/l2;&#xa;&#x9;if(t&lt;0.0) return distance(p1,p);&#xa;&#x9;if(t>1.0) return distance(p2,p);&#xa;&#x9;vec2 proj = p1+t*(p2-p1);&#xa;&#x9;return distance(proj,p);&#xa;}&#xa;&#xa;float createRidge(in vec2 p1,in vec2 p2) {&#xa;&#x9;vec2 coord = texcoord;&#xa;&#xa;&#x9;coord.x = coord.x+sin(coord.y*50.*D+O)*0.1;&#xa;&#xa;&#x9;float d = distToSegment(p1,p2,coord);&#xa;&#xa;&#x9;// relative distance between p1.y/p2.y&#xa;&#x9;float x1 = min(p1.y,p2.y);&#xa;&#x9;float x2 = max(p1.y,p2.y);&#xa;&#xa;&#x9;float f = (coord.y-x1)/(x2-x1);&#xa;&#x9;float t = (1.-f)*0.01;&#xa;&#x9;float s = smoothstep(t-S,t+S,d);&#xa;&#x9;return s;&#xa;}&#xa;&#xa;vec2 rotate(in vec2 pt,in float theta) {&#xa;&#x9;vec2 p = pt-0.5;&#xa;&#x9;float ct = cos(theta);&#xa;&#x9;float st = sin(theta);&#xa;&#xa;&#x9;float x = ct*p.x-st*p.y;&#xa;&#x9;float y = st*p.x+ct*p.y;&#xa;&#x9;return vec2(x,y)+0.5;&#xa;}&#xa;&#xa;void main() {&#xa;&#x9;vec2 pt1 = vec2(0.5,0.1);&#xa;&#x9;vec2 pt2 = vec2(0.5,0.9);&#xa;&#xa;&#x9;float r1 = createRidge(pt1,pt2);&#xa;&#x9;float l = 1.;//min(texcoord.y*0.5+0.5+0.2,1.);&#xa;&#x9;ridge = vec4(vec3(l,0.,r1),1.-r1);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform float S;&#xa;uniform float D;&#xa;uniform float O;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform float S;&#xa;uniform float D;&#xa;uniform float O;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform float S;&#xa;uniform float D;&#xa;uniform float O;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="3"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="S"/>
     <bool name="genericWidgetKeyframed-0" val="0"/>
     <int name="genericWidgetType-1" val="0"/>
     <int name="genericWidgetView-1" val="1"/>
     <string name="genericWidgetName-1" val="D"/>
     <bool name="genericWidgetKeyframed-1" val="0"/>
     <int name="genericWidgetType-2" val="0"/>
     <int name="genericWidgetView-2" val="1"/>
     <string name="genericWidgetName-2" val="O"/>
     <bool name="genericWidgetKeyframed-2" val="0"/>
    </IOData>
    <IOData name="nodeWidget-35">
     <uint name="nbChildren" val="3"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.002"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.002"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="1"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.18"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.18"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-2">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="100"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="16.5"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="16.5"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeOutputPos-35-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-36" val="1"/>
    <IOData name="node-36">
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericImage"/>
     <bool name="genericUseVertex" val="0"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="0"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform float S;&#xa;"/>
     <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 img;&#xa;uniform float S;&#xa;"/>
     <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;float x = distance(texcoord,vec2(.5));&#xa;&#xa;&#x9;float s = smoothstep(0.25-S,0.25+S,x);&#xa;&#x9;float a = 1.-s;&#xa;&#x9;img = vec4(vec3(s),a);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform float S;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform float S;&#xa;"/>
     <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform float S;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="1"/>
     <int name="genericWidgetType-0" val="0"/>
     <int name="genericWidgetView-0" val="1"/>
     <string name="genericWidgetName-0" val="S"/>
     <bool name="genericWidgetKeyframed-0" val="0"/>
    </IOData>
    <IOData name="nodeWidget-36">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="floatAttribKeyframed" val="0"/>
      <float name="floatAttribMinVal" val="0"/>
      <float name="floatAttribMaxVal" val="0.2"/>
      <IOData name="floatAttribCurve">
       <float name="currentVal" val="0.0392"/>
       <uint name="nbCurves" val="1"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.0392"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeOutputPos-36-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
   </IOData>
   <float name="scale" val="9.48633"/>
   <vector2f name="offset">
    <float name="0" val="1824.67"/>
    <float name="1" val="5266.07"/>
   </vector2f>
   <IOData name="animation">
    <uint name="firstFrame" val="0"/>
    <uint name="lastFrame" val="299"/>
    <uint name="currentFrame" val="155"/>
    <uint name="fps" val="30"/>
   </IOData>
  </IOData>
  <IOData name="animationWidget">
   <vector2i name="animationWidgetSize">
    <int name="0" val="1920"/>
    <int name="1" val="393"/>
   </vector2i>
   <IOData name="timelineWidget"/>
  </IOData>
  <IOData name="nodeListWidget"/>
  <IOData name="interactionWidget">
   <float name="scale" val="1.23693"/>
   <vector2f name="offset">
    <float name="0" val="626.756"/>
    <float name="1" val="277.51"/>
   </vector2f>
  </IOData>
  <IOData name="nodeInterfaceWidget"/>
 </IOData>
</Gratin>
